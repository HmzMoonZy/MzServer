
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using Luban;
using Newtonsoft.Json.Linq;



namespace HotFix.Cfg
{

public sealed partial class Hero_heroList : Luban.BeanBase
{
    public Hero_heroList(JToken _buf) 
    {
        JObject _obj = _buf as JObject;
        id = (int)_obj.GetValue("id");
        { var __json0 = _obj.GetValue("initSkin"); int _n0 = (__json0 as JArray).Count; initSkin = new int[_n0]; int __index0=0; foreach(JToken __e0 in __json0) { int __v0;  __v0 = (int)__e0;  initSkin[__index0++] = __v0; }   }
        quality = (int)_obj.GetValue("quality");
        memberId = (int)_obj.GetValue("memberId");
        { var __json0 = _obj.GetValue("skillGroupID"); int _n0 = (__json0 as JArray).Count; skillGroupID = new int[_n0]; int __index0=0; foreach(JToken __e0 in __json0) { int __v0;  __v0 = (int)__e0;  skillGroupID[__index0++] = __v0; }   }
        { var __json0 = _obj.GetValue("competency"); int _n0 = (__json0 as JArray).Count; competency = new string[_n0]; int __index0=0; foreach(JToken __e0 in __json0) { string __v0;  __v0 = (string)__e0;  competency[__index0++] = __v0; }   }
        unlockType = (int)_obj.GetValue("unlockType");
        { var __json0 = _obj.GetValue("condition"); int _n0 = (__json0 as JArray).Count; condition = new string[_n0]; int __index0=0; foreach(JToken __e0 in __json0) { string __v0;  __v0 = (string)__e0;  condition[__index0++] = __v0; }   }
        { var __json0 = _obj.GetValue("toFragment"); int _n0 = (__json0 as JArray).Count; toFragment = new string[_n0]; int __index0=0; foreach(JToken __e0 in __json0) { string __v0;  __v0 = (string)__e0;  toFragment[__index0++] = __v0; }   }
        nameID = (string)_obj.GetValue("nameID");
        atlasID = (int)_obj.GetValue("atlasID");
        cardIcon = (string)_obj.GetValue("cardIcon");
        previewIconId = (int)_obj.GetValue("previewIconId");
        previewIcon = (string)_obj.GetValue("previewIcon");
        { var __json0 = _obj.GetValue("itemGet"); int _n0 = (__json0 as JArray).Count; itemGet = new string[_n0]; int __index0=0; foreach(JToken __e0 in __json0) { string __v0;  __v0 = (string)__e0;  itemGet[__index0++] = __v0; }   }
        showSoundId = (int)_obj.GetValue("showSoundId");
        heroEnterIconId = (int)_obj.GetValue("heroEnterIconId");
        heroEnterIcon = (string)_obj.GetValue("heroEnterIcon");
        equipSpineId = (int)_obj.GetValue("equipSpineId");
        ifChangeEquipSkin = (int)_obj.GetValue("ifChangeEquipSkin");
        WeaponType = (int)_obj.GetValue("WeaponType");
        { var __json0 = _obj.GetValue("systemLangNone"); int _n0 = (__json0 as JArray).Count; systemLangNone = new string[_n0]; int __index0=0; foreach(JToken __e0 in __json0) { string __v0;  __v0 = (string)__e0;  systemLangNone[__index0++] = __v0; }   }
        showWorldBtn = (int)_obj.GetValue("showWorldBtn");
    }

    public static Hero_heroList DeserializeHero_heroList(JToken _buf)
    {
        return new Hero_heroList(_buf);
    }

    /// <summary>
    /// 英雄ID
    /// </summary>
    public readonly int id;
    /// <summary>
    /// 默认初始皮肤<br/>(头，身体，背)
    /// </summary>
    public readonly int[] initSkin;
    /// <summary>
    /// 品质
    /// </summary>
    public readonly int quality;
    /// <summary>
    /// memberId<br/>(gameMemberId)
    /// </summary>
    public readonly int memberId;
    /// <summary>
    /// 归属英雄技能组
    /// </summary>
    public readonly int[] skillGroupID;
    /// <summary>
    /// 英雄资质<br/>（不再读取game member的属性、技能列）
    /// </summary>
    public readonly string[] competency;
    /// <summary>
    /// 解锁方式<br/>1.礼包直购<br/>2.宝石购买<br/>3.碎片解锁
    /// </summary>
    public readonly int unlockType;
    /// <summary>
    /// 根据unlockType<br/>1礼包ID<br/>2宝石价格<br/>3对应碎片
    /// </summary>
    public readonly string[] condition;
    /// <summary>
    /// 同名转化碎片数量
    /// </summary>
    public readonly string[] toFragment;
    /// <summary>
    /// 名称多语言
    /// </summary>
    public readonly string nameID;
    /// <summary>
    /// 卡片icon图集id
    /// </summary>
    public readonly int atlasID;
    /// <summary>
    /// 卡片icon
    /// </summary>
    public readonly string cardIcon;
    /// <summary>
    /// 头像图集
    /// </summary>
    public readonly int previewIconId;
    /// <summary>
    /// 头像
    /// </summary>
    public readonly string previewIcon;
    /// <summary>
    /// 解锁后获得道具
    /// </summary>
    public readonly string[] itemGet;
    /// <summary>
    /// 出场音效id
    /// </summary>
    public readonly int showSoundId;
    /// <summary>
    /// 英雄入口图集
    /// </summary>
    public readonly int heroEnterIconId;
    /// <summary>
    /// 英雄入口icon
    /// </summary>
    public readonly string heroEnterIcon;
    /// <summary>
    /// 武器动画
    /// </summary>
    public readonly int equipSpineId;
    /// <summary>
    /// 是否可以切换武器
    /// </summary>
    public readonly int ifChangeEquipSkin;
    /// <summary>
    /// 武器类型
    /// </summary>
    public readonly int WeaponType;
    /// <summary>
    /// 哪几种系统语言不显示
    /// </summary>
    public readonly string[] systemLangNone;
    /// <summary>
    /// 是否显示世界按钮
    /// </summary>
    public readonly int showWorldBtn;


    public const int __ID__ = 941445693;
    public override int GetTypeId() => __ID__;

    public  void ResolveRef(Tables tables)
    {
    }

    public override string ToString()
    {
        return "{ "
        + "id:" + id + ","
        + "initSkin:" + Luban.StringUtil.CollectionToString(initSkin) + ","
        + "quality:" + quality + ","
        + "memberId:" + memberId + ","
        + "skillGroupID:" + Luban.StringUtil.CollectionToString(skillGroupID) + ","
        + "competency:" + Luban.StringUtil.CollectionToString(competency) + ","
        + "unlockType:" + unlockType + ","
        + "condition:" + Luban.StringUtil.CollectionToString(condition) + ","
        + "toFragment:" + Luban.StringUtil.CollectionToString(toFragment) + ","
        + "nameID:" + nameID + ","
        + "atlasID:" + atlasID + ","
        + "cardIcon:" + cardIcon + ","
        + "previewIconId:" + previewIconId + ","
        + "previewIcon:" + previewIcon + ","
        + "itemGet:" + Luban.StringUtil.CollectionToString(itemGet) + ","
        + "showSoundId:" + showSoundId + ","
        + "heroEnterIconId:" + heroEnterIconId + ","
        + "heroEnterIcon:" + heroEnterIcon + ","
        + "equipSpineId:" + equipSpineId + ","
        + "ifChangeEquipSkin:" + ifChangeEquipSkin + ","
        + "WeaponType:" + WeaponType + ","
        + "systemLangNone:" + Luban.StringUtil.CollectionToString(systemLangNone) + ","
        + "showWorldBtn:" + showWorldBtn + ","
        + "}";
    }
}
}

