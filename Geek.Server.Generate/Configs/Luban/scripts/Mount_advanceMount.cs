
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using Luban;
using Newtonsoft.Json.Linq;



namespace HotFix.Cfg
{

public sealed partial class Mount_advanceMount : Luban.BeanBase
{
    public Mount_advanceMount(JToken _buf) 
    {
        JObject _obj = _buf as JObject;
        id = (int)_obj.GetValue("id");
        { var __json0 = _obj.GetValue("awakeID"); int _n0 = (__json0 as JArray).Count; awakeID = new string[_n0]; int __index0=0; foreach(JToken __e0 in __json0) { string __v0;  __v0 = (string)__e0;  awakeID[__index0++] = __v0; }   }
        memberId = (int)_obj.GetValue("memberId");
        quality = (int)_obj.GetValue("quality");
        initSkill = (int)_obj.GetValue("initSkill");
        maxStarSkill = (int)_obj.GetValue("maxStarSkill");
        maxStar = (int)_obj.GetValue("maxStar");
        unlockCostId = (int)_obj.GetValue("unlockCostId");
        { var __json0 = _obj.GetValue("starCostOld"); int _n0 = (__json0 as JArray).Count; starCostOld = new string[_n0]; int __index0=0; foreach(JToken __e0 in __json0) { string __v0;  __v0 = (string)__e0;  starCostOld[__index0++] = __v0; }   }
        { var __json0 = _obj.GetValue("starCost"); int _n0 = (__json0 as JArray).Count; starCost = new string[_n0]; int __index0=0; foreach(JToken __e0 in __json0) { string __v0;  __v0 = (string)__e0;  starCost[__index0++] = __v0; }   }
        { var __json0 = _obj.GetValue("compensate"); int _n0 = (__json0 as JArray).Count; compensate = new string[_n0]; int __index0=0; foreach(JToken __e0 in __json0) { string __v0;  __v0 = (string)__e0;  compensate[__index0++] = __v0; }   }
        { var __json0 = _obj.GetValue("attribute"); int _n0 = (__json0 as JArray).Count; attribute = new string[_n0]; int __index0=0; foreach(JToken __e0 in __json0) { string __v0;  __v0 = (string)__e0;  attribute[__index0++] = __v0; }   }
        { var __json0 = _obj.GetValue("levelAttribute"); int _n0 = (__json0 as JArray).Count; levelAttribute = new string[_n0]; int __index0=0; foreach(JToken __e0 in __json0) { string __v0;  __v0 = (string)__e0;  levelAttribute[__index0++] = __v0; }   }
        { var __json0 = _obj.GetValue("power"); int _n0 = (__json0 as JArray).Count; power = new string[_n0]; int __index0=0; foreach(JToken __e0 in __json0) { string __v0;  __v0 = (string)__e0;  power[__index0++] = __v0; }   }
        { var __json0 = _obj.GetValue("activePower"); int _n0 = (__json0 as JArray).Count; activePower = new string[_n0]; int __index0=0; foreach(JToken __e0 in __json0) { string __v0;  __v0 = (string)__e0;  activePower[__index0++] = __v0; }   }
    }

    public static Mount_advanceMount DeserializeMount_advanceMount(JToken _buf)
    {
        return new Mount_advanceMount(_buf);
    }

    /// <summary>
    /// 内容ID
    /// </summary>
    public readonly int id;
    /// <summary>
    /// 觉醒id
    /// </summary>
    public readonly string[] awakeID;
    /// <summary>
    /// member表id
    /// </summary>
    public readonly int memberId;
    /// <summary>
    /// 品质
    /// </summary>
    public readonly int quality;
    /// <summary>
    /// 初始技能
    /// </summary>
    public readonly int initSkill;
    /// <summary>
    /// 5星技能
    /// </summary>
    public readonly int maxStarSkill;
    /// <summary>
    /// 最大星级
    /// </summary>
    public readonly int maxStar;
    /// <summary>
    /// 解锁消耗道具
    /// </summary>
    public readonly int unlockCostId;
    /// <summary>
    /// 升星消耗<br/>0升1星|1升2星…
    /// </summary>
    public readonly string[] starCostOld;
    /// <summary>
    /// 升星消耗<br/>0升1星|1升2星…
    /// </summary>
    public readonly string[] starCost;
    /// <summary>
    /// 降低升星消耗一次性补偿自选箱
    /// </summary>
    public readonly string[] compensate;
    /// <summary>
    /// 拥有属性
    /// </summary>
    public readonly string[] attribute;
    /// <summary>
    /// 拥有属性强化值
    /// </summary>
    public readonly string[] levelAttribute;
    /// <summary>
    /// 层数2万分比战力<br/>层数3万分比战力<br/>（拥有增加战力）
    /// </summary>
    public readonly string[] power;
    /// <summary>
    /// 层数2万分比战力<br/>层数3万分比战力<br/>（上阵增加战力）
    /// </summary>
    public readonly string[] activePower;


    public const int __ID__ = 1285275453;
    public override int GetTypeId() => __ID__;

    public  void ResolveRef(Tables tables)
    {
    }

    public override string ToString()
    {
        return "{ "
        + "id:" + id + ","
        + "awakeID:" + Luban.StringUtil.CollectionToString(awakeID) + ","
        + "memberId:" + memberId + ","
        + "quality:" + quality + ","
        + "initSkill:" + initSkill + ","
        + "maxStarSkill:" + maxStarSkill + ","
        + "maxStar:" + maxStar + ","
        + "unlockCostId:" + unlockCostId + ","
        + "starCostOld:" + Luban.StringUtil.CollectionToString(starCostOld) + ","
        + "starCost:" + Luban.StringUtil.CollectionToString(starCost) + ","
        + "compensate:" + Luban.StringUtil.CollectionToString(compensate) + ","
        + "attribute:" + Luban.StringUtil.CollectionToString(attribute) + ","
        + "levelAttribute:" + Luban.StringUtil.CollectionToString(levelAttribute) + ","
        + "power:" + Luban.StringUtil.CollectionToString(power) + ","
        + "activePower:" + Luban.StringUtil.CollectionToString(activePower) + ","
        + "}";
    }
}
}

