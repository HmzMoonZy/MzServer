
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using Luban;
using Newtonsoft.Json.Linq;



namespace HotFix.Cfg
{

public sealed partial class Artifact_ArtifactAwake : Luban.BeanBase
{
    public Artifact_ArtifactAwake(JToken _buf) 
    {
        JObject _obj = _buf as JObject;
        id = (int)_obj.GetValue("id");
        AwakeLevel = (int)_obj.GetValue("AwakeLevel");
        { var __json0 = _obj.GetValue("AwakeCost"); int _n0 = (__json0 as JArray).Count; AwakeCost = new string[_n0]; int __index0=0; foreach(JToken __e0 in __json0) { string __v0;  __v0 = (string)__e0;  AwakeCost[__index0++] = __v0; }   }
        atkFactor = (int)_obj.GetValue("atkFactor");
        SkillLevel = (int)_obj.GetValue("SkillLevel");
        { var __json0 = _obj.GetValue("initSkill"); int _n0 = (__json0 as JArray).Count; initSkill = new int[_n0]; int __index0=0; foreach(JToken __e0 in __json0) { int __v0;  __v0 = (int)__e0;  initSkill[__index0++] = __v0; }   }
        initSkillSimple = (string)_obj.GetValue("initSkillSimple");
        UpDescribe = (string)_obj.GetValue("UpDescribe");
        { var __json0 = _obj.GetValue("attribute"); int _n0 = (__json0 as JArray).Count; attribute = new string[_n0]; int __index0=0; foreach(JToken __e0 in __json0) { string __v0;  __v0 = (string)__e0;  attribute[__index0++] = __v0; }   }
        { var __json0 = _obj.GetValue("power"); int _n0 = (__json0 as JArray).Count; power = new int[_n0]; int __index0=0; foreach(JToken __e0 in __json0) { int __v0;  __v0 = (int)__e0;  power[__index0++] = __v0; }   }
        { var __json0 = _obj.GetValue("activePower"); int _n0 = (__json0 as JArray).Count; activePower = new int[_n0]; int __index0=0; foreach(JToken __e0 in __json0) { int __v0;  __v0 = (int)__e0;  activePower[__index0++] = __v0; }   }
    }

    public static Artifact_ArtifactAwake DeserializeArtifact_ArtifactAwake(JToken _buf)
    {
        return new Artifact_ArtifactAwake(_buf);
    }

    /// <summary>
    /// 对应advanceArtifact里的ID<br/>id*100+level
    /// </summary>
    public readonly int id;
    /// <summary>
    /// 觉醒等级
    /// </summary>
    public readonly int AwakeLevel;
    /// <summary>
    /// 觉醒消耗
    /// </summary>
    public readonly string[] AwakeCost;
    /// <summary>
    /// 神器攻击系数(万分比)
    /// </summary>
    public readonly int atkFactor;
    /// <summary>
    /// 神器技能等级
    /// </summary>
    public readonly int SkillLevel;
    /// <summary>
    /// 神器技能
    /// </summary>
    public readonly int[] initSkill;
    /// <summary>
    /// 神器技能简略版
    /// </summary>
    public readonly string initSkillSimple;
    /// <summary>
    /// 升级预览描述
    /// </summary>
    public readonly string UpDescribe;
    /// <summary>
    /// 觉醒属性
    /// </summary>
    public readonly string[] attribute;
    /// <summary>
    /// 层数2万分比战力<br/>层数3万分比战力<br/>（拥有增加战力）
    /// </summary>
    public readonly int[] power;
    /// <summary>
    /// 层数2万分比战力<br/>层数3万分比战力<br/>（上阵增加战力）
    /// </summary>
    public readonly int[] activePower;


    public const int __ID__ = 258372390;
    public override int GetTypeId() => __ID__;

    public  void ResolveRef(Tables tables)
    {
    }

    public override string ToString()
    {
        return "{ "
        + "id:" + id + ","
        + "AwakeLevel:" + AwakeLevel + ","
        + "AwakeCost:" + Luban.StringUtil.CollectionToString(AwakeCost) + ","
        + "atkFactor:" + atkFactor + ","
        + "SkillLevel:" + SkillLevel + ","
        + "initSkill:" + Luban.StringUtil.CollectionToString(initSkill) + ","
        + "initSkillSimple:" + initSkillSimple + ","
        + "UpDescribe:" + UpDescribe + ","
        + "attribute:" + Luban.StringUtil.CollectionToString(attribute) + ","
        + "power:" + Luban.StringUtil.CollectionToString(power) + ","
        + "activePower:" + Luban.StringUtil.CollectionToString(activePower) + ","
        + "}";
    }
}
}

