
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using Luban;


namespace HotFix.Cfg
{
public sealed partial class TalentNew_talentEvolution : Luban.BeanBase
{
    public TalentNew_talentEvolution(ByteBuf _buf) 
    {
        id = _buf.ReadInt();
        type = _buf.ReadInt();
        modelID = _buf.ReadString();
        iconAtlasID = _buf.ReadInt();
        iconSpriteName = _buf.ReadString();
        exp = _buf.ReadInt();
        evolutionAttributes = _buf.ReadString();
        attributeGroup = _buf.ReadString();
        levelLimit = _buf.ReadInt();
        {int __n0 = System.Math.Min(_buf.ReadSize(), _buf.Size);levelupCost = new long[__n0];for(var __index0 = 0 ; __index0 < __n0 ; __index0++) { long __e0;__e0 = _buf.ReadLong(); levelupCost[__index0] = __e0;}}
        stepLanguageId = _buf.ReadString();
        desc = _buf.ReadString();
        {int __n0 = System.Math.Min(_buf.ReadSize(), _buf.Size);powerLvl = new string[__n0];for(var __index0 = 0 ; __index0 < __n0 ; __index0++) { string __e0;__e0 = _buf.ReadString(); powerLvl[__index0] = __e0;}}
        {int __n0 = System.Math.Min(_buf.ReadSize(), _buf.Size);powerEvolution = new string[__n0];for(var __index0 = 0 ; __index0 < __n0 ; __index0++) { string __e0;__e0 = _buf.ReadString(); powerEvolution[__index0] = __e0;}}
    }

    public static TalentNew_talentEvolution DeserializeTalentNew_talentEvolution(ByteBuf _buf)
    {
        return new TalentNew_talentEvolution(_buf);
    }

    /// <summary>
    /// 进化ID
    /// </summary>
    public readonly int id;
    /// <summary>
    /// 进化类型<br/>1-小；2-中；3-大
    /// </summary>
    public readonly int type;
    /// <summary>
    /// 主角模型
    /// </summary>
    public readonly string modelID;
    /// <summary>
    /// 进化icon图集ID
    /// </summary>
    public readonly int iconAtlasID;
    /// <summary>
    /// 进化icon切片名称
    /// </summary>
    public readonly string iconSpriteName;
    /// <summary>
    /// 到达此阶段属性经验数
    /// </summary>
    public readonly int exp;
    /// <summary>
    /// 进化属性
    /// </summary>
    public readonly string evolutionAttributes;
    /// <summary>
    /// 属性点
    /// </summary>
    public readonly string attributeGroup;
    /// <summary>
    /// 属性点等级上限
    /// </summary>
    public readonly int levelLimit;
    /// <summary>
    /// 升级消耗
    /// </summary>
    public readonly long[] levelupCost;
    /// <summary>
    /// 阶段名称多语言
    /// </summary>
    public readonly string stepLanguageId;
    /// <summary>
    /// 阶段说明
    /// </summary>
    public readonly string desc;
    /// <summary>
    /// 基础战力,万分比战力,固定值战力<br/>升级战力
    /// </summary>
    public readonly string[] powerLvl;
    /// <summary>
    /// 基础战力,万分比战力,固定值战力<br/>进化战力
    /// </summary>
    public readonly string[] powerEvolution;
   
    public const int __ID__ = 773795492;
    public override int GetTypeId() => __ID__;

    public  void ResolveRef(Tables tables)
    {
    }

    public override string ToString()
    {
        return "{ "
        + "id:" + id + ","
        + "type:" + type + ","
        + "modelID:" + modelID + ","
        + "iconAtlasID:" + iconAtlasID + ","
        + "iconSpriteName:" + iconSpriteName + ","
        + "exp:" + exp + ","
        + "evolutionAttributes:" + evolutionAttributes + ","
        + "attributeGroup:" + attributeGroup + ","
        + "levelLimit:" + levelLimit + ","
        + "levelupCost:" + Luban.StringUtil.CollectionToString(levelupCost) + ","
        + "stepLanguageId:" + stepLanguageId + ","
        + "desc:" + desc + ","
        + "powerLvl:" + Luban.StringUtil.CollectionToString(powerLvl) + ","
        + "powerEvolution:" + Luban.StringUtil.CollectionToString(powerEvolution) + ","
        + "}";
    }
}

}

