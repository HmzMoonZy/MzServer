
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using Luban;
using Newtonsoft.Json.Linq;



namespace HotFix.Cfg
{

public sealed partial class TalentNew_talentEvolution : Luban.BeanBase
{
    public TalentNew_talentEvolution(JToken _buf) 
    {
        JObject _obj = _buf as JObject;
        id = (int)_obj.GetValue("id");
        type = (int)_obj.GetValue("type");
        modelID = (string)_obj.GetValue("modelID");
        iconAtlasID = (int)_obj.GetValue("iconAtlasID");
        iconSpriteName = (string)_obj.GetValue("iconSpriteName");
        exp = (int)_obj.GetValue("exp");
        evolutionAttributes = (string)_obj.GetValue("evolutionAttributes");
        attributeGroup = (string)_obj.GetValue("attributeGroup");
        levelLimit = (int)_obj.GetValue("levelLimit");
        { var __json0 = _obj.GetValue("levelupCost"); int _n0 = (__json0 as JArray).Count; levelupCost = new long[_n0]; int __index0=0; foreach(JToken __e0 in __json0) { long __v0;  __v0 = (long)__e0;  levelupCost[__index0++] = __v0; }   }
        stepLanguageId = (string)_obj.GetValue("stepLanguageId");
        desc = (string)_obj.GetValue("desc");
        { var __json0 = _obj.GetValue("powerLvl"); int _n0 = (__json0 as JArray).Count; powerLvl = new string[_n0]; int __index0=0; foreach(JToken __e0 in __json0) { string __v0;  __v0 = (string)__e0;  powerLvl[__index0++] = __v0; }   }
        { var __json0 = _obj.GetValue("powerEvolution"); int _n0 = (__json0 as JArray).Count; powerEvolution = new string[_n0]; int __index0=0; foreach(JToken __e0 in __json0) { string __v0;  __v0 = (string)__e0;  powerEvolution[__index0++] = __v0; }   }
    }

    public static TalentNew_talentEvolution DeserializeTalentNew_talentEvolution(JToken _buf)
    {
        return new TalentNew_talentEvolution(_buf);
    }

    /// <summary>
    /// 进化ID
    /// </summary>
    public readonly int id;
    /// <summary>
    /// 进化类型<br/>1-小；2-中；3-大
    /// </summary>
    public readonly int type;
    /// <summary>
    /// 主角模型
    /// </summary>
    public readonly string modelID;
    /// <summary>
    /// 进化icon图集ID
    /// </summary>
    public readonly int iconAtlasID;
    /// <summary>
    /// 进化icon切片名称
    /// </summary>
    public readonly string iconSpriteName;
    /// <summary>
    /// 到达此阶段属性经验数
    /// </summary>
    public readonly int exp;
    /// <summary>
    /// 进化属性
    /// </summary>
    public readonly string evolutionAttributes;
    /// <summary>
    /// 属性点
    /// </summary>
    public readonly string attributeGroup;
    /// <summary>
    /// 属性点等级上限
    /// </summary>
    public readonly int levelLimit;
    /// <summary>
    /// 升级消耗
    /// </summary>
    public readonly long[] levelupCost;
    /// <summary>
    /// 阶段名称多语言
    /// </summary>
    public readonly string stepLanguageId;
    /// <summary>
    /// 阶段说明
    /// </summary>
    public readonly string desc;
    /// <summary>
    /// 基础战力,万分比战力,固定值战力<br/>升级战力
    /// </summary>
    public readonly string[] powerLvl;
    /// <summary>
    /// 基础战力,万分比战力,固定值战力<br/>进化战力
    /// </summary>
    public readonly string[] powerEvolution;


    public const int __ID__ = 773795492;
    public override int GetTypeId() => __ID__;

    public  void ResolveRef(Tables tables)
    {
    }

    public override string ToString()
    {
        return "{ "
        + "id:" + id + ","
        + "type:" + type + ","
        + "modelID:" + modelID + ","
        + "iconAtlasID:" + iconAtlasID + ","
        + "iconSpriteName:" + iconSpriteName + ","
        + "exp:" + exp + ","
        + "evolutionAttributes:" + evolutionAttributes + ","
        + "attributeGroup:" + attributeGroup + ","
        + "levelLimit:" + levelLimit + ","
        + "levelupCost:" + Luban.StringUtil.CollectionToString(levelupCost) + ","
        + "stepLanguageId:" + stepLanguageId + ","
        + "desc:" + desc + ","
        + "powerLvl:" + Luban.StringUtil.CollectionToString(powerLvl) + ","
        + "powerEvolution:" + Luban.StringUtil.CollectionToString(powerEvolution) + ","
        + "}";
    }
}
}

