
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using Luban;
using Newtonsoft.Json.Linq;



namespace HotFix.Cfg
{

public sealed partial class ServerList_serverListCN : Luban.BeanBase
{
    public ServerList_serverListCN(JToken _buf) 
    {
        JObject _obj = _buf as JObject;
        id = (int)_obj.GetValue("id");
        desc = (string)_obj.GetValue("desc");
        { var __json0 = _obj.GetValue("range"); int _n0 = (__json0 as JArray).Count; range = new int[_n0]; int __index0=0; foreach(JToken __e0 in __json0) { int __v0;  __v0 = (int)__e0;  range[__index0++] = __v0; }   }
        { var __json0 = _obj.GetValue("mark"); int _n0 = (__json0 as JArray).Count; mark = new string[_n0]; int __index0=0; foreach(JToken __e0 in __json0) { string __v0;  __v0 = (string)__e0;  mark[__index0++] = __v0; }   }
        conditionCountMax = (int)_obj.GetValue("conditionCountMax");
        conditionCountMin = (int)_obj.GetValue("conditionCountMin");
        conditionDay = (int)_obj.GetValue("conditionDay");
        { var __json0 = _obj.GetValue("statusNew"); int _n0 = (__json0 as JArray).Count; statusNew = new int[_n0]; int __index0=0; foreach(JToken __e0 in __json0) { int __v0;  __v0 = (int)__e0;  statusNew[__index0++] = __v0; }   }
        { var __json0 = _obj.GetValue("statusFull"); int _n0 = (__json0 as JArray).Count; statusFull = new int[_n0]; int __index0=0; foreach(JToken __e0 in __json0) { int __v0;  __v0 = (int)__e0;  statusFull[__index0++] = __v0; }   }
        sortId = (int)_obj.GetValue("sortId");
        serverPrefix = (string)_obj.GetValue("serverPrefix");
        nameId = (string)_obj.GetValue("nameId");
    }

    public static ServerList_serverListCN DeserializeServerList_serverListCN(JToken _buf)
    {
        return new ServerList_serverListCN(_buf);
    }

    /// <summary>
    /// id
    /// </summary>
    public readonly int id;
    /// <summary>
    /// 描述
    /// </summary>
    public readonly string desc;
    /// <summary>
    /// 范围
    /// </summary>
    public readonly int[] range;
    /// <summary>
    /// 标记
    /// </summary>
    public readonly string[] mark;
    /// <summary>
    /// 开服条件1-最大人数 &gt;
    /// </summary>
    public readonly int conditionCountMax;
    /// <summary>
    /// 开服条件2-最小人数 &gt;=
    /// </summary>
    public readonly int conditionCountMin;
    /// <summary>
    /// 开服条件2-天数 &gt;=
    /// </summary>
    public readonly int conditionDay;
    /// <summary>
    /// 新 &lt;天|&lt;人数
    /// </summary>
    public readonly int[] statusNew;
    /// <summary>
    /// 爆满 &gt;=天|&gt;=人数
    /// </summary>
    public readonly int[] statusFull;
    /// <summary>
    /// Tab排序id<br/>0已占用，数字越小显示越靠前
    /// </summary>
    public readonly int sortId;
    /// <summary>
    /// 服务器名前缀
    /// </summary>
    public readonly string serverPrefix;
    /// <summary>
    /// 大区名称
    /// </summary>
    public readonly string nameId;


    public const int __ID__ = 1140885386;
    public override int GetTypeId() => __ID__;

    public  void ResolveRef(Tables tables)
    {
    }

    public override string ToString()
    {
        return "{ "
        + "id:" + id + ","
        + "desc:" + desc + ","
        + "range:" + Luban.StringUtil.CollectionToString(range) + ","
        + "mark:" + Luban.StringUtil.CollectionToString(mark) + ","
        + "conditionCountMax:" + conditionCountMax + ","
        + "conditionCountMin:" + conditionCountMin + ","
        + "conditionDay:" + conditionDay + ","
        + "statusNew:" + Luban.StringUtil.CollectionToString(statusNew) + ","
        + "statusFull:" + Luban.StringUtil.CollectionToString(statusFull) + ","
        + "sortId:" + sortId + ","
        + "serverPrefix:" + serverPrefix + ","
        + "nameId:" + nameId + ","
        + "}";
    }
}
}

