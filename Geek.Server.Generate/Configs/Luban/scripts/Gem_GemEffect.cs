
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using Luban;
using Newtonsoft.Json.Linq;



namespace HotFix.Cfg
{

public sealed partial class Gem_GemEffect : Luban.BeanBase
{
    public Gem_GemEffect(JToken _buf) 
    {
        JObject _obj = _buf as JObject;
        id = (int)_obj.GetValue("id");
        gemQuality = (int)_obj.GetValue("gemQuality");
        gemGroup = (int)_obj.GetValue("gemGroup");
        type = (int)_obj.GetValue("type");
        normalTagID = (int)_obj.GetValue("normalTagID");
        seasonTagID = (int)_obj.GetValue("seasonTagID");
        effectDesc = (string)_obj.GetValue("effectDesc");
        { var __json0 = _obj.GetValue("effectShow"); int _n0 = (__json0 as JArray).Count; effectShow = new string[_n0]; int __index0=0; foreach(JToken __e0 in __json0) { string __v0;  __v0 = (string)__e0;  effectShow[__index0++] = __v0; }   }
        effectType = (int)_obj.GetValue("effectType");
        effectPara = (string)_obj.GetValue("effectPara");
        { var __json0 = _obj.GetValue("activePower"); int _n0 = (__json0 as JArray).Count; activePower = new int[_n0]; int __index0=0; foreach(JToken __e0 in __json0) { int __v0;  __v0 = (int)__e0;  activePower[__index0++] = __v0; }   }
    }

    public static Gem_GemEffect DeserializeGem_GemEffect(JToken _buf)
    {
        return new Gem_GemEffect(_buf);
    }

    /// <summary>
    /// 宝石ID<br/>8+赛季+品质+部位+00
    /// </summary>
    public readonly int id;
    /// <summary>
    /// 宝石品质
    /// </summary>
    public readonly int gemQuality;
    /// <summary>
    /// 宝石组
    /// </summary>
    public readonly int gemGroup;
    /// <summary>
    /// 宝石部位<br/>1-武器、2-衣服<br/>3-戒指、4-饰品
    /// </summary>
    public readonly int type;
    /// <summary>
    /// 稀有度、推荐标签id<br/>不填没有<br/>1-稀有<br/>2-推荐
    /// </summary>
    public readonly int normalTagID;
    /// <summary>
    /// 赛季标签id<br/>101-S1
    /// </summary>
    public readonly int seasonTagID;
    /// <summary>
    /// 词条描述多语言
    /// </summary>
    public readonly string effectDesc;
    /// <summary>
    /// 影响技能<br/>类型,参数,<br/>1-技能大类<br/>2-技能ID
    /// </summary>
    public readonly string[] effectShow;
    /// <summary>
    /// 类型<br/>1-属性<br/>2-技能GameSkill<br/>3-局内技能GamkeSkillBuild
    /// </summary>
    public readonly int effectType;
    /// <summary>
    /// 参数
    /// </summary>
    public readonly string effectPara;
    /// <summary>
    /// 层数2万分比战力<br/>层数3万分比战力<br/>（上阵增加战力）
    /// </summary>
    public readonly int[] activePower;


    public const int __ID__ = 1483899024;
    public override int GetTypeId() => __ID__;

    public  void ResolveRef(Tables tables)
    {
    }

    public override string ToString()
    {
        return "{ "
        + "id:" + id + ","
        + "gemQuality:" + gemQuality + ","
        + "gemGroup:" + gemGroup + ","
        + "type:" + type + ","
        + "normalTagID:" + normalTagID + ","
        + "seasonTagID:" + seasonTagID + ","
        + "effectDesc:" + effectDesc + ","
        + "effectShow:" + Luban.StringUtil.CollectionToString(effectShow) + ","
        + "effectType:" + effectType + ","
        + "effectPara:" + effectPara + ","
        + "activePower:" + Luban.StringUtil.CollectionToString(activePower) + ","
        + "}";
    }
}
}

