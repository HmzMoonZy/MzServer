
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using Luban;
using Newtonsoft.Json.Linq;



namespace HotFix.Cfg
{

public sealed partial class ChapterMiniGame_turntableBase : Luban.BeanBase
{
    public ChapterMiniGame_turntableBase(JToken _buf) 
    {
        JObject _obj = _buf as JObject;
        id = (int)_obj.GetValue("id");
        { var __json0 = _obj.GetValue("rewards"); int _n0 = (__json0 as JArray).Count; rewards = new int[_n0]; int __index0=0; foreach(JToken __e0 in __json0) { int __v0;  __v0 = (int)__e0;  rewards[__index0++] = __v0; }   }
        count = (int)_obj.GetValue("count");
        { var __json0 = _obj.GetValue("cost"); int _n0 = (__json0 as JArray).Count; cost = new int[_n0]; int __index0=0; foreach(JToken __e0 in __json0) { int __v0;  __v0 = (int)__e0;  cost[__index0++] = __v0; }   }
        offsetAngle = (float)_obj.GetValue("offsetAngle");
    }

    public static ChapterMiniGame_turntableBase DeserializeChapterMiniGame_turntableBase(JToken _buf)
    {
        return new ChapterMiniGame_turntableBase(_buf);
    }

    /// <summary>
    /// id
    /// </summary>
    public readonly int id;
    /// <summary>
    /// 转盘奖池
    /// </summary>
    public readonly int[] rewards;
    /// <summary>
    /// 抽奖次数
    /// </summary>
    public readonly int count;
    /// <summary>
    /// 抽奖消耗
    /// </summary>
    public readonly int[] cost;
    /// <summary>
    /// 转盘旋转偏移角度，<br/>大于0为逆时针旋转，<br/>小于0为顺时针旋转
    /// </summary>
    public readonly float offsetAngle;


    public const int __ID__ = -691276903;
    public override int GetTypeId() => __ID__;

    public  void ResolveRef(Tables tables)
    {
    }

    public override string ToString()
    {
        return "{ "
        + "id:" + id + ","
        + "rewards:" + Luban.StringUtil.CollectionToString(rewards) + ","
        + "count:" + count + ","
        + "cost:" + Luban.StringUtil.CollectionToString(cost) + ","
        + "offsetAngle:" + offsetAngle + ","
        + "}";
    }
}
}

