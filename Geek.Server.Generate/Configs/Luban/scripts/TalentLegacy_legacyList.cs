
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using Luban;


namespace HotFix.Cfg
{
public sealed partial class TalentLegacy_legacyList : Luban.BeanBase
{
    public TalentLegacy_legacyList(ByteBuf _buf) 
    {
        id = _buf.ReadInt();
        groupID = _buf.ReadInt();
        tagID = _buf.ReadInt();
        priority = _buf.ReadInt();
        order = _buf.ReadInt();
        nameID = _buf.ReadString();
        equipAtlasID = _buf.ReadInt();
        equipSkillIcon = _buf.ReadString();
        atlasID = _buf.ReadInt();
        cardIcon = _buf.ReadString();
        spineId = _buf.ReadInt();
        Type = _buf.ReadInt();
        rank = _buf.ReadInt();
        {int __n0 = System.Math.Min(_buf.ReadSize(), _buf.Size);composeFragment = new string[__n0];for(var __index0 = 0 ; __index0 < __n0 ; __index0++) { string __e0;__e0 = _buf.ReadString(); composeFragment[__index0] = __e0;}}
        composeGrade = _buf.ReadInt();
        talentLegacyNodeId = _buf.ReadInt();
    }

    public static TalentLegacy_legacyList DeserializeTalentLegacy_legacyList(ByteBuf _buf)
    {
        return new TalentLegacy_legacyList(_buf);
    }

    /// <summary>
    /// 装备ID
    /// </summary>
    public readonly int id;
    /// <summary>
    /// 组ID
    /// </summary>
    public readonly int groupID;
    /// <summary>
    /// tagID(和LegacySkill TagId一样)
    /// </summary>
    public readonly int tagID;
    /// <summary>
    /// 优先级(没有的情况优先显示)
    /// </summary>
    public readonly int priority;
    /// <summary>
    /// 排序(从大到小)
    /// </summary>
    public readonly int order;
    /// <summary>
    /// 名称多语言
    /// </summary>
    public readonly string nameID;
    /// <summary>
    /// 装备界面传承技图集id
    /// </summary>
    public readonly int equipAtlasID;
    /// <summary>
    /// 装备界面传承技icon
    /// </summary>
    public readonly string equipSkillIcon;
    /// <summary>
    /// 卡片icon图集id
    /// </summary>
    public readonly int atlasID;
    /// <summary>
    /// 卡片icon
    /// </summary>
    public readonly string cardIcon;
    /// <summary>
    /// 展示spine动画id（artmember）
    /// </summary>
    public readonly int spineId;
    /// <summary>
    /// 5主动<br/>6被动
    /// </summary>
    public readonly int Type;
    /// <summary>
    /// 1 普通<br/>2 S<br/>3 SS
    /// </summary>
    public readonly int rank;
    /// <summary>
    /// 合成所需碎片
    /// </summary>
    public readonly string[] composeFragment;
    /// <summary>
    /// 合成后品级
    /// </summary>
    public readonly int composeGrade;
    /// <summary>
    /// 解锁跳转id
    /// </summary>
    public readonly int talentLegacyNodeId;
   
    public const int __ID__ = 1476280977;
    public override int GetTypeId() => __ID__;

    public  void ResolveRef(Tables tables)
    {
    }

    public override string ToString()
    {
        return "{ "
        + "id:" + id + ","
        + "groupID:" + groupID + ","
        + "tagID:" + tagID + ","
        + "priority:" + priority + ","
        + "order:" + order + ","
        + "nameID:" + nameID + ","
        + "equipAtlasID:" + equipAtlasID + ","
        + "equipSkillIcon:" + equipSkillIcon + ","
        + "atlasID:" + atlasID + ","
        + "cardIcon:" + cardIcon + ","
        + "spineId:" + spineId + ","
        + "Type:" + Type + ","
        + "rank:" + rank + ","
        + "composeFragment:" + Luban.StringUtil.CollectionToString(composeFragment) + ","
        + "composeGrade:" + composeGrade + ","
        + "talentLegacyNodeId:" + talentLegacyNodeId + ","
        + "}";
    }
}

}

