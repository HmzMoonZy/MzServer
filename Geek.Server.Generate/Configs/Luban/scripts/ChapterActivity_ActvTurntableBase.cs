
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using Luban;
using Newtonsoft.Json.Linq;



namespace HotFix.Cfg
{

public sealed partial class ChapterActivity_ActvTurntableBase : Luban.BeanBase
{
    public ChapterActivity_ActvTurntableBase(JToken _buf) 
    {
        JObject _obj = _buf as JObject;
        id = (int)_obj.GetValue("id");
        openTime = (string)_obj.GetValue("openTime");
        endTime = (string)_obj.GetValue("endTime");
        group = (int)_obj.GetValue("group");
        { var __json0 = _obj.GetValue("rewards"); int _n0 = (__json0 as JArray).Count; rewards = new int[_n0]; int __index0=0; foreach(JToken __e0 in __json0) { int __v0;  __v0 = (int)__e0;  rewards[__index0++] = __v0; }   }
        cost = (int)_obj.GetValue("cost");
        { var __json0 = _obj.GetValue("guaranteePool"); int _n0 = (__json0 as JArray).Count; guaranteePool = new int[_n0]; int __index0=0; foreach(JToken __e0 in __json0) { int __v0;  __v0 = (int)__e0;  guaranteePool[__index0++] = __v0; }   }
        { var __json0 = _obj.GetValue("guaranteeTimes"); int _n0 = (__json0 as JArray).Count; guaranteeTimes = new int[_n0]; int __index0=0; foreach(JToken __e0 in __json0) { int __v0;  __v0 = (int)__e0;  guaranteeTimes[__index0++] = __v0; }   }
        offsetAngle = (float)_obj.GetValue("offsetAngle");
    }

    public static ChapterActivity_ActvTurntableBase DeserializeChapterActivity_ActvTurntableBase(JToken _buf)
    {
        return new ChapterActivity_ActvTurntableBase(_buf);
    }

    /// <summary>
    /// id
    /// </summary>
    public readonly int id;
    /// <summary>
    /// 开始时间
    /// </summary>
    public readonly string openTime;
    /// <summary>
    /// 结束时间
    /// </summary>
    public readonly string endTime;
    /// <summary>
    /// 对应条目组
    /// </summary>
    public readonly int group;
    /// <summary>
    /// 转盘奖池
    /// </summary>
    public readonly int[] rewards;
    /// <summary>
    /// 抽奖消耗
    /// </summary>
    public readonly int cost;
    /// <summary>
    /// 保底池
    /// </summary>
    public readonly int[] guaranteePool;
    /// <summary>
    /// 保底所需次数
    /// </summary>
    public readonly int[] guaranteeTimes;
    /// <summary>
    /// 转盘旋转偏移角度，<br/>大于0为逆时针旋转，<br/>小于0为顺时针旋转
    /// </summary>
    public readonly float offsetAngle;


    public const int __ID__ = 1528087771;
    public override int GetTypeId() => __ID__;

    public  void ResolveRef(Tables tables)
    {
    }

    public override string ToString()
    {
        return "{ "
        + "id:" + id + ","
        + "openTime:" + openTime + ","
        + "endTime:" + endTime + ","
        + "group:" + group + ","
        + "rewards:" + Luban.StringUtil.CollectionToString(rewards) + ","
        + "cost:" + cost + ","
        + "guaranteePool:" + Luban.StringUtil.CollectionToString(guaranteePool) + ","
        + "guaranteeTimes:" + Luban.StringUtil.CollectionToString(guaranteeTimes) + ","
        + "offsetAngle:" + offsetAngle + ","
        + "}";
    }
}
}

