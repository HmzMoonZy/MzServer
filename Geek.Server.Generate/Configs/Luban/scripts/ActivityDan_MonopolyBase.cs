
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using Luban;
using Newtonsoft.Json.Linq;



namespace HotFix.Cfg
{

public sealed partial class ActivityDan_MonopolyBase : Luban.BeanBase
{
    public ActivityDan_MonopolyBase(JToken _buf) 
    {
        JObject _obj = _buf as JObject;
        ID = (int)_obj.GetValue("ID");
        NameId = (string)_obj.GetValue("NameId");
        ThemeId = (int)_obj.GetValue("ThemeId");
        DiceItem = (int)_obj.GetValue("DiceItem");
        MagicDicItem = (int)_obj.GetValue("MagicDicItem");
        StarItem = (int)_obj.GetValue("StarItem");
        { var __json0 = _obj.GetValue("multiRate"); int _n0 = (__json0 as JArray).Count; multiRate = new int[_n0]; int __index0=0; foreach(JToken __e0 in __json0) { int __v0;  __v0 = (int)__e0;  multiRate[__index0++] = __v0; }   }
        { var __json0 = _obj.GetValue("guaranteeRate"); int _n0 = (__json0 as JArray).Count; guaranteeRate = new int[_n0]; int __index0=0; foreach(JToken __e0 in __json0) { int __v0;  __v0 = (int)__e0;  guaranteeRate[__index0++] = __v0; }   }
        DicePrice = (int)_obj.GetValue("DicePrice");
        DefaultDice = (int)_obj.GetValue("DefaultDice");
        RankNum = (int)_obj.GetValue("RankNum");
        { var __json0 = _obj.GetValue("BigReward"); int _n0 = (__json0 as JArray).Count; BigReward = new string[_n0]; int __index0=0; foreach(JToken __e0 in __json0) { string __v0;  __v0 = (string)__e0;  BigReward[__index0++] = __v0; }   }
        { var __json0 = _obj.GetValue("ClearTime"); int _n0 = (__json0 as JArray).Count; ClearTime = new int[_n0]; int __index0=0; foreach(JToken __e0 in __json0) { int __v0;  __v0 = (int)__e0;  ClearTime[__index0++] = __v0; }   }
        { var __json0 = _obj.GetValue("BuyLimit"); int _n0 = (__json0 as JArray).Count; BuyLimit = new string[_n0]; int __index0=0; foreach(JToken __e0 in __json0) { string __v0;  __v0 = (string)__e0;  BuyLimit[__index0++] = __v0; }   }
        { var __json0 = _obj.GetValue("MailCoins"); int _n0 = (__json0 as JArray).Count; MailCoins = new string[_n0]; int __index0=0; foreach(JToken __e0 in __json0) { string __v0;  __v0 = (string)__e0;  MailCoins[__index0++] = __v0; }   }
        { var __json0 = _obj.GetValue("RebackMailID"); int _n0 = (__json0 as JArray).Count; RebackMailID = new string[_n0]; int __index0=0; foreach(JToken __e0 in __json0) { string __v0;  __v0 = (string)__e0;  RebackMailID[__index0++] = __v0; }   }
        resetDice = (int)_obj.GetValue("resetDice");
        battlePassId = (int)_obj.GetValue("battlePassId");
        ExchangeGroup = (int)_obj.GetValue("ExchangeGroup");
        ExchangeItem = (int)_obj.GetValue("ExchangeItem");
        PackGroup = (int)_obj.GetValue("PackGroup");
    }

    public static ActivityDan_MonopolyBase DeserializeActivityDan_MonopolyBase(JToken _buf)
    {
        return new ActivityDan_MonopolyBase(_buf);
    }

    /// <summary>
    /// 关联EventOpenTime表ID
    /// </summary>
    public readonly int ID;
    /// <summary>
    /// 活动名Id
    /// </summary>
    public readonly string NameId;
    /// <summary>
    /// 主题Id
    /// </summary>
    public readonly int ThemeId;
    /// <summary>
    /// 骰子道具
    /// </summary>
    public readonly int DiceItem;
    /// <summary>
    /// 魔法骰子道具
    /// </summary>
    public readonly int MagicDicItem;
    /// <summary>
    /// 星星道具
    /// </summary>
    public readonly int StarItem;
    /// <summary>
    /// 倍率
    /// </summary>
    public readonly int[] multiRate;
    /// <summary>
    /// 保底倍率
    /// </summary>
    public readonly int[] guaranteeRate;
    /// <summary>
    /// 骰子售价，钻石
    /// </summary>
    public readonly int DicePrice;
    /// <summary>
    /// 初始赠送骰子个数
    /// </summary>
    public readonly int DefaultDice;
    /// <summary>
    /// 排行榜单组人数
    /// </summary>
    public readonly int RankNum;
    /// <summary>
    /// 累计星星奖励：<br/><br/>累计几个星星，奖励表ID|
    /// </summary>
    public readonly string[] BigReward;
    /// <summary>
    /// 排行榜重组时间点<br/><br/>距离活动开启时间过去X秒
    /// </summary>
    public readonly int[] ClearTime;
    /// <summary>
    /// 根据钻石余量设定单次购买抽奖券上限<br/><br/>最小数,最大数,上限|...
    /// </summary>
    public readonly string[] BuyLimit;
    /// <summary>
    /// 活动结束时，以下这些道具兑换为金币<br/>道具ID，金币数量|
    /// </summary>
    public readonly string[] MailCoins;
    /// <summary>
    /// 补偿邮件
    /// </summary>
    public readonly string[] RebackMailID;
    /// <summary>
    /// 多少次骰子重置权重
    /// </summary>
    public readonly int resetDice;
    /// <summary>
    /// BP的ID
    /// </summary>
    public readonly int battlePassId;
    /// <summary>
    /// 兑换组
    /// </summary>
    public readonly int ExchangeGroup;
    /// <summary>
    /// 兑换物ID
    /// </summary>
    public readonly int ExchangeItem;
    /// <summary>
    /// 礼包组
    /// </summary>
    public readonly int PackGroup;


    public const int __ID__ = -405495811;
    public override int GetTypeId() => __ID__;

    public  void ResolveRef(Tables tables)
    {
    }

    public override string ToString()
    {
        return "{ "
        + "ID:" + ID + ","
        + "NameId:" + NameId + ","
        + "ThemeId:" + ThemeId + ","
        + "DiceItem:" + DiceItem + ","
        + "MagicDicItem:" + MagicDicItem + ","
        + "StarItem:" + StarItem + ","
        + "multiRate:" + Luban.StringUtil.CollectionToString(multiRate) + ","
        + "guaranteeRate:" + Luban.StringUtil.CollectionToString(guaranteeRate) + ","
        + "DicePrice:" + DicePrice + ","
        + "DefaultDice:" + DefaultDice + ","
        + "RankNum:" + RankNum + ","
        + "BigReward:" + Luban.StringUtil.CollectionToString(BigReward) + ","
        + "ClearTime:" + Luban.StringUtil.CollectionToString(ClearTime) + ","
        + "BuyLimit:" + Luban.StringUtil.CollectionToString(BuyLimit) + ","
        + "MailCoins:" + Luban.StringUtil.CollectionToString(MailCoins) + ","
        + "RebackMailID:" + Luban.StringUtil.CollectionToString(RebackMailID) + ","
        + "resetDice:" + resetDice + ","
        + "battlePassId:" + battlePassId + ","
        + "ExchangeGroup:" + ExchangeGroup + ","
        + "ExchangeItem:" + ExchangeItem + ","
        + "PackGroup:" + PackGroup + ","
        + "}";
    }
}
}

