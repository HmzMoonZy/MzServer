
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using Luban;
using Newtonsoft.Json.Linq;



namespace HotFix.Cfg
{

public sealed partial class Chapter_eventPoint : Luban.BeanBase
{
    public Chapter_eventPoint(JToken _buf) 
    {
        JObject _obj = _buf as JObject;
        id = (int)_obj.GetValue("id");
        { var __json0 = _obj.GetValue("createOffsetSea"); int _n0 = (__json0 as JArray).Count; createOffsetSea = new float[_n0]; int __index0=0; foreach(JToken __e0 in __json0) { float __v0;  __v0 = (float)__e0;  createOffsetSea[__index0++] = __v0; }   }
        { var __json0 = _obj.GetValue("createOffsetLand"); int _n0 = (__json0 as JArray).Count; createOffsetLand = new float[_n0]; int __index0=0; foreach(JToken __e0 in __json0) { float __v0;  __v0 = (float)__e0;  createOffsetLand[__index0++] = __v0; }   }
        { var __json0 = _obj.GetValue("action"); int _n0 = (__json0 as JArray).Count; action = new string[_n0]; int __index0=0; foreach(JToken __e0 in __json0) { string __v0;  __v0 = (string)__e0;  action[__index0++] = __v0; }   }
        { var __json0 = _obj.GetValue("defaultAction"); int _n0 = (__json0 as JArray).Count; defaultAction = new string[_n0]; int __index0=0; foreach(JToken __e0 in __json0) { string __v0;  __v0 = (string)__e0;  defaultAction[__index0++] = __v0; }   }
        playerArriveAction = (string)_obj.GetValue("playerArriveAction");
        bottomId = (int)_obj.GetValue("bottomId");
        path = (string)_obj.GetValue("path");
    }

    public static Chapter_eventPoint DeserializeChapter_eventPoint(JToken _buf)
    {
        return new Chapter_eventPoint(_buf);
    }

    /// <summary>
    /// id
    /// </summary>
    public readonly int id;
    /// <summary>
    /// 创建时的位置偏移(海洋）
    /// </summary>
    public readonly float[] createOffsetSea;
    /// <summary>
    /// 创建时的位置偏移（陆地）
    /// </summary>
    public readonly float[] createOffsetLand;
    /// <summary>
    /// 行为（行为类型,持续时间）
    /// </summary>
    public readonly string[] action;
    /// <summary>
    /// 创建时行为|相遇时行为|离开时行为
    /// </summary>
    public readonly string[] defaultAction;
    /// <summary>
    /// 抵达后的玩家行为<br/>(行为类型,持续时间）
    /// </summary>
    public readonly string playerArriveAction;
    /// <summary>
    /// 通用底座基础ID<br/>（为0时不使用底座<br/>最终id=底座基础ID+地图底座类型）
    /// </summary>
    public readonly int bottomId;
    /// <summary>
    /// 资源路径
    /// </summary>
    public readonly string path;


    public const int __ID__ = 1500862056;
    public override int GetTypeId() => __ID__;

    public  void ResolveRef(Tables tables)
    {
    }

    public override string ToString()
    {
        return "{ "
        + "id:" + id + ","
        + "createOffsetSea:" + Luban.StringUtil.CollectionToString(createOffsetSea) + ","
        + "createOffsetLand:" + Luban.StringUtil.CollectionToString(createOffsetLand) + ","
        + "action:" + Luban.StringUtil.CollectionToString(action) + ","
        + "defaultAction:" + Luban.StringUtil.CollectionToString(defaultAction) + ","
        + "playerArriveAction:" + playerArriveAction + ","
        + "bottomId:" + bottomId + ","
        + "path:" + path + ","
        + "}";
    }
}
}

