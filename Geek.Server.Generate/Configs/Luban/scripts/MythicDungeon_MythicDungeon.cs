
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using Luban;


namespace HotFix.Cfg
{
public sealed partial class MythicDungeon_MythicDungeon : Luban.BeanBase
{
    public MythicDungeon_MythicDungeon(ByteBuf _buf) 
    {
        id = _buf.ReadInt();
        nameId = _buf.ReadString();
        {int __n0 = System.Math.Min(_buf.ReadSize(), _buf.Size);desId = new string[__n0];for(var __index0 = 0 ; __index0 < __n0 ; __index0++) { string __e0;__e0 = _buf.ReadString(); desId[__index0] = __e0;}}
        {int __n0 = System.Math.Min(_buf.ReadSize(), _buf.Size);probabilitiesStr = new string[__n0];for(var __index0 = 0 ; __index0 < __n0 ; __index0++) { string __e0;__e0 = _buf.ReadString(); probabilitiesStr[__index0] = __e0;}}
        speedBoxRound = _buf.ReadInt();
        speedBoxDropID = _buf.ReadInt();
        fightFeaturePre = _buf.ReadInt();
        {int __n0 = System.Math.Min(_buf.ReadSize(), _buf.Size);fightFeatureAll = new int[__n0];for(var __index0 = 0 ; __index0 < __n0 ; __index0++) { int __e0;__e0 = _buf.ReadInt(); fightFeatureAll[__index0] = __e0;}}
        {int __n0 = System.Math.Min(_buf.ReadSize(), _buf.Size);dropPre = new string[__n0];for(var __index0 = 0 ; __index0 < __n0 ; __index0++) { string __e0;__e0 = _buf.ReadString(); dropPre[__index0] = __e0;}}
        {int __n0 = System.Math.Min(_buf.ReadSize(), _buf.Size);dropAll = new int[__n0];for(var __index0 = 0 ; __index0 < __n0 ; __index0++) { int __e0;__e0 = _buf.ReadInt(); dropAll[__index0] = __e0;}}
        maxRound = _buf.ReadInt();
        progress = _buf.ReadInt();
        normalDropLimit = _buf.ReadInt();
        normalDropID = _buf.ReadInt();
        normalBossDropLimit = _buf.ReadInt();
        normalBossDropId = _buf.ReadInt();
        bossDropID = _buf.ReadInt();
        curseBoxDropID = _buf.ReadInt();
        bossLevelEventID = _buf.ReadInt();
        attributes = _buf.ReadString();
        normalBattleAttr = _buf.ReadString();
        eliteBattleAttr = _buf.ReadString();
        bossBattleAttr = _buf.ReadString();
        mapId = _buf.ReadInt();
        campEventPointId = _buf.ReadInt();
        {int __n0 = System.Math.Min(_buf.ReadSize(), _buf.Size);campOffset = new float[__n0];for(var __index0 = 0 ; __index0 < __n0 ; __index0++) { float __e0;__e0 = _buf.ReadFloat(); campOffset[__index0] = __e0;}}
        jumpPower = _buf.ReadLong();
        speedAdd = _buf.ReadLong();
    }

    public static MythicDungeon_MythicDungeon DeserializeMythicDungeon_MythicDungeon(ByteBuf _buf)
    {
        return new MythicDungeon_MythicDungeon(_buf);
    }

    /// <summary>
    /// ID
    /// </summary>
    public readonly int id;
    /// <summary>
    /// 层数名
    /// </summary>
    public readonly string nameId;
    /// <summary>
    /// 描述ID组
    /// </summary>
    public readonly string[] desId;
    /// <summary>
    /// 概论公式文本的多语言ID
    /// </summary>
    public readonly string[] probabilitiesStr;
    /// <summary>
    /// 速通宝箱回合数&lt;=
    /// </summary>
    public readonly int speedBoxRound;
    /// <summary>
    /// 速通宝箱掉落ID
    /// </summary>
    public readonly int speedBoxDropID;
    /// <summary>
    /// 战斗特性预览<br/>（显示用）
    /// </summary>
    public readonly int fightFeaturePre;
    /// <summary>
    /// 战斗特性<br/>全量
    /// </summary>
    public readonly int[] fightFeatureAll;
    /// <summary>
    /// 图集ID|图标ID|底框图集ID|底框图标|标题多语言|描述多语言
    /// </summary>
    public readonly string[] dropPre;
    /// <summary>
    /// 掉落全部预览（显示用）
    /// </summary>
    public readonly int[] dropAll;
    /// <summary>
    /// 最大战斗回合数
    /// </summary>
    public readonly int maxRound;
    /// <summary>
    /// 进度值<br/>触发最终BOSS战
    /// </summary>
    public readonly int progress;
    /// <summary>
    /// 普通怪物<br/>掉落上限
    /// </summary>
    public readonly int normalDropLimit;
    /// <summary>
    /// 普通怪物<br/>掉落ID
    /// </summary>
    public readonly int normalDropID;
    /// <summary>
    /// 精英<br/>掉落上限
    /// </summary>
    public readonly int normalBossDropLimit;
    /// <summary>
    /// 精英掉落id
    /// </summary>
    public readonly int normalBossDropId;
    /// <summary>
    /// BOSS<br/>掉落ID
    /// </summary>
    public readonly int bossDropID;
    /// <summary>
    /// 诅咒宝箱掉落
    /// </summary>
    public readonly int curseBoxDropID;
    /// <summary>
    /// 最终BOSS levelEvent ID
    /// </summary>
    public readonly int bossLevelEventID;
    /// <summary>
    /// 层数属性加成<br/>与后续加成乘法叠加
    /// </summary>
    public readonly string attributes;
    /// <summary>
    /// 普通三围战斗属性加成
    /// </summary>
    public readonly string normalBattleAttr;
    /// <summary>
    /// 精英三围战斗属性加成
    /// </summary>
    public readonly string eliteBattleAttr;
    /// <summary>
    /// boss三围战属性加成
    /// </summary>
    public readonly string bossBattleAttr;
    /// <summary>
    /// 地图
    /// </summary>
    public readonly int mapId;
    /// <summary>
    /// 营地事件点id
    /// </summary>
    public readonly int campEventPointId;
    /// <summary>
    /// 营地位置偏移<br/>x|y
    /// </summary>
    public readonly float[] campOffset;
    /// <summary>
    /// 星级挑战跳过所需战力<br/>(-1不能跳过)<br/>根本没做这功能
    /// </summary>
    public readonly long jumpPower;
    /// <summary>
    /// 速度
    /// </summary>
    public readonly long speedAdd;
   
    public const int __ID__ = 2131877889;
    public override int GetTypeId() => __ID__;

    public  void ResolveRef(Tables tables)
    {
    }

    public override string ToString()
    {
        return "{ "
        + "id:" + id + ","
        + "nameId:" + nameId + ","
        + "desId:" + Luban.StringUtil.CollectionToString(desId) + ","
        + "probabilitiesStr:" + Luban.StringUtil.CollectionToString(probabilitiesStr) + ","
        + "speedBoxRound:" + speedBoxRound + ","
        + "speedBoxDropID:" + speedBoxDropID + ","
        + "fightFeaturePre:" + fightFeaturePre + ","
        + "fightFeatureAll:" + Luban.StringUtil.CollectionToString(fightFeatureAll) + ","
        + "dropPre:" + Luban.StringUtil.CollectionToString(dropPre) + ","
        + "dropAll:" + Luban.StringUtil.CollectionToString(dropAll) + ","
        + "maxRound:" + maxRound + ","
        + "progress:" + progress + ","
        + "normalDropLimit:" + normalDropLimit + ","
        + "normalDropID:" + normalDropID + ","
        + "normalBossDropLimit:" + normalBossDropLimit + ","
        + "normalBossDropId:" + normalBossDropId + ","
        + "bossDropID:" + bossDropID + ","
        + "curseBoxDropID:" + curseBoxDropID + ","
        + "bossLevelEventID:" + bossLevelEventID + ","
        + "attributes:" + attributes + ","
        + "normalBattleAttr:" + normalBattleAttr + ","
        + "eliteBattleAttr:" + eliteBattleAttr + ","
        + "bossBattleAttr:" + bossBattleAttr + ","
        + "mapId:" + mapId + ","
        + "campEventPointId:" + campEventPointId + ","
        + "campOffset:" + Luban.StringUtil.CollectionToString(campOffset) + ","
        + "jumpPower:" + jumpPower + ","
        + "speedAdd:" + speedAdd + ","
        + "}";
    }
}

}

