
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using Luban;


namespace HotFix.Cfg
{
public sealed partial class Equip_equipCompose : Luban.BeanBase
{
    public Equip_equipCompose(ByteBuf _buf) 
    {
        id = _buf.ReadInt();
        composeTo = _buf.ReadInt();
        qualityPlus = _buf.ReadInt();
        composeNeed1 = _buf.ReadInt();
        composeNeed2 = _buf.ReadInt();
        composeNeed3 = _buf.ReadInt();
        {int __n0 = System.Math.Min(_buf.ReadSize(), _buf.Size);universalItem = new int[__n0];for(var __index0 = 0 ; __index0 < __n0 ; __index0++) { int __e0;__e0 = _buf.ReadInt(); universalItem[__index0] = __e0;}}
        composeItem1 = _buf.ReadInt();
        composeItem2 = _buf.ReadInt();
        composeItem3 = _buf.ReadInt();
        composeItem4 = _buf.ReadInt();
        {int __n0 = System.Math.Min(_buf.ReadSize(), _buf.Size);RecycleSelfquality = new int[__n0];for(var __index0 = 0 ; __index0 < __n0 ; __index0++) { int __e0;__e0 = _buf.ReadInt(); RecycleSelfquality[__index0] = __e0;}}
        {int __n0 = System.Math.Min(_buf.ReadSize(), _buf.Size);RecycleSelf = new int[__n0];for(var __index0 = 0 ; __index0 < __n0 ; __index0++) { int __e0;__e0 = _buf.ReadInt(); RecycleSelf[__index0] = __e0;}}
        {int __n0 = System.Math.Min(_buf.ReadSize(), _buf.Size);Recycle1New = new string[__n0];for(var __index0 = 0 ; __index0 < __n0 ; __index0++) { string __e0;__e0 = _buf.ReadString(); Recycle1New[__index0] = __e0;}}
        {int __n0 = System.Math.Min(_buf.ReadSize(), _buf.Size);Recycle2New = new string[__n0];for(var __index0 = 0 ; __index0 < __n0 ; __index0++) { string __e0;__e0 = _buf.ReadString(); Recycle2New[__index0] = __e0;}}
        {int __n0 = System.Math.Min(_buf.ReadSize(), _buf.Size);Recycle3New = new string[__n0];for(var __index0 = 0 ; __index0 < __n0 ; __index0++) { string __e0;__e0 = _buf.ReadString(); Recycle3New[__index0] = __e0;}}
        {int __n0 = System.Math.Min(_buf.ReadSize(), _buf.Size);Recycle4New = new string[__n0];for(var __index0 = 0 ; __index0 < __n0 ; __index0++) { string __e0;__e0 = _buf.ReadString(); Recycle4New[__index0] = __e0;}}
        {int __n0 = System.Math.Min(_buf.ReadSize(), _buf.Size);Recycle1 = new string[__n0];for(var __index0 = 0 ; __index0 < __n0 ; __index0++) { string __e0;__e0 = _buf.ReadString(); Recycle1[__index0] = __e0;}}
        {int __n0 = System.Math.Min(_buf.ReadSize(), _buf.Size);Recycle2 = new string[__n0];for(var __index0 = 0 ; __index0 < __n0 ; __index0++) { string __e0;__e0 = _buf.ReadString(); Recycle2[__index0] = __e0;}}
        {int __n0 = System.Math.Min(_buf.ReadSize(), _buf.Size);Recycle3 = new string[__n0];for(var __index0 = 0 ; __index0 < __n0 ; __index0++) { string __e0;__e0 = _buf.ReadString(); Recycle3[__index0] = __e0;}}
        {int __n0 = System.Math.Min(_buf.ReadSize(), _buf.Size);Recycle4 = new string[__n0];for(var __index0 = 0 ; __index0 < __n0 ; __index0++) { string __e0;__e0 = _buf.ReadString(); Recycle4[__index0] = __e0;}}
        qualityAttributes = _buf.ReadInt();
        qualityColor = _buf.ReadInt();
        nameID = _buf.ReadString();
    }

    public static Equip_equipCompose DeserializeEquip_equipCompose(ByteBuf _buf)
    {
        return new Equip_equipCompose(_buf);
    }

    /// <summary>
    /// 内容ID
    /// </summary>
    public readonly int id;
    /// <summary>
    /// 合成后获得的装备品质，0表示不可合成
    /// </summary>
    public readonly int composeTo;
    /// <summary>
    /// 品阶+n
    /// </summary>
    public readonly int qualityPlus;
    /// <summary>
    /// 额外材料的部位要求：<br/>0任意部位<br/>1必须与底材同部位<br/>2必须同ID<br/>3同tagID
    /// </summary>
    public readonly int composeNeed1;
    /// <summary>
    /// 额外材料的品阶要求
    /// </summary>
    public readonly int composeNeed2;
    /// <summary>
    /// 合成消耗的额外装备数量
    /// </summary>
    public readonly int composeNeed3;
    /// <summary>
    /// 武器升级所需通用材料ID万能材料(武器，衣服，戒指，饰品)
    /// </summary>
    public readonly int[] universalItem;
    /// <summary>
    /// 武器升级所需通用材料ID
    /// </summary>
    public readonly int composeItem1;
    /// <summary>
    /// 衣服升级所需通用材料ID
    /// </summary>
    public readonly int composeItem2;
    /// <summary>
    /// 戒指升级所需通用材料ID
    /// </summary>
    public readonly int composeItem3;
    /// <summary>
    /// 饰品升级所需通用材料ID
    /// </summary>
    public readonly int composeItem4;
    /// <summary>
    /// 返还自身的品质
    /// </summary>
    public readonly int[] RecycleSelfquality;
    /// <summary>
    /// 返还自身数量
    /// </summary>
    public readonly int[] RecycleSelf;
    /// <summary>
    /// 武器
    /// </summary>
    public readonly string[] Recycle1New;
    /// <summary>
    /// 衣服
    /// </summary>
    public readonly string[] Recycle2New;
    /// <summary>
    /// 戒指
    /// </summary>
    public readonly string[] Recycle3New;
    /// <summary>
    /// 饰品
    /// </summary>
    public readonly string[] Recycle4New;
    /// <summary>
    /// 武器
    /// </summary>
    public readonly string[] Recycle1;
    /// <summary>
    /// 衣服
    /// </summary>
    public readonly string[] Recycle2;
    /// <summary>
    /// 戒指
    /// </summary>
    public readonly string[] Recycle3;
    /// <summary>
    /// 饰品
    /// </summary>
    public readonly string[] Recycle4;
    /// <summary>
    /// 品质属性强化<br/>万分比加成属性
    /// </summary>
    public readonly int qualityAttributes;
    /// <summary>
    /// 展示颜色
    /// </summary>
    public readonly int qualityColor;
    /// <summary>
    /// 名称多语言<br/>（用于道具时）
    /// </summary>
    public readonly string nameID;
   
    public const int __ID__ = 581736209;
    public override int GetTypeId() => __ID__;

    public  void ResolveRef(Tables tables)
    {
    }

    public override string ToString()
    {
        return "{ "
        + "id:" + id + ","
        + "composeTo:" + composeTo + ","
        + "qualityPlus:" + qualityPlus + ","
        + "composeNeed1:" + composeNeed1 + ","
        + "composeNeed2:" + composeNeed2 + ","
        + "composeNeed3:" + composeNeed3 + ","
        + "universalItem:" + Luban.StringUtil.CollectionToString(universalItem) + ","
        + "composeItem1:" + composeItem1 + ","
        + "composeItem2:" + composeItem2 + ","
        + "composeItem3:" + composeItem3 + ","
        + "composeItem4:" + composeItem4 + ","
        + "RecycleSelfquality:" + Luban.StringUtil.CollectionToString(RecycleSelfquality) + ","
        + "RecycleSelf:" + Luban.StringUtil.CollectionToString(RecycleSelf) + ","
        + "Recycle1New:" + Luban.StringUtil.CollectionToString(Recycle1New) + ","
        + "Recycle2New:" + Luban.StringUtil.CollectionToString(Recycle2New) + ","
        + "Recycle3New:" + Luban.StringUtil.CollectionToString(Recycle3New) + ","
        + "Recycle4New:" + Luban.StringUtil.CollectionToString(Recycle4New) + ","
        + "Recycle1:" + Luban.StringUtil.CollectionToString(Recycle1) + ","
        + "Recycle2:" + Luban.StringUtil.CollectionToString(Recycle2) + ","
        + "Recycle3:" + Luban.StringUtil.CollectionToString(Recycle3) + ","
        + "Recycle4:" + Luban.StringUtil.CollectionToString(Recycle4) + ","
        + "qualityAttributes:" + qualityAttributes + ","
        + "qualityColor:" + qualityColor + ","
        + "nameID:" + nameID + ","
        + "}";
    }
}

}

