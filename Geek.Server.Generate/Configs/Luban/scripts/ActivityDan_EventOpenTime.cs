
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using Luban;
using Newtonsoft.Json.Linq;



namespace HotFix.Cfg
{

public sealed partial class ActivityDan_EventOpenTime : Luban.BeanBase
{
    public ActivityDan_EventOpenTime(JToken _buf) 
    {
        JObject _obj = _buf as JObject;
        ActivityId = (int)_obj.GetValue("ActivityId");
        Type = (int)_obj.GetValue("Type");
        SubType = (int)_obj.GetValue("SubType");
        EventID = (int)_obj.GetValue("EventID");
        TrackSource = (string)_obj.GetValue("TrackSource");
        SignID = (int)_obj.GetValue("SignID");
        QuestID = (int)_obj.GetValue("QuestID");
        PayID = (int)_obj.GetValue("PayID");
        ExchangeID = (int)_obj.GetValue("ExchangeID");
        BattlePassID = (int)_obj.GetValue("BattlePassID");
        { var __json0 = _obj.GetValue("BattlePassPagesID"); int _n0 = (__json0 as JArray).Count; BattlePassPagesID = new int[_n0]; int __index0=0; foreach(JToken __e0 in __json0) { int __v0;  __v0 = (int)__e0;  BattlePassPagesID[__index0++] = __v0; }   }
        { var __json0 = _obj.GetValue("MailId"); int _n0 = (__json0 as JArray).Count; MailId = new string[_n0]; int __index0=0; foreach(JToken __e0 in __json0) { string __v0;  __v0 = (string)__e0;  MailId[__index0++] = __v0; }   }
        DurationType = (int)_obj.GetValue("DurationType");
        EntryType = (int)_obj.GetValue("EntryType");
        DisplayFund = (int)_obj.GetValue("DisplayFund");
        StartTime = (string)_obj.GetValue("StartTime");
        EndTime = (string)_obj.GetValue("EndTime");
        StartTimeCN = (string)_obj.GetValue("StartTimeCN");
        EndTimeCN = (string)_obj.GetValue("EndTimeCN");
        GameplayEndTime = (int)_obj.GetValue("GameplayEndTime");
        FunctionID = (int)_obj.GetValue("FunctionID");
        Duration = (int)_obj.GetValue("Duration");
        StartTime_CN = (int)_obj.GetValue("StartTime_CN");
        Duration_CN = (int)_obj.GetValue("Duration_CN");
        taskEndSeconds = (int)_obj.GetValue("taskEndSeconds");
        Tag = (int)_obj.GetValue("Tag");
        { var __json0 = _obj.GetValue("ExtraId"); int _n0 = (__json0 as JArray).Count; ExtraId = new int[_n0]; int __index0=0; foreach(JToken __e0 in __json0) { int __v0;  __v0 = (int)__e0;  ExtraId[__index0++] = __v0; }   }
        NetVersion = (int)_obj.GetValue("NetVersion");
        { var __json0 = _obj.GetValue("Reward"); int _n0 = (__json0 as JArray).Count; Reward = new string[_n0]; int __index0=0; foreach(JToken __e0 in __json0) { string __v0;  __v0 = (string)__e0;  Reward[__index0++] = __v0; }   }
        { var __json0 = _obj.GetValue("ExtraReward"); int _n0 = (__json0 as JArray).Count; ExtraReward = new string[_n0]; int __index0=0; foreach(JToken __e0 in __json0) { string __v0;  __v0 = (string)__e0;  ExtraReward[__index0++] = __v0; }   }
        SkinIapId = (int)_obj.GetValue("SkinIapId");
        BgSprite = (string)_obj.GetValue("BgSprite");
        { var __json0 = _obj.GetValue("LanguageTempId"); int _n0 = (__json0 as JArray).Count; LanguageTempId = new string[_n0]; int __index0=0; foreach(JToken __e0 in __json0) { string __v0;  __v0 = (string)__e0;  LanguageTempId[__index0++] = __v0; }   }
        { var __json0 = _obj.GetValue("UITexName"); int _n0 = (__json0 as JArray).Count; UITexName = new string[_n0]; int __index0=0; foreach(JToken __e0 in __json0) { string __v0;  __v0 = (string)__e0;  UITexName[__index0++] = __v0; }   }
        IncreaseProbability = (int)_obj.GetValue("IncreaseProbability");
        CVLangId = (string)_obj.GetValue("CVLangId");
    }

    public static ActivityDan_EventOpenTime DeserializeActivityDan_EventOpenTime(JToken _buf)
    {
        return new ActivityDan_EventOpenTime(_buf);
    }

    /// <summary>
    /// 活动id
    /// </summary>
    public readonly int ActivityId;
    /// <summary>
    /// 活动类型<br/>1 S级军备1<br/>2 钻石翻倍<br/>3 活跃度活动(活跃犒赏）<br/>4 存钱罐<br/>5 登录签到活动(签到战令)<br/>6 节日任务+兑换<br/>7 节日礼包<br/>8 世界杯竞猜<br/>9 通用活动签到(纯签到)<br/>10 bingo活动<br/>11 配件宝箱<br/>12 章节礼包重置<br/>13 转盘<br/>14 S级军备(新)<br/>17种植活动<br/>18 节日任务+兑换(难度库机制)<br/>19 节日任务+兑换（v2）<br/>20 大富翁<br/>21 节日礼包（v2）<br/>22 无尽宝藏<br/>23 钓鱼<br/>24 圣诞皮肤礼包<br/>29 潜水活动<br/>30玩法基金<br/>36扭蛋37困难主线
    /// </summary>
    public readonly int Type;
    /// <summary>
    /// 活动类型的子类型<br/>Type=6时<br/>SubType=1表示国庆兑换<br/>SubType=2表示世界杯... <br/><br/>Type=7时<br/>Subtype=1表示国庆<br/>(已弃用，直接填8)<br/><br/>Type=10时<br/>Subtype=-1表示独立签到<br/>Subtype=1表示页签内签到<br/><br/>Type=15时<br/>9=植树节板子<br/><br/>Typ=30时<br/>1=副本<br/>2=游历<br/><br/>Type=17时<br/>1= 植树节浇水<br/>2= 复活节收集蛋<br/>3= 劳动节种菜
    /// </summary>
    public readonly int SubType;
    /// <summary>
    /// 关联活动id
    /// </summary>
    public readonly int EventID;
    /// <summary>
    /// 用于打点的标记字段
    /// </summary>
    public readonly string TrackSource;
    /// <summary>
    /// 签到ID
    /// </summary>
    public readonly int SignID;
    /// <summary>
    /// 任务ID<br/>不配则无任务
    /// </summary>
    public readonly int QuestID;
    /// <summary>
    /// 支付商城ID<br/>不配则无支付
    /// </summary>
    public readonly int PayID;
    /// <summary>
    /// 商店ID<br/>不配则无兑换
    /// </summary>
    public readonly int ExchangeID;
    /// <summary>
    /// 通行证ID<br/>不配置则无通行证
    /// </summary>
    public readonly int BattlePassID;
    /// <summary>
    /// 通行证子页<br/>本质是另外的通行证<br/>但是依赖前一个通行证（依次解锁通行证，大秘境等通行证）
    /// </summary>
    public readonly int[] BattlePassPagesID;
    /// <summary>
    /// 补发邮件
    /// </summary>
    public readonly string[] MailId;
    /// <summary>
    /// 开启时间类型<br/>1.根据配置开始结束时间<br/>2.根据开始时间开启， 结束时间 = 开启时间 + 持续时间
    /// </summary>
    public readonly int DurationType;
    /// <summary>
    /// 入口位置类型<br/>1：顶部固定<br/>2：底部固定<br/>默认：中间收纳
    /// </summary>
    public readonly int EntryType;
    /// <summary>
    /// 活动内部是否显示基金按钮<br/>1：显示
    /// </summary>
    public readonly int DisplayFund;
    /// <summary>
    /// 活动<br/>开启时间戳
    /// </summary>
    public readonly string StartTime;
    /// <summary>
    /// 结束时间戳
    /// </summary>
    public readonly string EndTime;
    /// <summary>
    /// 活动<br/>开启时间戳
    /// </summary>
    public readonly string StartTimeCN;
    /// <summary>
    /// 结束时间戳
    /// </summary>
    public readonly string EndTimeCN;
    /// <summary>
    /// 服务器结束时间-几天为结束
    /// </summary>
    public readonly int GameplayEndTime;
    /// <summary>
    /// 关联的Function表ID,用于判断活动开启
    /// </summary>
    public readonly int FunctionID;
    /// <summary>
    /// 持续时间<br/>类型2生效
    /// </summary>
    public readonly int Duration;
    /// <summary>
    /// 活动<br/>开启时间戳<br/>(国内版)
    /// </summary>
    public readonly int StartTime_CN;
    /// <summary>
    /// 持续时间<br/>类型2生效<br/>(国内版)
    /// </summary>
    public readonly int Duration_CN;
    /// <summary>
    /// 任务提前结束时间<br/>（任务兑换活动）
    /// </summary>
    public readonly int taskEndSeconds;
    /// <summary>
    /// 第几期
    /// </summary>
    public readonly int Tag;
    /// <summary>
    /// 关联的其他表ID<br/>类型1 -&gt; 商店表EquipmentBox<br/>类型2 -&gt; 活动表Diamonds<br/>类型3 -&gt; 商店表Shop|购买进度需要的钻石数量<br/>类型4-&gt;PigBank表ID<br/>*类型5-&gt;商店表ID|购买进度需要的道具ID|购买进度需要的道具数量|转换为金币的道具ID1|转换为金币的道具ID2...（配置为X|0|0|X表示不可以补签）<br/>类型6-&gt;兑换道具ID<br/>类型7-&gt;FestivalGift表ID<br/>类型11-&gt;商店表AccessoryBox<br/>类型22-&gt;同屏显示几个奖励|最多购买多少次<br/>类型24-&gt;内购项ID(shop表ID)<br/>类型31-&gt;商店表CollectionBox<br/>
    /// </summary>
    public readonly int[] ExtraId;
    /// <summary>
    /// 网络版本号
    /// </summary>
    public readonly int NetVersion;
    /// <summary>
    /// 礼包对应奖励
    /// </summary>
    public readonly string[] Reward;
    /// <summary>
    /// 额外奖励
    /// </summary>
    public readonly string[] ExtraReward;
    /// <summary>
    /// 支付ID
    /// </summary>
    public readonly int SkinIapId;
    /// <summary>
    /// 背景图
    /// </summary>
    public readonly string BgSprite;
    /// <summary>
    /// 多语言模板ID<br/>标题|描述|倒计时|已结束
    /// </summary>
    public readonly string[] LanguageTempId;
    /// <summary>
    /// 通用签到：<br/>图集名|主界面入口图标（放MainUI下）|底板背景|头图|普通签到奖励背景|大奖励签到背景|普通物品背景|大奖励物品背景<br/><br/>节日礼包：<br/>图集名|ActivityEntryIcon名
    /// </summary>
    public readonly string[] UITexName;
    /// <summary>
    /// 抽奖宝箱概率是否为up，前端用来展示概率界面<br/>0，正常箱子概率<br/>1，有概率up标记
    /// </summary>
    public readonly int IncreaseProbability;
    /// <summary>
    /// 版权相关多语言id
    /// </summary>
    public readonly string CVLangId;


    public const int __ID__ = -1392962252;
    public override int GetTypeId() => __ID__;

    public  void ResolveRef(Tables tables)
    {
    }

    public override string ToString()
    {
        return "{ "
        + "ActivityId:" + ActivityId + ","
        + "Type:" + Type + ","
        + "SubType:" + SubType + ","
        + "EventID:" + EventID + ","
        + "TrackSource:" + TrackSource + ","
        + "SignID:" + SignID + ","
        + "QuestID:" + QuestID + ","
        + "PayID:" + PayID + ","
        + "ExchangeID:" + ExchangeID + ","
        + "BattlePassID:" + BattlePassID + ","
        + "BattlePassPagesID:" + Luban.StringUtil.CollectionToString(BattlePassPagesID) + ","
        + "MailId:" + Luban.StringUtil.CollectionToString(MailId) + ","
        + "DurationType:" + DurationType + ","
        + "EntryType:" + EntryType + ","
        + "DisplayFund:" + DisplayFund + ","
        + "StartTime:" + StartTime + ","
        + "EndTime:" + EndTime + ","
        + "StartTimeCN:" + StartTimeCN + ","
        + "EndTimeCN:" + EndTimeCN + ","
        + "GameplayEndTime:" + GameplayEndTime + ","
        + "FunctionID:" + FunctionID + ","
        + "Duration:" + Duration + ","
        + "StartTime_CN:" + StartTime_CN + ","
        + "Duration_CN:" + Duration_CN + ","
        + "taskEndSeconds:" + taskEndSeconds + ","
        + "Tag:" + Tag + ","
        + "ExtraId:" + Luban.StringUtil.CollectionToString(ExtraId) + ","
        + "NetVersion:" + NetVersion + ","
        + "Reward:" + Luban.StringUtil.CollectionToString(Reward) + ","
        + "ExtraReward:" + Luban.StringUtil.CollectionToString(ExtraReward) + ","
        + "SkinIapId:" + SkinIapId + ","
        + "BgSprite:" + BgSprite + ","
        + "LanguageTempId:" + Luban.StringUtil.CollectionToString(LanguageTempId) + ","
        + "UITexName:" + Luban.StringUtil.CollectionToString(UITexName) + ","
        + "IncreaseProbability:" + IncreaseProbability + ","
        + "CVLangId:" + CVLangId + ","
        + "}";
    }
}
}

