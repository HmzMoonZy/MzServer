
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using Luban;
using Newtonsoft.Json.Linq;



namespace HotFix.Cfg
{

public sealed partial class IntegralShop_goods : Luban.BeanBase
{
    public IntegralShop_goods(JToken _buf) 
    {
        JObject _obj = _buf as JObject;
        ID = (int)_obj.GetValue("ID");
        TypeId = (int)_obj.GetValue("TypeId");
        GroupId = (int)_obj.GetValue("GroupId");
        WeightInGroup = (int)_obj.GetValue("WeightInGroup");
        { var __json0 = _obj.GetValue("Items"); int _n0 = (__json0 as JArray).Count; Items = new int[_n0]; int __index0=0; foreach(JToken __e0 in __json0) { int __v0;  __v0 = (int)__e0;  Items[__index0++] = __v0; }   }
        RefreshType = (int)_obj.GetValue("RefreshType");
        BuyTimes = (int)_obj.GetValue("BuyTimes");
        currencyID = (int)_obj.GetValue("currencyID");
        Price = (int)_obj.GetValue("Price");
        Sort = (int)_obj.GetValue("Sort");
        RequirementType = (int)_obj.GetValue("RequirementType");
        LevelRequirements = (int)_obj.GetValue("LevelRequirements");
        Discount = (int)_obj.GetValue("Discount");
        Hide = (int)_obj.GetValue("Hide");
    }

    public static IntegralShop_goods DeserializeIntegralShop_goods(JToken _buf)
    {
        return new IntegralShop_goods(_buf);
    }

    /// <summary>
    /// id
    /// </summary>
    public readonly int ID;
    /// <summary>
    /// 归属商店<br/>1、公会商店<br/>2、黑市<br/>3、积分商店<br/>4、魔晶商店
    /// </summary>
    public readonly int TypeId;
    /// <summary>
    /// 归属组
    /// </summary>
    public readonly int GroupId;
    /// <summary>
    /// 组内权重
    /// </summary>
    public readonly int WeightInGroup;
    /// <summary>
    /// 货物参数<br/>（道具ID/物品数量）
    /// </summary>
    public readonly int[] Items;
    /// <summary>
    /// 刷新类型：<br/>0：不刷新<br/>1：天<br/>2：周<br/>3：月
    /// </summary>
    public readonly int RefreshType;
    /// <summary>
    /// 可购买次数
    /// </summary>
    public readonly int BuyTimes;
    /// <summary>
    /// 货币类型
    /// </summary>
    public readonly int currencyID;
    /// <summary>
    /// 定价<br/>（原价/单次）
    /// </summary>
    public readonly int Price;
    /// <summary>
    /// 排序权重<br/>（小的在前）
    /// </summary>
    public readonly int Sort;
    /// <summary>
    /// 控制类型<br/>1：公会等级<br/>2.关卡
    /// </summary>
    public readonly int RequirementType;
    /// <summary>
    /// 解锁参数<br/>达到解锁
    /// </summary>
    public readonly int LevelRequirements;
    /// <summary>
    /// 折扣<br/>(百分比/不打折为100)
    /// </summary>
    public readonly int Discount;
    /// <summary>
    /// 是否隐藏<br/>0为否
    /// </summary>
    public readonly int Hide;


    public const int __ID__ = 2023066553;
    public override int GetTypeId() => __ID__;

    public  void ResolveRef(Tables tables)
    {
    }

    public override string ToString()
    {
        return "{ "
        + "ID:" + ID + ","
        + "TypeId:" + TypeId + ","
        + "GroupId:" + GroupId + ","
        + "WeightInGroup:" + WeightInGroup + ","
        + "Items:" + Luban.StringUtil.CollectionToString(Items) + ","
        + "RefreshType:" + RefreshType + ","
        + "BuyTimes:" + BuyTimes + ","
        + "currencyID:" + currencyID + ","
        + "Price:" + Price + ","
        + "Sort:" + Sort + ","
        + "RequirementType:" + RequirementType + ","
        + "LevelRequirements:" + LevelRequirements + ","
        + "Discount:" + Discount + ","
        + "Hide:" + Hide + ","
        + "}";
    }
}
}

