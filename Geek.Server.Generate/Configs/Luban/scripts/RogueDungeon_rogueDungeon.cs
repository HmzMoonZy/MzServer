
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using Luban;
using Newtonsoft.Json.Linq;



namespace HotFix.Cfg
{

public sealed partial class RogueDungeon_rogueDungeon : Luban.BeanBase
{
    public RogueDungeon_rogueDungeon(JToken _buf) 
    {
        JObject _obj = _buf as JObject;
        id = (int)_obj.GetValue("id");
        name = (string)_obj.GetValue("name");
        endEvent = (int)_obj.GetValue("endEvent");
        mapID = (int)_obj.GetValue("mapID");
        { var __json0 = _obj.GetValue("StartAttributeArea"); int _n0 = (__json0 as JArray).Count; StartAttributeArea = new string[_n0]; int __index0=0; foreach(JToken __e0 in __json0) { string __v0;  __v0 = (string)__e0;  StartAttributeArea[__index0++] = __v0; }   }
        { var __json0 = _obj.GetValue("AddAttributeArea"); int _n0 = (__json0 as JArray).Count; AddAttributeArea = new string[_n0]; int __index0=0; foreach(JToken __e0 in __json0) { string __v0;  __v0 = (string)__e0;  AddAttributeArea[__index0++] = __v0; }   }
        { var __json0 = _obj.GetValue("firstReward"); int _n0 = (__json0 as JArray).Count; firstReward = new string[_n0]; int __index0=0; foreach(JToken __e0 in __json0) { string __v0;  __v0 = (string)__e0;  firstReward[__index0++] = __v0; }   }
        { var __json0 = _obj.GetValue("firstRewardB"); int _n0 = (__json0 as JArray).Count; firstRewardB = new string[_n0]; int __index0=0; foreach(JToken __e0 in __json0) { string __v0;  __v0 = (string)__e0;  firstRewardB[__index0++] = __v0; }   }
        { var __json0 = _obj.GetValue("playReward"); int _n0 = (__json0 as JArray).Count; playReward = new string[_n0]; int __index0=0; foreach(JToken __e0 in __json0) { string __v0;  __v0 = (string)__e0;  playReward[__index0++] = __v0; }   }
        { var __json0 = _obj.GetValue("playRewardB"); int _n0 = (__json0 as JArray).Count; playRewardB = new string[_n0]; int __index0=0; foreach(JToken __e0 in __json0) { string __v0;  __v0 = (string)__e0;  playRewardB[__index0++] = __v0; }   }
        { var __json0 = _obj.GetValue("monsterCfg"); int _n0 = (__json0 as JArray).Count; monsterCfg = new int[_n0]; int __index0=0; foreach(JToken __e0 in __json0) { int __v0;  __v0 = (int)__e0;  monsterCfg[__index0++] = __v0; }   }
        eliteCfg = (int)_obj.GetValue("eliteCfg");
        bossCfg = (int)_obj.GetValue("bossCfg");
        bossDoubleCfg = (int)_obj.GetValue("bossDoubleCfg");
        { var __json0 = _obj.GetValue("buffData"); int _n0 = (__json0 as JArray).Count; buffData = new string[_n0]; int __index0=0; foreach(JToken __e0 in __json0) { string __v0;  __v0 = (string)__e0;  buffData[__index0++] = __v0; }   }
        normalBattleAttr = (string)_obj.GetValue("normalBattleAttr");
        eliteBattleAttr = (string)_obj.GetValue("eliteBattleAttr");
        bossBattleAttr = (string)_obj.GetValue("bossBattleAttr");
        { var __json0 = _obj.GetValue("showMonster"); int _n0 = (__json0 as JArray).Count; showMonster = new string[_n0]; int __index0=0; foreach(JToken __e0 in __json0) { string __v0;  __v0 = (string)__e0;  showMonster[__index0++] = __v0; }   }
        speedAdd = (int)_obj.GetValue("speedAdd");
    }

    public static RogueDungeon_rogueDungeon DeserializeRogueDungeon_rogueDungeon(JToken _buf)
    {
        return new RogueDungeon_rogueDungeon(_buf);
    }

    /// <summary>
    /// id
    /// </summary>
    public readonly int id;
    /// <summary>
    /// 塔的多语言名称
    /// </summary>
    public readonly string name;
    /// <summary>
    /// BOSS结束后事件池
    /// </summary>
    public readonly int endEvent;
    /// <summary>
    /// 地图ID
    /// </summary>
    public readonly int mapID;
    /// <summary>
    /// 起始校验
    /// </summary>
    public readonly string[] StartAttributeArea;
    /// <summary>
    /// 增加校验
    /// </summary>
    public readonly string[] AddAttributeArea;
    /// <summary>
    /// 首通奖励
    /// </summary>
    public readonly string[] firstReward;
    /// <summary>
    /// 首通奖励
    /// </summary>
    public readonly string[] firstRewardB;
    /// <summary>
    /// 参与奖励
    /// </summary>
    public readonly string[] playReward;
    /// <summary>
    /// 参与奖励
    /// </summary>
    public readonly string[] playRewardB;
    /// <summary>
    /// 怪物对阵组（前4关）
    /// </summary>
    public readonly int[] monsterCfg;
    /// <summary>
    /// 精英关
    /// </summary>
    public readonly int eliteCfg;
    /// <summary>
    /// BOSS关
    /// </summary>
    public readonly int bossCfg;
    /// <summary>
    /// 双子BOSS关
    /// </summary>
    public readonly int bossDoubleCfg;
    /// <summary>
    /// 怪物信息<br/>攻击增益|防御增益|生命值增益
    /// </summary>
    public readonly string[] buffData;
    /// <summary>
    /// 普通三围战斗属性加成
    /// </summary>
    public readonly string normalBattleAttr;
    /// <summary>
    /// 精英三围战斗属性加成
    /// </summary>
    public readonly string eliteBattleAttr;
    /// <summary>
    /// boss三围战属性加成
    /// </summary>
    public readonly string bossBattleAttr;
    /// <summary>
    /// 展示怪物ID,战力|...
    /// </summary>
    public readonly string[] showMonster;
    /// <summary>
    /// 速度加成(万分比)
    /// </summary>
    public readonly int speedAdd;


    public const int __ID__ = -1089701441;
    public override int GetTypeId() => __ID__;

    public  void ResolveRef(Tables tables)
    {
    }

    public override string ToString()
    {
        return "{ "
        + "id:" + id + ","
        + "name:" + name + ","
        + "endEvent:" + endEvent + ","
        + "mapID:" + mapID + ","
        + "StartAttributeArea:" + Luban.StringUtil.CollectionToString(StartAttributeArea) + ","
        + "AddAttributeArea:" + Luban.StringUtil.CollectionToString(AddAttributeArea) + ","
        + "firstReward:" + Luban.StringUtil.CollectionToString(firstReward) + ","
        + "firstRewardB:" + Luban.StringUtil.CollectionToString(firstRewardB) + ","
        + "playReward:" + Luban.StringUtil.CollectionToString(playReward) + ","
        + "playRewardB:" + Luban.StringUtil.CollectionToString(playRewardB) + ","
        + "monsterCfg:" + Luban.StringUtil.CollectionToString(monsterCfg) + ","
        + "eliteCfg:" + eliteCfg + ","
        + "bossCfg:" + bossCfg + ","
        + "bossDoubleCfg:" + bossDoubleCfg + ","
        + "buffData:" + Luban.StringUtil.CollectionToString(buffData) + ","
        + "normalBattleAttr:" + normalBattleAttr + ","
        + "eliteBattleAttr:" + eliteBattleAttr + ","
        + "bossBattleAttr:" + bossBattleAttr + ","
        + "showMonster:" + Luban.StringUtil.CollectionToString(showMonster) + ","
        + "speedAdd:" + speedAdd + ","
        + "}";
    }
}
}

