
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using Luban;
using Newtonsoft.Json.Linq;



namespace HotFix.Cfg
{

public sealed partial class Equip_equipEvolution : Luban.BeanBase
{
    public Equip_equipEvolution(JToken _buf) 
    {
        JObject _obj = _buf as JObject;
        id = (int)_obj.GetValue("id");
        evolutionLevel = (int)_obj.GetValue("evolutionLevel");
        nextID = (int)_obj.GetValue("nextID");
        { var __json0 = _obj.GetValue("evolutionCost"); int _n0 = (__json0 as JArray).Count; evolutionCost = new string[_n0]; int __index0=0; foreach(JToken __e0 in __json0) { string __v0;  __v0 = (string)__e0;  evolutionCost[__index0++] = __v0; }   }
        { var __json0 = _obj.GetValue("evolutionAttributes"); int _n0 = (__json0 as JArray).Count; evolutionAttributes = new long[_n0]; int __index0=0; foreach(JToken __e0 in __json0) { long __v0;  __v0 = (long)__e0;  evolutionAttributes[__index0++] = __v0; }   }
        unlockType = (int)_obj.GetValue("unlockType");
        { var __json0 = _obj.GetValue("talentLimit"); int _n0 = (__json0 as JArray).Count; talentLimit = new int[_n0]; int __index0=0; foreach(JToken __e0 in __json0) { int __v0;  __v0 = (int)__e0;  talentLimit[__index0++] = __v0; }   }
        unlockDesc = (string)_obj.GetValue("unlockDesc");
        maxLevel = (int)_obj.GetValue("maxLevel");
        { var __json0 = _obj.GetValue("upgradeAttributes"); int _n0 = (__json0 as JArray).Count; upgradeAttributes = new long[_n0]; int __index0=0; foreach(JToken __e0 in __json0) { long __v0;  __v0 = (long)__e0;  upgradeAttributes[__index0++] = __v0; }   }
        { var __json0 = _obj.GetValue("powerLvl"); int _n0 = (__json0 as JArray).Count; powerLvl = new string[_n0]; int __index0=0; foreach(JToken __e0 in __json0) { string __v0;  __v0 = (string)__e0;  powerLvl[__index0++] = __v0; }   }
    }

    public static Equip_equipEvolution DeserializeEquip_equipEvolution(JToken _buf)
    {
        return new Equip_equipEvolution(_buf);
    }

    /// <summary>
    /// ID<br/>通过装备标签ID*100+突破等级
    /// </summary>
    public readonly int id;
    /// <summary>
    /// 突破等级
    /// </summary>
    public readonly int evolutionLevel;
    /// <summary>
    /// 下一等级ID 满级为0
    /// </summary>
    public readonly int nextID;
    /// <summary>
    /// 突破消耗
    /// </summary>
    public readonly string[] evolutionCost;
    /// <summary>
    /// 本阶段初始属性
    /// </summary>
    public readonly long[] evolutionAttributes;
    /// <summary>
    /// 1要求天赋<br/>2要求传承
    /// </summary>
    public readonly int unlockType;
    /// <summary>
    /// 天赋阶数限制
    /// </summary>
    public readonly int[] talentLimit;
    /// <summary>
    /// 解锁多语言
    /// </summary>
    public readonly string unlockDesc;
    /// <summary>
    /// 强化等级上限
    /// </summary>
    public readonly int maxLevel;
    /// <summary>
    /// 每级强化属性
    /// </summary>
    public readonly long[] upgradeAttributes;
    /// <summary>
    /// 基础战力,万分比战力,固定值战力<br/>本级战力
    /// </summary>
    public readonly string[] powerLvl;


    public const int __ID__ = -1931321030;
    public override int GetTypeId() => __ID__;

    public  void ResolveRef(Tables tables)
    {
    }

    public override string ToString()
    {
        return "{ "
        + "id:" + id + ","
        + "evolutionLevel:" + evolutionLevel + ","
        + "nextID:" + nextID + ","
        + "evolutionCost:" + Luban.StringUtil.CollectionToString(evolutionCost) + ","
        + "evolutionAttributes:" + Luban.StringUtil.CollectionToString(evolutionAttributes) + ","
        + "unlockType:" + unlockType + ","
        + "talentLimit:" + Luban.StringUtil.CollectionToString(talentLimit) + ","
        + "unlockDesc:" + unlockDesc + ","
        + "maxLevel:" + maxLevel + ","
        + "upgradeAttributes:" + Luban.StringUtil.CollectionToString(upgradeAttributes) + ","
        + "powerLvl:" + Luban.StringUtil.CollectionToString(powerLvl) + ","
        + "}";
    }
}
}

