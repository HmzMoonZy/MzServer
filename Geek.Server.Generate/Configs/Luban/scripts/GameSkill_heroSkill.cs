
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using Luban;


namespace HotFix.Cfg
{
public sealed partial class GameSkill_heroSkill : Luban.BeanBase
{
    public GameSkill_heroSkill(ByteBuf _buf) 
    {
        id = _buf.ReadInt();
        nameID = _buf.ReadString();
        infoID = _buf.ReadString();
        infoDetailID = _buf.ReadString();
        fullDetailID = _buf.ReadString();
        iconAtlasID = _buf.ReadInt();
        icon = _buf.ReadString();
        badgeAtlas = _buf.ReadInt();
        iconBadge = _buf.ReadString();
        isShowInfoHUD = _buf.ReadInt();
        prefabID = _buf.ReadInt();
        startPrefabID = _buf.ReadInt();
        startPosID = _buf.ReadString();
        typeID = _buf.ReadInt();
        parameters = _buf.ReadString();
        {int __n0 = System.Math.Min(_buf.ReadSize(), _buf.Size);skillTypeDamageAddParam = new int[__n0];for(var __index0 = 0 ; __index0 < __n0 ; __index0++) { int __e0;__e0 = _buf.ReadInt(); skillTypeDamageAddParam[__index0] = __e0;}}
        freedType = _buf.ReadInt();
        tag = _buf.ReadInt();
        initCD = _buf.ReadInt();
        CD = _buf.ReadInt();
        moveType = _buf.ReadInt();
        moveParam = _buf.ReadString();
        teamMoveType = _buf.ReadInt();
        teamMoveParam = _buf.ReadString();
        animID = _buf.ReadInt();
        {int __n0 = System.Math.Min(_buf.ReadSize(), _buf.Size);animEventNodes = new string[__n0];for(var __index0 = 0 ; __index0 < __n0 ; __index0++) { string __e0;__e0 = _buf.ReadString(); animEventNodes[__index0] = __e0;}}
        {int __n0 = System.Math.Min(_buf.ReadSize(), _buf.Size);fireBullets = new int[__n0];for(var __index0 = 0 ; __index0 < __n0 ; __index0++) { int __e0;__e0 = _buf.ReadInt(); fireBullets[__index0] = __e0;}}
        sortId = _buf.ReadInt();
        triggerConditions = _buf.ReadString();
        {int __n0 = System.Math.Min(_buf.ReadSize(), _buf.Size);selectIDs = new int[__n0];for(var __index0 = 0 ; __index0 < __n0 ; __index0++) { int __e0;__e0 = _buf.ReadInt(); selectIDs[__index0] = __e0;}}
        {int __n0 = System.Math.Min(_buf.ReadSize(), _buf.Size);teamSelectIDs = new int[__n0];for(var __index0 = 0 ; __index0 < __n0 ; __index0++) { int __e0;__e0 = _buf.ReadInt(); teamSelectIDs[__index0] = __e0;}}
        rangeType = _buf.ReadInt();
        groupSelectMaxCount = _buf.ReadInt();
        hurtAttributes = _buf.ReadString();
        hurtAttributesUseType = _buf.ReadInt();
        hurtAttributesFactor = _buf.ReadInt();
        effectType = _buf.ReadInt();
        baseAttributes = _buf.ReadString();
        skillStartOwnerAddBuffs = _buf.ReadString();
        skillEndOwnerAddBuffs = _buf.ReadString();
        skillStartTargetAddBuffs = _buf.ReadString();
        skillEndTargetAddBuffs = _buf.ReadString();
        skillStartFriendAddBuffs = _buf.ReadString();
        skillEndFriendAddBuffs = _buf.ReadString();
        recharge = _buf.ReadInt();
        legacyPower = _buf.ReadInt();
        legacyPowerMax = _buf.ReadInt();
        legacyBindmodelId = _buf.ReadInt();
        lagacyAppearFrame = _buf.ReadInt();
        heroListId = _buf.ReadInt();
        sagecraftType = _buf.ReadInt();
        isBlack = _buf.ReadInt();
        soundID = _buf.ReadInt();
        combat = _buf.ReadInt();
        skillEndDelayFrame = _buf.ReadInt();
        skillGroupId = _buf.ReadInt();
        skillPriority = _buf.ReadInt();
        maxCount = _buf.ReadInt();
    }

    public static GameSkill_heroSkill DeserializeGameSkill_heroSkill(ByteBuf _buf)
    {
        return new GameSkill_heroSkill(_buf);
    }

    /// <summary>
    /// 内容ID
    /// </summary>
    public readonly int id;
    /// <summary>
    /// 名称多语言ID
    /// </summary>
    public readonly string nameID;
    /// <summary>
    /// 升级描述多语言ID
    /// </summary>
    public readonly string infoID;
    /// <summary>
    /// 完整描述多语言ID
    /// </summary>
    public readonly string infoDetailID;
    /// <summary>
    /// 完整描述（有具体数值的）多语言id
    /// </summary>
    public readonly string fullDetailID;
    /// <summary>
    /// icon图集ID
    /// </summary>
    public readonly int iconAtlasID;
    /// <summary>
    /// 图标
    /// </summary>
    public readonly string icon;
    /// <summary>
    /// 图标角标图集
    /// </summary>
    public readonly int badgeAtlas;
    /// <summary>
    /// 图标角标
    /// </summary>
    public readonly string iconBadge;
    /// <summary>
    /// 是否显示技能信息HUD
    /// </summary>
    public readonly int isShowInfoHUD;
    /// <summary>
    /// prefabID
    /// </summary>
    public readonly int prefabID;
    /// <summary>
    /// 技能开始释放时特效prefabID（引自skillPrefab）<br/>填0则不生效
    /// </summary>
    public readonly int startPrefabID;
    /// <summary>
    /// 技能开始释放时挂点ID（看note表）<br/>202,1  id,方向<br/>0：以父级朝向同步（关节点正方向）<br/>1：以目标朝向同步（角色正方向）<br/>2：以世界方向朝向同步（世界正方向）
    /// </summary>
    public readonly string startPosID;
    /// <summary>
    /// 类型skillType表
    /// </summary>
    public readonly int typeID;
    /// <summary>
    /// 参数
    /// </summary>
    public readonly string parameters;
    /// <summary>
    /// 技能伤害加成类型<br/>101.普攻  102.大招<br/>201.飞刀  202.落剑<br/>203.剑气  301.火焰波<br/>302.灼烧  401.闪电<br/>501.冰刺  601.连击伤害<br/>602 反击伤害 603 技能伤害<br/>604 宠物伤害
    /// </summary>
    public readonly int[] skillTypeDamageAddParam;
    /// <summary>
    /// 释放类型<br/>1.被动<br/>2.小招<br/>3.普攻<br/>4.大招<br/>5.传承技<br/>99.宠物大招
    /// </summary>
    public readonly int freedType;
    /// <summary>
    /// 技能标签(减CD)<br/>
    /// </summary>
    public readonly int tag;
    /// <summary>
    /// 首次使用CD（回合）
    /// </summary>
    public readonly int initCD;
    /// <summary>
    /// CD（回合）
    /// </summary>
    public readonly int CD;
    /// <summary>
    /// 移动类型：<br/>0.原地不动<br/>1.移动<br/><br/>
    /// </summary>
    public readonly int moveType;
    /// <summary>
    /// 移动参数
    /// </summary>
    public readonly string moveParam;
    /// <summary>
    /// 移动类型：<br/>继承moveType类型，可复用<br/>新增：<br/>101.主角移动到指定点<br/>103.神器移动到指定点
    /// </summary>
    public readonly int teamMoveType;
    /// <summary>
    /// 移动参数<br/>(posType取自CMemberBodyPosType)
    /// </summary>
    public readonly string teamMoveParam;
    /// <summary>
    /// 动画ID<br/>skillAnimation表<br/>填0为无技能动画
    /// </summary>
    public readonly int animID;
    /// <summary>
    /// 事件节点<br/>帧数,事件名<br/>|分割多条<br/>
    /// </summary>
    public readonly string[] animEventNodes;
    /// <summary>
    /// 每个fire事件对应的子弹（fireBulletID）
    /// </summary>
    public readonly int[] fireBullets;
    /// <summary>
    /// 技能排序id
    /// </summary>
    public readonly int sortId;
    /// <summary>
    /// 触发时机ID ! 条件数组<br/><br/>时机ID!条件ID&amp;条件ID|时机ID!条件ID&amp;条件ID
    /// </summary>
    public readonly string triggerConditions;
    /// <summary>
    /// 寻找目标逻辑ID<br/>见skillSelect表
    /// </summary>
    public readonly int[] selectIDs;
    /// <summary>
    /// 寻找目标逻辑ID<br/>见skillSelect表
    /// </summary>
    public readonly int[] teamSelectIDs;
    /// <summary>
    /// 技能范围类型<br/>1.单体<br/>2.群攻
    /// </summary>
    public readonly int rangeType;
    /// <summary>
    /// 群攻技能选择成员的数量<br/>==0 最大
    /// </summary>
    public readonly int groupSelectMaxCount;
    /// <summary>
    /// 每段属性<br/>attack=100|attack=200
    /// </summary>
    public readonly string hurtAttributes;
    /// <summary>
    /// hurtAttributes使用类型：<br/>0 使用Skill表<br/>1 使用heroskill表<br/>2 heroskill表+skill表
    /// </summary>
    public readonly int hurtAttributesUseType;
    /// <summary>
    /// 伤害公式系数，<br/>数值默认放大100倍
    /// </summary>
    public readonly int hurtAttributesFactor;
    /// <summary>
    /// 技能属性类型<br/>1.伤害类<br/>2.治疗类<br/>3.其他<br/>
    /// </summary>
    public readonly int effectType;
    /// <summary>
    /// 基础属性
    /// </summary>
    public readonly string baseAttributes;
    /// <summary>
    /// 技能开始时: 施法者加Buffs
    /// </summary>
    public readonly string skillStartOwnerAddBuffs;
    /// <summary>
    /// 技能结束时: 施法者加Buffs
    /// </summary>
    public readonly string skillEndOwnerAddBuffs;
    /// <summary>
    /// 技能开始时: 目标加Buffs
    /// </summary>
    public readonly string skillStartTargetAddBuffs;
    /// <summary>
    /// 技能结束时: 目标加Buffs
    /// </summary>
    public readonly string skillEndTargetAddBuffs;
    /// <summary>
    /// 技能开始时: 友方(主角)加Buffs
    /// </summary>
    public readonly string skillStartFriendAddBuffs;
    /// <summary>
    /// 技能结束时: 友方(主角)加Buffs
    /// </summary>
    public readonly string skillEndFriendAddBuffs;
    /// <summary>
    /// 充能(怒气)
    /// </summary>
    public readonly int recharge;
    /// <summary>
    /// 神力充能
    /// </summary>
    public readonly int legacyPower;
    /// <summary>
    /// 传承技触发值
    /// </summary>
    public readonly int legacyPowerMax;
    /// <summary>
    /// 传承技绑定模型id
    /// </summary>
    public readonly int legacyBindmodelId;
    /// <summary>
    /// 传承技召唤模型出现的动画帧数
    /// </summary>
    public readonly int lagacyAppearFrame;
    /// <summary>
    /// 英雄Id
    /// </summary>
    public readonly int heroListId;
    /// <summary>
    /// 附魔特效<br/>1：天使<br/>2：恶魔 <br/>3：雷电<br/>4、吸血
    /// </summary>
    public readonly int sagecraftType;
    /// <summary>
    /// 是否黑屏<br/>0否 1是
    /// </summary>
    public readonly int isBlack;
    /// <summary>
    /// 技能音效：<br/>Sound表ID
    /// </summary>
    public readonly int soundID;
    /// <summary>
    /// 战力
    /// </summary>
    public readonly int combat;
    /// <summary>
    /// 技能完成后等待帧<br/>用作动画表现等待
    /// </summary>
    public readonly int skillEndDelayFrame;
    /// <summary>
    /// 技能互斥组
    /// </summary>
    public readonly int skillGroupId;
    /// <summary>
    /// 技能替换优先级<br/>大的优先
    /// </summary>
    public readonly int skillPriority;
    /// <summary>
    /// 战斗重复技能上限
    /// </summary>
    public readonly int maxCount;
   
    public const int __ID__ = 2030197655;
    public override int GetTypeId() => __ID__;

    public  void ResolveRef(Tables tables)
    {
    }

    public override string ToString()
    {
        return "{ "
        + "id:" + id + ","
        + "nameID:" + nameID + ","
        + "infoID:" + infoID + ","
        + "infoDetailID:" + infoDetailID + ","
        + "fullDetailID:" + fullDetailID + ","
        + "iconAtlasID:" + iconAtlasID + ","
        + "icon:" + icon + ","
        + "badgeAtlas:" + badgeAtlas + ","
        + "iconBadge:" + iconBadge + ","
        + "isShowInfoHUD:" + isShowInfoHUD + ","
        + "prefabID:" + prefabID + ","
        + "startPrefabID:" + startPrefabID + ","
        + "startPosID:" + startPosID + ","
        + "typeID:" + typeID + ","
        + "parameters:" + parameters + ","
        + "skillTypeDamageAddParam:" + Luban.StringUtil.CollectionToString(skillTypeDamageAddParam) + ","
        + "freedType:" + freedType + ","
        + "tag:" + tag + ","
        + "initCD:" + initCD + ","
        + "CD:" + CD + ","
        + "moveType:" + moveType + ","
        + "moveParam:" + moveParam + ","
        + "teamMoveType:" + teamMoveType + ","
        + "teamMoveParam:" + teamMoveParam + ","
        + "animID:" + animID + ","
        + "animEventNodes:" + Luban.StringUtil.CollectionToString(animEventNodes) + ","
        + "fireBullets:" + Luban.StringUtil.CollectionToString(fireBullets) + ","
        + "sortId:" + sortId + ","
        + "triggerConditions:" + triggerConditions + ","
        + "selectIDs:" + Luban.StringUtil.CollectionToString(selectIDs) + ","
        + "teamSelectIDs:" + Luban.StringUtil.CollectionToString(teamSelectIDs) + ","
        + "rangeType:" + rangeType + ","
        + "groupSelectMaxCount:" + groupSelectMaxCount + ","
        + "hurtAttributes:" + hurtAttributes + ","
        + "hurtAttributesUseType:" + hurtAttributesUseType + ","
        + "hurtAttributesFactor:" + hurtAttributesFactor + ","
        + "effectType:" + effectType + ","
        + "baseAttributes:" + baseAttributes + ","
        + "skillStartOwnerAddBuffs:" + skillStartOwnerAddBuffs + ","
        + "skillEndOwnerAddBuffs:" + skillEndOwnerAddBuffs + ","
        + "skillStartTargetAddBuffs:" + skillStartTargetAddBuffs + ","
        + "skillEndTargetAddBuffs:" + skillEndTargetAddBuffs + ","
        + "skillStartFriendAddBuffs:" + skillStartFriendAddBuffs + ","
        + "skillEndFriendAddBuffs:" + skillEndFriendAddBuffs + ","
        + "recharge:" + recharge + ","
        + "legacyPower:" + legacyPower + ","
        + "legacyPowerMax:" + legacyPowerMax + ","
        + "legacyBindmodelId:" + legacyBindmodelId + ","
        + "lagacyAppearFrame:" + lagacyAppearFrame + ","
        + "heroListId:" + heroListId + ","
        + "sagecraftType:" + sagecraftType + ","
        + "isBlack:" + isBlack + ","
        + "soundID:" + soundID + ","
        + "combat:" + combat + ","
        + "skillEndDelayFrame:" + skillEndDelayFrame + ","
        + "skillGroupId:" + skillGroupId + ","
        + "skillPriority:" + skillPriority + ","
        + "maxCount:" + maxCount + ","
        + "}";
    }
}

}

