
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using Luban;
using Newtonsoft.Json.Linq;



namespace HotFix.Cfg
{

public sealed partial class TalentApex_talentApexNode : Luban.BeanBase
{
    public TalentApex_talentApexNode(JToken _buf) 
    {
        JObject _obj = _buf as JObject;
        id = (int)_obj.GetValue("id");
        belong = (int)_obj.GetValue("belong");
        X = (int)_obj.GetValue("X");
        Y = (int)_obj.GetValue("Y");
        { var __json0 = _obj.GetValue("BattleType"); int _n0 = (__json0 as JArray).Count; BattleType = new int[_n0]; int __index0=0; foreach(JToken __e0 in __json0) { int __v0;  __v0 = (int)__e0;  BattleType[__index0++] = __v0; }   }
        { var __json0 = _obj.GetValue("FrontNode"); int _n0 = (__json0 as JArray).Count; FrontNode = new int[_n0]; int __index0=0; foreach(JToken __e0 in __json0) { int __v0;  __v0 = (int)__e0;  FrontNode[__index0++] = __v0; }   }
        unlcokType = (int)_obj.GetValue("unlcokType");
        iconAtlas = (int)_obj.GetValue("iconAtlas");
        nameId = (string)_obj.GetValue("nameId");
        icon = (string)_obj.GetValue("icon");
        iconCorner = (string)_obj.GetValue("iconCorner");
        Style = (int)_obj.GetValue("Style");
    }

    public static TalentApex_talentApexNode DeserializeTalentApex_talentApexNode(JToken _buf)
    {
        return new TalentApex_talentApexNode(_buf);
    }

    /// <summary>
    /// ID
    /// </summary>
    public readonly int id;
    /// <summary>
    /// 所属天赋树
    /// </summary>
    public readonly int belong;
    /// <summary>
    /// 横轴
    /// </summary>
    public readonly int X;
    /// <summary>
    /// 纵轴
    /// </summary>
    public readonly int Y;
    /// <summary>
    /// 影响的战斗类型<br/>0 - 所有<br/>1 - 章节战斗<br/>2 - 圣诞Boss<br/>3 - 通用副本<br/>4 - 公会Boss<br/>5 - 公会战<br/>6 - 竞技场<br/>7 - 地牢<br/>8 - 挑战塔<br/>9 - 世界Boss<br/>10 - 大秘境
    /// </summary>
    public readonly int[] BattleType;
    /// <summary>
    /// 前置节点
    /// </summary>
    public readonly int[] FrontNode;
    /// <summary>
    /// 解锁类型<br/>0 - 解锁且点亮<br/>1 - 任意前置点亮<br/>2 - 任意前置满级<br/>3 - 所有前置点亮<br/>4 - 所有前置满级
    /// </summary>
    public readonly int unlcokType;
    /// <summary>
    /// 图标图集
    /// </summary>
    public readonly int iconAtlas;
    /// <summary>
    /// 节点名称
    /// </summary>
    public readonly string nameId;
    /// <summary>
    /// 图标
    /// </summary>
    public readonly string icon;
    /// <summary>
    /// 角标<br/>不配则无
    /// </summary>
    public readonly string iconCorner;
    /// <summary>
    /// 样式关联
    /// </summary>
    public readonly int Style;


    public const int __ID__ = -822671519;
    public override int GetTypeId() => __ID__;

    public  void ResolveRef(Tables tables)
    {
    }

    public override string ToString()
    {
        return "{ "
        + "id:" + id + ","
        + "belong:" + belong + ","
        + "X:" + X + ","
        + "Y:" + Y + ","
        + "BattleType:" + Luban.StringUtil.CollectionToString(BattleType) + ","
        + "FrontNode:" + Luban.StringUtil.CollectionToString(FrontNode) + ","
        + "unlcokType:" + unlcokType + ","
        + "iconAtlas:" + iconAtlas + ","
        + "nameId:" + nameId + ","
        + "icon:" + icon + ","
        + "iconCorner:" + iconCorner + ","
        + "Style:" + Style + ","
        + "}";
    }
}
}

