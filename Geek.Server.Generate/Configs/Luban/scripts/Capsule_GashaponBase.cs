
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using Luban;
using Newtonsoft.Json.Linq;



namespace HotFix.Cfg
{

public sealed partial class Capsule_GashaponBase : Luban.BeanBase
{
    public Capsule_GashaponBase(JToken _buf) 
    {
        JObject _obj = _buf as JObject;
        ID = (int)_obj.GetValue("ID");
        ConnectActivityId = (int)_obj.GetValue("ConnectActivityId");
        LotteryItem = (int)_obj.GetValue("LotteryItem");
        BuyLimitNum = (int)_obj.GetValue("BuyLimitNum");
        PointItem = (int)_obj.GetValue("PointItem");
        PointItem1 = (int)_obj.GetValue("PointItem1");
        GiftItemId = (int)_obj.GetValue("GiftItemId");
        LotteryPrice = (int)_obj.GetValue("LotteryPrice");
        { var __json0 = _obj.GetValue("BuyLimit"); int _n0 = (__json0 as JArray).Count; BuyLimit = new string[_n0]; int __index0=0; foreach(JToken __e0 in __json0) { string __v0;  __v0 = (string)__e0;  BuyLimit[__index0++] = __v0; }   }
        DefaultLottery = (int)_obj.GetValue("DefaultLottery");
        { var __json0 = _obj.GetValue("LoopBox"); int _n0 = (__json0 as JArray).Count; LoopBox = new int[_n0]; int __index0=0; foreach(JToken __e0 in __json0) { int __v0;  __v0 = (int)__e0;  LoopBox[__index0++] = __v0; }   }
        { var __json0 = _obj.GetValue("LoopBoxTime"); int _n0 = (__json0 as JArray).Count; LoopBoxTime = new int[_n0]; int __index0=0; foreach(JToken __e0 in __json0) { int __v0;  __v0 = (int)__e0;  LoopBoxTime[__index0++] = __v0; }   }
        SpinLuckPoints = (int)_obj.GetValue("SpinLuckPoints");
        GiftLuckPoints = (int)_obj.GetValue("GiftLuckPoints");
        LuckPointsLimit = (int)_obj.GetValue("LuckPointsLimit");
        LuckPointsConsume = (int)_obj.GetValue("LuckPointsConsume");
        { var __json0 = _obj.GetValue("GiftReward"); int _n0 = (__json0 as JArray).Count; GiftReward = new string[_n0]; int __index0=0; foreach(JToken __e0 in __json0) { string __v0;  __v0 = (string)__e0;  GiftReward[__index0++] = __v0; }   }
        { var __json0 = _obj.GetValue("DailyLimit"); int _n0 = (__json0 as JArray).Count; DailyLimit = new int[_n0]; int __index0=0; foreach(JToken __e0 in __json0) { int __v0;  __v0 = (int)__e0;  DailyLimit[__index0++] = __v0; }   }
        { var __json0 = _obj.GetValue("BigReward"); int _n0 = (__json0 as JArray).Count; BigReward = new string[_n0]; int __index0=0; foreach(JToken __e0 in __json0) { string __v0;  __v0 = (string)__e0;  BigReward[__index0++] = __v0; }   }
        { var __json0 = _obj.GetValue("MailItems"); int _n0 = (__json0 as JArray).Count; MailItems = new string[_n0]; int __index0=0; foreach(JToken __e0 in __json0) { string __v0;  __v0 = (string)__e0;  MailItems[__index0++] = __v0; }   }
        MailId = (string)_obj.GetValue("MailId");
    }

    public static Capsule_GashaponBase DeserializeCapsule_GashaponBase(JToken _buf)
    {
        return new Capsule_GashaponBase(_buf);
    }

    /// <summary>
    /// ID
    /// </summary>
    public readonly int ID;
    /// <summary>
    /// 关联的活动ID<br/>EventOpenTime表ID
    /// </summary>
    public readonly int ConnectActivityId;
    /// <summary>
    /// 抽奖券道具
    /// </summary>
    public readonly int LotteryItem;
    /// <summary>
    /// 购买数量上限
    /// </summary>
    public readonly int BuyLimitNum;
    /// <summary>
    /// 普通兑换道具
    /// </summary>
    public readonly int PointItem;
    /// <summary>
    /// 高级兑换道具
    /// </summary>
    public readonly int PointItem1;
    /// <summary>
    /// 礼物道具id
    /// </summary>
    public readonly int GiftItemId;
    /// <summary>
    /// 抽奖券售价，钻石
    /// </summary>
    public readonly int LotteryPrice;
    /// <summary>
    /// 根据钻石余量设定单次购买抽奖券上限<br/>最小数,最大数,上限|...
    /// </summary>
    public readonly string[] BuyLimit;
    /// <summary>
    /// 初始给几个抽奖券道具
    /// </summary>
    public readonly int DefaultLottery;
    /// <summary>
    /// 奖励池循环：奖励池1id，奖励池2id，…
    /// </summary>
    public readonly int[] LoopBox;
    /// <summary>
    /// 奖励池持续时间（s)|奖励池保护时间（s）
    /// </summary>
    public readonly int[] LoopBoxTime;
    /// <summary>
    /// 每次扭蛋获得幸运值
    /// </summary>
    public readonly int SpinLuckPoints;
    /// <summary>
    /// 每次赠送获得幸运值
    /// </summary>
    public readonly int GiftLuckPoints;
    /// <summary>
    /// 幸运值上限
    /// </summary>
    public readonly int LuckPointsLimit;
    /// <summary>
    /// 每次消耗幸运值抽取消耗幸运值
    /// </summary>
    public readonly int LuckPointsConsume;
    /// <summary>
    /// 道具ID，道具数量，权重|
    /// </summary>
    public readonly string[] GiftReward;
    /// <summary>
    /// 每日赠送上限|每日收取上限
    /// </summary>
    public readonly int[] DailyLimit;
    /// <summary>
    /// 累计进度奖励：<br/>累计进度数量，奖励表ID|
    /// </summary>
    public readonly string[] BigReward;
    /// <summary>
    /// 活动结束时，以下这些道具兑换为金币<br/>道具ID，金币数量|
    /// </summary>
    public readonly string[] MailItems;
    /// <summary>
    /// 邮件ID<br/>测试服,正式服一致
    /// </summary>
    public readonly string MailId;


    public const int __ID__ = 851569920;
    public override int GetTypeId() => __ID__;

    public  void ResolveRef(Tables tables)
    {
    }

    public override string ToString()
    {
        return "{ "
        + "ID:" + ID + ","
        + "ConnectActivityId:" + ConnectActivityId + ","
        + "LotteryItem:" + LotteryItem + ","
        + "BuyLimitNum:" + BuyLimitNum + ","
        + "PointItem:" + PointItem + ","
        + "PointItem1:" + PointItem1 + ","
        + "GiftItemId:" + GiftItemId + ","
        + "LotteryPrice:" + LotteryPrice + ","
        + "BuyLimit:" + Luban.StringUtil.CollectionToString(BuyLimit) + ","
        + "DefaultLottery:" + DefaultLottery + ","
        + "LoopBox:" + Luban.StringUtil.CollectionToString(LoopBox) + ","
        + "LoopBoxTime:" + Luban.StringUtil.CollectionToString(LoopBoxTime) + ","
        + "SpinLuckPoints:" + SpinLuckPoints + ","
        + "GiftLuckPoints:" + GiftLuckPoints + ","
        + "LuckPointsLimit:" + LuckPointsLimit + ","
        + "LuckPointsConsume:" + LuckPointsConsume + ","
        + "GiftReward:" + Luban.StringUtil.CollectionToString(GiftReward) + ","
        + "DailyLimit:" + Luban.StringUtil.CollectionToString(DailyLimit) + ","
        + "BigReward:" + Luban.StringUtil.CollectionToString(BigReward) + ","
        + "MailItems:" + Luban.StringUtil.CollectionToString(MailItems) + ","
        + "MailId:" + MailId + ","
        + "}";
    }
}
}

