
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using Luban;


namespace HotFix.Cfg
{
public sealed partial class IAP_Purchase : Luban.BeanBase
{
    public IAP_Purchase(ByteBuf _buf) 
    {
        id = _buf.ReadInt();
        notes = _buf.ReadString();
        titleID = _buf.ReadString();
        nameID = _buf.ReadString();
        descID = _buf.ReadString();
        iconAtlasID = _buf.ReadInt();
        iconName = _buf.ReadString();
        productType = _buf.ReadInt();
        source = _buf.ReadInt();
        viewType = _buf.ReadInt();
        TokenPrice = _buf.ReadInt();
        platformID = _buf.ReadInt();
        price1 = _buf.ReadFloat();
        originPrice1 = _buf.ReadFloat();
        CNprice = _buf.ReadFloat();
        CNoriginPrice = _buf.ReadFloat();
        limitCount = _buf.ReadInt();
        priority = _buf.ReadInt();
        {int __n0 = System.Math.Min(_buf.ReadSize(), _buf.Size);showProducts = new string[__n0];for(var __index0 = 0 ; __index0 < __n0 ; __index0++) { string __e0;__e0 = _buf.ReadString(); showProducts[__index0] = __e0;}}
        valueBet = _buf.ReadInt();
    }

    public static IAP_Purchase DeserializeIAP_Purchase(ByteBuf _buf)
    {
        return new IAP_Purchase(_buf);
    }

    /// <summary>
    /// id
    /// </summary>
    public readonly int id;
    /// <summary>
    /// 阐述
    /// </summary>
    public readonly string notes;
    /// <summary>
    /// 标题ID
    /// </summary>
    public readonly string titleID;
    /// <summary>
    /// 名称
    /// </summary>
    public readonly string nameID;
    /// <summary>
    /// 描述
    /// </summary>
    public readonly string descID;
    /// <summary>
    /// icon图集
    /// </summary>
    public readonly int iconAtlasID;
    /// <summary>
    /// icon名称
    /// </summary>
    public readonly string iconName;
    /// <summary>
    /// 礼包类型
    /// </summary>
    public readonly int productType;
    /// <summary>
    /// 1 宝石直充<br/>2 常驻一次性礼包<br/>3 常驻周期礼包<br/>4 章节礼包<br/>5 免广告卡<br/>6 月卡<br/>7 永久卡<br/>8 挖矿卡<br/>9 通行证<br/>10 天赋基金<br/>11 挑战之塔基金<br/>12 补足礼包<br/>13 推送礼包<br/>14 周活动礼包<br/>15 七日活动礼包<br/>16 转盘银币礼包<br/>17首充<br/>18连锁礼包<br/>19节日皮肤<br/>20大富翁骰子<br/>21通用活动通行证<br/>23寻宝特工队
    /// </summary>
    public readonly int source;
    /// <summary>
    /// 显示分类类型,<br/>客户端专用<br/>101、超值礼包
    /// </summary>
    public readonly int viewType;
    /// <summary>
    /// 代币消耗
    /// </summary>
    public readonly int TokenPrice;
    /// <summary>
    /// 支付ID
    /// </summary>
    public readonly int platformID;
    /// <summary>
    /// 价格<br/>真实货币单位为美元
    /// </summary>
    public readonly float price1;
    /// <summary>
    /// 原价
    /// </summary>
    public readonly float originPrice1;
    /// <summary>
    /// 价格<br/>真实货币单位为人民币
    /// </summary>
    public readonly float CNprice;
    /// <summary>
    /// 原价<br/>显示用
    /// </summary>
    public readonly float CNoriginPrice;
    /// <summary>
    /// 最大购买次数<br/>0:无条件<br/>&gt;0:最大次数
    /// </summary>
    public readonly int limitCount;
    /// <summary>
    /// 品类相同的显示优先级
    /// </summary>
    public readonly int priority;
    /// <summary>
    /// 展示奖励<br/>itemid,count|itemid,count
    /// </summary>
    public readonly string[] showProducts;
    /// <summary>
    /// 礼包价值倍率
    /// </summary>
    public readonly int valueBet;
   
    public const int __ID__ = -942309560;
    public override int GetTypeId() => __ID__;

    public  void ResolveRef(Tables tables)
    {
    }

    public override string ToString()
    {
        return "{ "
        + "id:" + id + ","
        + "notes:" + notes + ","
        + "titleID:" + titleID + ","
        + "nameID:" + nameID + ","
        + "descID:" + descID + ","
        + "iconAtlasID:" + iconAtlasID + ","
        + "iconName:" + iconName + ","
        + "productType:" + productType + ","
        + "source:" + source + ","
        + "viewType:" + viewType + ","
        + "TokenPrice:" + TokenPrice + ","
        + "platformID:" + platformID + ","
        + "price1:" + price1 + ","
        + "originPrice1:" + originPrice1 + ","
        + "CNprice:" + CNprice + ","
        + "CNoriginPrice:" + CNoriginPrice + ","
        + "limitCount:" + limitCount + ","
        + "priority:" + priority + ","
        + "showProducts:" + Luban.StringUtil.CollectionToString(showProducts) + ","
        + "valueBet:" + valueBet + ","
        + "}";
    }
}

}

