
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using Luban;
using Newtonsoft.Json.Linq;



namespace HotFix.Cfg
{

public sealed partial class CommonActivity_CommonActivity : Luban.BeanBase
{
    public CommonActivity_CommonActivity(JToken _buf) 
    {
        JObject _obj = _buf as JObject;
        Id = (int)_obj.GetValue("Id");
        SortID = (int)_obj.GetValue("SortID");
        Type = (int)_obj.GetValue("Type");
        dateTimeLimit = (int)_obj.GetValue("dateTimeLimit");
        OpenTime = (int)_obj.GetValue("OpenTime");
        EndTime = (int)_obj.GetValue("EndTime");
        DontOpen = (int)_obj.GetValue("DontOpen");
        Round = (int)_obj.GetValue("Round");
        RankID = (int)_obj.GetValue("RankID");
        QuestID = (int)_obj.GetValue("QuestID");
        PayID = (int)_obj.GetValue("PayID");
        ShopID = (int)_obj.GetValue("ShopID");
        { var __json0 = _obj.GetValue("FinalReward"); int _n0 = (__json0 as JArray).Count; FinalReward = new string[_n0]; int __index0=0; foreach(JToken __e0 in __json0) { string __v0;  __v0 = (string)__e0;  FinalReward[__index0++] = __v0; }   }
        { var __json0 = _obj.GetValue("packageDrop"); int _n0 = (__json0 as JArray).Count; packageDrop = new string[_n0]; int __index0=0; foreach(JToken __e0 in __json0) { string __v0;  __v0 = (string)__e0;  packageDrop[__index0++] = __v0; }   }
        { var __json0 = _obj.GetValue("removeItem"); int _n0 = (__json0 as JArray).Count; removeItem = new string[_n0]; int __index0=0; foreach(JToken __e0 in __json0) { string __v0;  __v0 = (string)__e0;  removeItem[__index0++] = __v0; }   }
        { var __json0 = _obj.GetValue("reparation"); int _n0 = (__json0 as JArray).Count; reparation = new string[_n0]; int __index0=0; foreach(JToken __e0 in __json0) { string __v0;  __v0 = (string)__e0;  reparation[__index0++] = __v0; }   }
        prodMailReparation = (string)_obj.GetValue("prodMailReparation");
        testMailReparation = (string)_obj.GetValue("testMailReparation");
        prodMailReparationCN = (string)_obj.GetValue("prodMailReparationCN");
        testMailReparationCN = (string)_obj.GetValue("testMailReparationCN");
        JumpInterface = (int)_obj.GetValue("JumpInterface");
        JumpInterfaceName = (string)_obj.GetValue("JumpInterfaceName");
        ActvDes = (string)_obj.GetValue("ActvDes");
        { var __json0 = _obj.GetValue("Currency"); int _n0 = (__json0 as JArray).Count; Currency = new int[_n0]; int __index0=0; foreach(JToken __e0 in __json0) { int __v0;  __v0 = (int)__e0;  Currency[__index0++] = __v0; }   }
        Prod_MailTempId = (string)_obj.GetValue("Prod_MailTempId");
        Test_MailTempId = (string)_obj.GetValue("Test_MailTempId");
        Prod_MailTempIdCN = (string)_obj.GetValue("Prod_MailTempIdCN");
        Test_MailTempIdCN = (string)_obj.GetValue("Test_MailTempIdCN");
        { var __json0 = _obj.GetValue("Param"); int _n0 = (__json0 as JArray).Count; Param = new string[_n0]; int __index0=0; foreach(JToken __e0 in __json0) { string __v0;  __v0 = (string)__e0;  Param[__index0++] = __v0; }   }
        OutputItem = (int)_obj.GetValue("OutputItem");
        Name = (string)_obj.GetValue("Name");
        banner = (string)_obj.GetValue("banner");
        banner2 = (string)_obj.GetValue("banner2");
    }

    public static CommonActivity_CommonActivity DeserializeCommonActivity_CommonActivity(JToken _buf)
    {
        return new CommonActivity_CommonActivity(_buf);
    }

    /// <summary>
    /// 编号
    /// </summary>
    public readonly int Id;
    /// <summary>
    /// 列表显示从小到大
    /// </summary>
    public readonly int SortID;
    /// <summary>
    /// 活动类型
    /// </summary>
    public readonly int Type;
    /// <summary>
    /// 绝对时间活动<br/>开服+X天后有效
    /// </summary>
    public readonly int dateTimeLimit;
    /// <summary>
    /// <br/>开启时间<br/>开服时间+X
    /// </summary>
    public readonly int OpenTime;
    /// <summary>
    /// 结束时间<br/>开服时间+X
    /// </summary>
    public readonly int EndTime;
    /// <summary>
    /// 1不可开启
    /// </summary>
    public readonly int DontOpen;
    /// <summary>
    /// 轮次
    /// </summary>
    public readonly int Round;
    /// <summary>
    /// 排行榜ID<br/>不配则无排行榜
    /// </summary>
    public readonly int RankID;
    /// <summary>
    /// 任务ID<br/>不配则无任务
    /// </summary>
    public readonly int QuestID;
    /// <summary>
    /// 支付商城ID<br/>不配则无支付
    /// </summary>
    public readonly int PayID;
    /// <summary>
    /// 商店ID<br/>不配则无兑换
    /// </summary>
    public readonly int ShopID;
    /// <summary>
    /// 轮次奖励
    /// </summary>
    public readonly string[] FinalReward;
    /// <summary>
    /// 挂机奖励(dropID,分钟)
    /// </summary>
    public readonly string[] packageDrop;
    /// <summary>
    /// 活动结束后清除道具
    /// </summary>
    public readonly string[] removeItem;
    /// <summary>
    /// 补偿道具
    /// </summary>
    public readonly string[] reparation;
    /// <summary>
    /// 正式服补偿邮件
    /// </summary>
    public readonly string prodMailReparation;
    /// <summary>
    /// 测试服补偿邮件
    /// </summary>
    public readonly string testMailReparation;
    /// <summary>
    /// 正式服补偿邮件
    /// </summary>
    public readonly string prodMailReparationCN;
    /// <summary>
    /// 测试服补偿邮件
    /// </summary>
    public readonly string testMailReparationCN;
    /// <summary>
    /// 1,主页<br/>2，装备页<br/>3,商店页<br/>4,活动页<br/>5.爬塔<br/>6.竞技场<br/>7，升级页<br/>
    /// </summary>
    public readonly int JumpInterface;
    /// <summary>
    /// 跳转页面多语言
    /// </summary>
    public readonly string JumpInterfaceName;
    /// <summary>
    /// 功能描述
    /// </summary>
    public readonly string ActvDes;
    /// <summary>
    /// 货币栏道具（额外道具）
    /// </summary>
    public readonly int[] Currency;
    /// <summary>
    /// 正式服奖励邮件
    /// </summary>
    public readonly string Prod_MailTempId;
    /// <summary>
    /// 测试服奖励邮件
    /// </summary>
    public readonly string Test_MailTempId;
    /// <summary>
    /// 正式服奖励邮件国内
    /// </summary>
    public readonly string Prod_MailTempIdCN;
    /// <summary>
    /// 测试服奖励邮件国内
    /// </summary>
    public readonly string Test_MailTempIdCN;
    /// <summary>
    /// 特殊字段
    /// </summary>
    public readonly string[] Param;
    /// <summary>
    /// 产出道具
    /// </summary>
    public readonly int OutputItem;
    /// <summary>
    /// 活动名称多语言
    /// </summary>
    public readonly string Name;
    /// <summary>
    /// 外面活动banner图
    /// </summary>
    public readonly string banner;
    /// <summary>
    /// 里面活动banner图
    /// </summary>
    public readonly string banner2;


    public const int __ID__ = -30510369;
    public override int GetTypeId() => __ID__;

    public  void ResolveRef(Tables tables)
    {
    }

    public override string ToString()
    {
        return "{ "
        + "Id:" + Id + ","
        + "SortID:" + SortID + ","
        + "Type:" + Type + ","
        + "dateTimeLimit:" + dateTimeLimit + ","
        + "OpenTime:" + OpenTime + ","
        + "EndTime:" + EndTime + ","
        + "DontOpen:" + DontOpen + ","
        + "Round:" + Round + ","
        + "RankID:" + RankID + ","
        + "QuestID:" + QuestID + ","
        + "PayID:" + PayID + ","
        + "ShopID:" + ShopID + ","
        + "FinalReward:" + Luban.StringUtil.CollectionToString(FinalReward) + ","
        + "packageDrop:" + Luban.StringUtil.CollectionToString(packageDrop) + ","
        + "removeItem:" + Luban.StringUtil.CollectionToString(removeItem) + ","
        + "reparation:" + Luban.StringUtil.CollectionToString(reparation) + ","
        + "prodMailReparation:" + prodMailReparation + ","
        + "testMailReparation:" + testMailReparation + ","
        + "prodMailReparationCN:" + prodMailReparationCN + ","
        + "testMailReparationCN:" + testMailReparationCN + ","
        + "JumpInterface:" + JumpInterface + ","
        + "JumpInterfaceName:" + JumpInterfaceName + ","
        + "ActvDes:" + ActvDes + ","
        + "Currency:" + Luban.StringUtil.CollectionToString(Currency) + ","
        + "Prod_MailTempId:" + Prod_MailTempId + ","
        + "Test_MailTempId:" + Test_MailTempId + ","
        + "Prod_MailTempIdCN:" + Prod_MailTempIdCN + ","
        + "Test_MailTempIdCN:" + Test_MailTempIdCN + ","
        + "Param:" + Luban.StringUtil.CollectionToString(Param) + ","
        + "OutputItem:" + OutputItem + ","
        + "Name:" + Name + ","
        + "banner:" + banner + ","
        + "banner2:" + banner2 + ","
        + "}";
    }
}
}

