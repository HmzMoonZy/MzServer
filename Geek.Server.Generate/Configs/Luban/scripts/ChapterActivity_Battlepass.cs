
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using Luban;
using Newtonsoft.Json.Linq;



namespace HotFix.Cfg
{

public sealed partial class ChapterActivity_Battlepass : Luban.BeanBase
{
    public ChapterActivity_Battlepass(JToken _buf) 
    {
        JObject _obj = _buf as JObject;
        id = (int)_obj.GetValue("id");
        name = (string)_obj.GetValue("name");
        type = (int)_obj.GetValue("type");
        { var __json0 = _obj.GetValue("parameter"); int _n0 = (__json0 as JArray).Count; parameter = new string[_n0]; int __index0=0; foreach(JToken __e0 in __json0) { string __v0;  __v0 = (string)__e0;  parameter[__index0++] = __v0; }   }
        atlasID = (int)_obj.GetValue("atlasID");
        itemIcon = (string)_obj.GetValue("itemIcon");
        itemNameId = (string)_obj.GetValue("itemNameId");
        banner = (string)_obj.GetValue("banner");
        openTime = (string)_obj.GetValue("openTime");
        endTime = (string)_obj.GetValue("endTime");
        group = (int)_obj.GetValue("group");
        purchaseId = (int)_obj.GetValue("purchaseId");
        finalRewardLimit = (int)_obj.GetValue("finalRewardLimit");
        { var __json0 = _obj.GetValue("finalQualityRandom"); int _n0 = (__json0 as JArray).Count; finalQualityRandom = new string[_n0]; int __index0=0; foreach(JToken __e0 in __json0) { string __v0;  __v0 = (string)__e0;  finalQualityRandom[__index0++] = __v0; }   }
        { var __json0 = _obj.GetValue("finalDrop"); int _n0 = (__json0 as JArray).Count; finalDrop = new int[_n0]; int __index0=0; foreach(JToken __e0 in __json0) { int __v0;  __v0 = (int)__e0;  finalDrop[__index0++] = __v0; }   }
    }

    public static ChapterActivity_Battlepass DeserializeChapterActivity_Battlepass(JToken _buf)
    {
        return new ChapterActivity_Battlepass(_buf);
    }

    /// <summary>
    /// 编号
    /// </summary>
    public readonly int id;
    /// <summary>
    /// 活动名称多语言
    /// </summary>
    public readonly string name;
    /// <summary>
    /// 活动类型<br/>1-新增事件<br/>2-现有事件<br/>3-指定事件对应结果
    /// </summary>
    public readonly int type;
    /// <summary>
    /// 活动事件参数
    /// </summary>
    public readonly string[] parameter;
    /// <summary>
    /// 图集名称
    /// </summary>
    public readonly int atlasID;
    /// <summary>
    /// 活动道具图标
    /// </summary>
    public readonly string itemIcon;
    /// <summary>
    /// 活动道具多语言ID
    /// </summary>
    public readonly string itemNameId;
    /// <summary>
    /// 活动banner图
    /// </summary>
    public readonly string banner;
    /// <summary>
    /// 开始时间<br/>开服时间+X
    /// </summary>
    public readonly string openTime;
    /// <summary>
    /// 结束时间<br/>开服时间+X
    /// </summary>
    public readonly string endTime;
    /// <summary>
    /// 对应条目组
    /// </summary>
    public readonly int group;
    /// <summary>
    /// 充值id
    /// </summary>
    public readonly int purchaseId;
    /// <summary>
    /// 最终循环奖励次数
    /// </summary>
    public readonly int finalRewardLimit;
    /// <summary>
    /// 循环奖励初始品质随机<br/>（品质1,权重|...)
    /// </summary>
    public readonly string[] finalQualityRandom;
    /// <summary>
    /// 循环奖励品质掉落，掉落表id<br/>[白|绿|蓝|紫|橙|红]
    /// </summary>
    public readonly int[] finalDrop;


    public const int __ID__ = 2061339308;
    public override int GetTypeId() => __ID__;

    public  void ResolveRef(Tables tables)
    {
    }

    public override string ToString()
    {
        return "{ "
        + "id:" + id + ","
        + "name:" + name + ","
        + "type:" + type + ","
        + "parameter:" + Luban.StringUtil.CollectionToString(parameter) + ","
        + "atlasID:" + atlasID + ","
        + "itemIcon:" + itemIcon + ","
        + "itemNameId:" + itemNameId + ","
        + "banner:" + banner + ","
        + "openTime:" + openTime + ","
        + "endTime:" + endTime + ","
        + "group:" + group + ","
        + "purchaseId:" + purchaseId + ","
        + "finalRewardLimit:" + finalRewardLimit + ","
        + "finalQualityRandom:" + Luban.StringUtil.CollectionToString(finalQualityRandom) + ","
        + "finalDrop:" + Luban.StringUtil.CollectionToString(finalDrop) + ","
        + "}";
    }
}
}

