
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using Luban;
using Newtonsoft.Json.Linq;



namespace HotFix.Cfg
{

public sealed partial class GameMember_npcFunction : Luban.BeanBase
{
    public GameMember_npcFunction(JToken _buf) 
    {
        JObject _obj = _buf as JObject;
        id = (int)_obj.GetValue("id");
        { var __json0 = _obj.GetValue("npcOffset"); int _n0 = (__json0 as JArray).Count; npcOffset = new float[_n0]; int __index0=0; foreach(JToken __e0 in __json0) { float __v0;  __v0 = (float)__e0;  npcOffset[__index0++] = __v0; }   }
        { var __json0 = _obj.GetValue("followOffset"); int _n0 = (__json0 as JArray).Count; followOffset = new float[_n0]; int __index0=0; foreach(JToken __e0 in __json0) { float __v0;  __v0 = (float)__e0;  followOffset[__index0++] = __v0; }   }
        { var __json0 = _obj.GetValue("fishingStartPos"); int _n0 = (__json0 as JArray).Count; fishingStartPos = new float[_n0]; int __index0=0; foreach(JToken __e0 in __json0) { float __v0;  __v0 = (float)__e0;  fishingStartPos[__index0++] = __v0; }   }
        { var __json0 = _obj.GetValue("fishingEndPos"); int _n0 = (__json0 as JArray).Count; fishingEndPos = new float[_n0]; int __index0=0; foreach(JToken __e0 in __json0) { float __v0;  __v0 = (float)__e0;  fishingEndPos[__index0++] = __v0; }   }
        { var __json0 = _obj.GetValue("boxPos"); int _n0 = (__json0 as JArray).Count; boxPos = new float[_n0]; int __index0=0; foreach(JToken __e0 in __json0) { float __v0;  __v0 = (float)__e0;  boxPos[__index0++] = __v0; }   }
        ride = (int)_obj.GetValue("ride");
        rideScale = (float)_obj.GetValue("rideScale");
    }

    public static GameMember_npcFunction DeserializeGameMember_npcFunction(JToken _buf)
    {
        return new GameMember_npcFunction(_buf);
    }

    /// <summary>
    /// 内容ID
    /// </summary>
    public readonly int id;
    /// <summary>
    /// npc出现的位置偏移
    /// </summary>
    public readonly float[] npcOffset;
    /// <summary>
    /// 跟随主角时的偏移
    /// </summary>
    public readonly float[] followOffset;
    /// <summary>
    /// 钓鱼出现位置
    /// </summary>
    public readonly float[] fishingStartPos;
    /// <summary>
    /// 钓鱼结束位置
    /// </summary>
    public readonly float[] fishingEndPos;
    /// <summary>
    /// 宝箱位置
    /// </summary>
    public readonly float[] boxPos;
    /// <summary>
    /// 载具id
    /// </summary>
    public readonly int ride;
    /// <summary>
    /// 载具缩放
    /// </summary>
    public readonly float rideScale;


    public const int __ID__ = -235323546;
    public override int GetTypeId() => __ID__;

    public  void ResolveRef(Tables tables)
    {
    }

    public override string ToString()
    {
        return "{ "
        + "id:" + id + ","
        + "npcOffset:" + Luban.StringUtil.CollectionToString(npcOffset) + ","
        + "followOffset:" + Luban.StringUtil.CollectionToString(followOffset) + ","
        + "fishingStartPos:" + Luban.StringUtil.CollectionToString(fishingStartPos) + ","
        + "fishingEndPos:" + Luban.StringUtil.CollectionToString(fishingEndPos) + ","
        + "boxPos:" + Luban.StringUtil.CollectionToString(boxPos) + ","
        + "ride:" + ride + ","
        + "rideScale:" + rideScale + ","
        + "}";
    }
}
}

