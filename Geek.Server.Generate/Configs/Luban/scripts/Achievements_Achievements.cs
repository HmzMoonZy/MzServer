
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using Luban;


namespace HotFix.Cfg
{
public sealed partial class Achievements_Achievements : Luban.BeanBase
{
    public Achievements_Achievements(ByteBuf _buf) 
    {
        ID = _buf.ReadInt();
        AchievementsType = _buf.ReadInt();
        AchievementsLevel = _buf.ReadInt();
        AccumulationType = _buf.ReadInt();
        ProgressType = _buf.ReadInt();
        AchievementsNeed = _buf.ReadInt();
        AchievementsDescribe = _buf.ReadString();
        {int __n0 = System.Math.Min(_buf.ReadSize(), _buf.Size);Reward = new string[__n0];for(var __index0 = 0 ; __index0 < __n0 ; __index0++) { string __e0;__e0 = _buf.ReadString(); Reward[__index0] = __e0;}}
        UnlockNeed = _buf.ReadInt();
    }

    public static Achievements_Achievements DeserializeAchievements_Achievements(ByteBuf _buf)
    {
        return new Achievements_Achievements(_buf);
    }

    /// <summary>
    /// ID<br/>新加后续成就不要打乱id,在后面成组添加即可
    /// </summary>
    public readonly int ID;
    /// <summary>
    /// 成就类型<br/>1,关卡进度<br/>2,章节进度<br/>3,英雄等级<br/>6,挂机累积金币<br/>8,通关某个塔（参数来自Tower）<br/>9.竞技场到达某个场（参数来自crossArena）<br/>10.黑市购买一定次数
    /// </summary>
    public readonly int AchievementsType;
    /// <summary>
    /// 成就等级<br/>(同类型成就,先完成上一级成就才显示出下一级成绩.成就进度会记录到下一级.)
    /// </summary>
    public readonly int AchievementsLevel;
    /// <summary>
    /// 是否为累加条件<br/>0,非累加<br/>1,累加
    /// </summary>
    public readonly int AccumulationType;
    /// <summary>
    /// 0:显示0/1<br/>1:直接显示配置数
    /// </summary>
    public readonly int ProgressType;
    /// <summary>
    /// 成就要求
    /// </summary>
    public readonly int AchievementsNeed;
    /// <summary>
    /// 成就描述
    /// </summary>
    public readonly string AchievementsDescribe;
    /// <summary>
    /// 成就奖励<br/>道具类型,道具id,道具数量|…
    /// </summary>
    public readonly string[] Reward;
    /// <summary>
    /// gameconfig中关卡对应条件id<br/>0为默认解锁
    /// </summary>
    public readonly int UnlockNeed;
   
    public const int __ID__ = 7788639;
    public override int GetTypeId() => __ID__;

    public  void ResolveRef(Tables tables)
    {
    }

    public override string ToString()
    {
        return "{ "
        + "ID:" + ID + ","
        + "AchievementsType:" + AchievementsType + ","
        + "AchievementsLevel:" + AchievementsLevel + ","
        + "AccumulationType:" + AccumulationType + ","
        + "ProgressType:" + ProgressType + ","
        + "AchievementsNeed:" + AchievementsNeed + ","
        + "AchievementsDescribe:" + AchievementsDescribe + ","
        + "Reward:" + Luban.StringUtil.CollectionToString(Reward) + ","
        + "UnlockNeed:" + UnlockNeed + ","
        + "}";
    }
}

}

