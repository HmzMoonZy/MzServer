
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using Luban;
using Newtonsoft.Json.Linq;



namespace HotFix.Cfg
{

public sealed partial class Hero_heroStar : Luban.BeanBase
{
    public Hero_heroStar(JToken _buf) 
    {
        JObject _obj = _buf as JObject;
        id = (int)_obj.GetValue("id");
        groupID = (int)_obj.GetValue("groupID");
        star = (int)_obj.GetValue("star");
        { var __json0 = _obj.GetValue("starUpCost"); int _n0 = (__json0 as JArray).Count; starUpCost = new string[_n0]; int __index0=0; foreach(JToken __e0 in __json0) { string __v0;  __v0 = (string)__e0;  starUpCost[__index0++] = __v0; }   }
        { var __json0 = _obj.GetValue("heroAttr"); int _n0 = (__json0 as JArray).Count; heroAttr = new string[_n0]; int __index0=0; foreach(JToken __e0 in __json0) { string __v0;  __v0 = (string)__e0;  heroAttr[__index0++] = __v0; }   }
        starupDesc = (string)_obj.GetValue("starupDesc");
        skillType = (int)_obj.GetValue("skillType");
        { var __json0 = _obj.GetValue("skills"); int _n0 = (__json0 as JArray).Count; skills = new int[_n0]; int __index0=0; foreach(JToken __e0 in __json0) { int __v0;  __v0 = (int)__e0;  skills[__index0++] = __v0; }   }
        skillsGroup = (int)_obj.GetValue("skillsGroup");
        { var __json0 = _obj.GetValue("skillsLv"); int _n0 = (__json0 as JArray).Count; skillsLv = new int[_n0]; int __index0=0; foreach(JToken __e0 in __json0) { int __v0;  __v0 = (int)__e0;  skillsLv[__index0++] = __v0; }   }
        { var __json0 = _obj.GetValue("skillQuality"); int _n0 = (__json0 as JArray).Count; skillQuality = new int[_n0]; int __index0=0; foreach(JToken __e0 in __json0) { int __v0;  __v0 = (int)__e0;  skillQuality[__index0++] = __v0; }   }
        { var __json0 = _obj.GetValue("starEffect"); int _n0 = (__json0 as JArray).Count; starEffect = new string[_n0]; int __index0=0; foreach(JToken __e0 in __json0) { string __v0;  __v0 = (string)__e0;  starEffect[__index0++] = __v0; }   }
        { var __json0 = _obj.GetValue("activePower"); int _n0 = (__json0 as JArray).Count; activePower = new int[_n0]; int __index0=0; foreach(JToken __e0 in __json0) { int __v0;  __v0 = (int)__e0;  activePower[__index0++] = __v0; }   }
    }

    public static Hero_heroStar DeserializeHero_heroStar(JToken _buf)
    {
        return new Hero_heroStar(_buf);
    }

    /// <summary>
    /// 英雄ID*100+星级
    /// </summary>
    public readonly int id;
    /// <summary>
    /// 英雄组
    /// </summary>
    public readonly int groupID;
    /// <summary>
    /// 星级
    /// </summary>
    public readonly int star;
    /// <summary>
    /// 升星消耗
    /// </summary>
    public readonly string[] starUpCost;
    /// <summary>
    /// 主角属性增加（最终值）
    /// </summary>
    public readonly string[] heroAttr;
    /// <summary>
    /// 升星效果描述
    /// </summary>
    public readonly string starupDesc;
    /// <summary>
    /// 词条类型<br/>1【全局】获得后永久生效，无需上阵<br/>2.【本体】上阵时生效<br/>3.【英雄全局】获得后永久生效，无需上阵<br/>4.【英雄本体】上阵时生效
    /// </summary>
    public readonly int skillType;
    /// <summary>
    /// 解锁英雄特性技能<br/>累计(只会投放技能）
    /// </summary>
    public readonly int[] skills;
    /// <summary>
    /// 技能分组
    /// </summary>
    public readonly int skillsGroup;
    /// <summary>
    /// 技能等级
    /// </summary>
    public readonly int[] skillsLv;
    /// <summary>
    /// 技能对应的品质
    /// </summary>
    public readonly int[] skillQuality;
    /// <summary>
    /// 星级效果(只会投放属性)
    /// </summary>
    public readonly string[] starEffect;
    /// <summary>
    /// 层数2万分比战力<br/>层数3万分比战力<br/>（上阵增加战力）
    /// </summary>
    public readonly int[] activePower;


    public const int __ID__ = 941664241;
    public override int GetTypeId() => __ID__;

    public  void ResolveRef(Tables tables)
    {
    }

    public override string ToString()
    {
        return "{ "
        + "id:" + id + ","
        + "groupID:" + groupID + ","
        + "star:" + star + ","
        + "starUpCost:" + Luban.StringUtil.CollectionToString(starUpCost) + ","
        + "heroAttr:" + Luban.StringUtil.CollectionToString(heroAttr) + ","
        + "starupDesc:" + starupDesc + ","
        + "skillType:" + skillType + ","
        + "skills:" + Luban.StringUtil.CollectionToString(skills) + ","
        + "skillsGroup:" + skillsGroup + ","
        + "skillsLv:" + Luban.StringUtil.CollectionToString(skillsLv) + ","
        + "skillQuality:" + Luban.StringUtil.CollectionToString(skillQuality) + ","
        + "starEffect:" + Luban.StringUtil.CollectionToString(starEffect) + ","
        + "activePower:" + Luban.StringUtil.CollectionToString(activePower) + ","
        + "}";
    }
}
}

