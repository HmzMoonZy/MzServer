
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using Luban;


namespace HotFix.Cfg
{
public sealed partial class Gem_GemType : Luban.BeanBase
{
    public Gem_GemType(ByteBuf _buf) 
    {
        rank = _buf.ReadInt();
        isRest = _buf.ReadInt();
        {int __n0 = System.Math.Min(_buf.ReadSize(), _buf.Size);resetCost = new string[__n0];for(var __index0 = 0 ; __index0 < __n0 ; __index0++) { string __e0;__e0 = _buf.ReadString(); resetCost[__index0] = __e0;}}
        {int __n0 = System.Math.Min(_buf.ReadSize(), _buf.Size);resetPool = new int[__n0];for(var __index0 = 0 ; __index0 < __n0 ; __index0++) { int __e0;__e0 = _buf.ReadInt(); resetPool[__index0] = __e0;}}
        isComposite = _buf.ReadInt();
        compositeNum = _buf.ReadInt();
        {int __n0 = System.Math.Min(_buf.ReadSize(), _buf.Size);compositePool = new int[__n0];for(var __index0 = 0 ; __index0 < __n0 ; __index0++) { int __e0;__e0 = _buf.ReadInt(); compositePool[__index0] = __e0;}}
    }

    public static Gem_GemType DeserializeGem_GemType(ByteBuf _buf)
    {
        return new Gem_GemType(_buf);
    }

    /// <summary>
    /// 宝石类型ID
    /// </summary>
    public readonly int rank;
    /// <summary>
    /// 是否可洗炼<br/>0-无法洗炼<br/>1-可洗炼
    /// </summary>
    public readonly int isRest;
    /// <summary>
    /// 洗炼所需材料
    /// </summary>
    public readonly string[] resetCost;
    /// <summary>
    /// 洗练可转化的宝石池<br/>武器|衣服|戒指|饰品
    /// </summary>
    public readonly int[] resetPool;
    /// <summary>
    /// 是否可合成<br/>0-无法合成<br/>1-可合成
    /// </summary>
    public readonly int isComposite;
    /// <summary>
    /// 合成下一级所需同级、同部位宝石数量
    /// </summary>
    public readonly int compositeNum;
    /// <summary>
    /// 下一级宝石的合成池<br/>武器|衣服|戒指|饰品
    /// </summary>
    public readonly int[] compositePool;
   
    public const int __ID__ = -1200223751;
    public override int GetTypeId() => __ID__;

    public  void ResolveRef(Tables tables)
    {
    }

    public override string ToString()
    {
        return "{ "
        + "rank:" + rank + ","
        + "isRest:" + isRest + ","
        + "resetCost:" + Luban.StringUtil.CollectionToString(resetCost) + ","
        + "resetPool:" + Luban.StringUtil.CollectionToString(resetPool) + ","
        + "isComposite:" + isComposite + ","
        + "compositeNum:" + compositeNum + ","
        + "compositePool:" + Luban.StringUtil.CollectionToString(compositePool) + ","
        + "}";
    }
}

}

