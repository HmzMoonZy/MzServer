
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using Luban;
using Newtonsoft.Json.Linq;



namespace HotFix.Cfg
{

public sealed partial class Pet_petLevel : Luban.BeanBase
{
    public Pet_petLevel(JToken _buf) 
    {
        JObject _obj = _buf as JObject;
        id = (int)_obj.GetValue("id");
        type = (int)_obj.GetValue("type");
        level = (int)_obj.GetValue("level");
        unlockType = (int)_obj.GetValue("unlockType");
        { var __json0 = _obj.GetValue("talentNeed"); int _n0 = (__json0 as JArray).Count; talentNeed = new int[_n0]; int __index0=0; foreach(JToken __e0 in __json0) { int __v0;  __v0 = (int)__e0;  talentNeed[__index0++] = __v0; }   }
        unlockDesc = (string)_obj.GetValue("unlockDesc");
        { var __json0 = _obj.GetValue("upgradeAttributes"); int _n0 = (__json0 as JArray).Count; upgradeAttributes = new string[_n0]; int __index0=0; foreach(JToken __e0 in __json0) { string __v0;  __v0 = (string)__e0;  upgradeAttributes[__index0++] = __v0; }   }
        nextID = (int)_obj.GetValue("nextID");
        levelupFragment = (int)_obj.GetValue("levelupFragment");
        { var __json0 = _obj.GetValue("levelupCost"); int _n0 = (__json0 as JArray).Count; levelupCost = new string[_n0]; int __index0=0; foreach(JToken __e0 in __json0) { string __v0;  __v0 = (string)__e0;  levelupCost[__index0++] = __v0; }   }
    }

    public static Pet_petLevel DeserializePet_petLevel(JToken _buf)
    {
        return new Pet_petLevel(_buf);
    }

    /// <summary>
    /// 内容ID
    /// </summary>
    public readonly int id;
    /// <summary>
    /// 宠物品质<br/>获得ID时可以通过宠物品质*10000+等级
    /// </summary>
    public readonly int type;
    /// <summary>
    /// 等级
    /// </summary>
    public readonly int level;
    /// <summary>
    /// 1要求天赋<br/>2要求传承
    /// </summary>
    public readonly int unlockType;
    /// <summary>
    /// 升级要求天赋段位
    /// </summary>
    public readonly int[] talentNeed;
    /// <summary>
    /// 解锁多语言
    /// </summary>
    public readonly string unlockDesc;
    /// <summary>
    /// 宠物强化属性
    /// </summary>
    public readonly string[] upgradeAttributes;
    /// <summary>
    /// 下一等级ID 满级为0
    /// </summary>
    public readonly int nextID;
    /// <summary>
    /// 升至下一级的同名碎片消耗
    /// </summary>
    public readonly int levelupFragment;
    /// <summary>
    /// 升至下一级的消耗
    /// </summary>
    public readonly string[] levelupCost;


    public const int __ID__ = -132875035;
    public override int GetTypeId() => __ID__;

    public  void ResolveRef(Tables tables)
    {
    }

    public override string ToString()
    {
        return "{ "
        + "id:" + id + ","
        + "type:" + type + ","
        + "level:" + level + ","
        + "unlockType:" + unlockType + ","
        + "talentNeed:" + Luban.StringUtil.CollectionToString(talentNeed) + ","
        + "unlockDesc:" + unlockDesc + ","
        + "upgradeAttributes:" + Luban.StringUtil.CollectionToString(upgradeAttributes) + ","
        + "nextID:" + nextID + ","
        + "levelupFragment:" + levelupFragment + ","
        + "levelupCost:" + Luban.StringUtil.CollectionToString(levelupCost) + ","
        + "}";
    }
}
}

