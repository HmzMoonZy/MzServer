
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using Luban;
using Newtonsoft.Json.Linq;



namespace HotFix.Cfg
{

public sealed partial class Quality_petQuality : Luban.BeanBase
{
    public Quality_petQuality(JToken _buf) 
    {
        JObject _obj = _buf as JObject;
        id = (int)_obj.GetValue("id");
        nameID = (string)_obj.GetValue("nameID");
        collectionNameID = (string)_obj.GetValue("collectionNameID");
        atlasId = (int)_obj.GetValue("atlasId");
        bgSpriteName = (string)_obj.GetValue("bgSpriteName");
        bgSpriteNameStyle = (string)_obj.GetValue("bgSpriteNameStyle");
        typeBgSpriteName = (string)_obj.GetValue("typeBgSpriteName");
        typeTxtBg = (string)_obj.GetValue("typeTxtBg");
        typeTxtBgStyle = (string)_obj.GetValue("typeTxtBgStyle");
        imgBottomCircle = (string)_obj.GetValue("imgBottomCircle");
        imgFragment = (string)_obj.GetValue("imgFragment");
        { var __json0 = _obj.GetValue("passiveTextColor"); int _n0 = (__json0 as JArray).Count; passiveTextColor = new string[_n0]; int __index0=0; foreach(JToken __e0 in __json0) { string __v0;  __v0 = (string)__e0;  passiveTextColor[__index0++] = __v0; }   }
        { var __json0 = _obj.GetValue("passiveTextColor2"); int _n0 = (__json0 as JArray).Count; passiveTextColor2 = new string[_n0]; int __index0=0; foreach(JToken __e0 in __json0) { string __v0;  __v0 = (string)__e0;  passiveTextColor2[__index0++] = __v0; }   }
        colorNum = (string)_obj.GetValue("colorNum");
        colorNumDark = (string)_obj.GetValue("colorNumDark");
        drawCardBgEffect = (string)_obj.GetValue("drawCardBgEffect");
        drawCardFireEffect = (string)_obj.GetValue("drawCardFireEffect");
        drawCardFireEffect2 = (string)_obj.GetValue("drawCardFireEffect2");
        drawCardFireBurstEffect = (string)_obj.GetValue("drawCardFireBurstEffect");
        drawCardFireBurstEffect2 = (string)_obj.GetValue("drawCardFireBurstEffect2");
        drawCardBurstLightEffect = (string)_obj.GetValue("drawCardBurstLightEffect");
        passiveSweepEffect = (string)_obj.GetValue("passiveSweepEffect");
        passiveStreamerEffect = (string)_obj.GetValue("passiveStreamerEffect");
    }

    public static Quality_petQuality DeserializeQuality_petQuality(JToken _buf)
    {
        return new Quality_petQuality(_buf);
    }

    /// <summary>
    /// qualityId
    /// </summary>
    public readonly int id;
    /// <summary>
    /// 名称多语言<br/>（用于道具时）
    /// </summary>
    public readonly string nameID;
    /// <summary>
    /// 名称多语言(升级后)
    /// </summary>
    public readonly string collectionNameID;
    /// <summary>
    /// 背景图图集id
    /// </summary>
    public readonly int atlasId;
    /// <summary>
    /// 背景图切片名称
    /// </summary>
    public readonly string bgSpriteName;
    /// <summary>
    /// 背景图切片名称样式
    /// </summary>
    public readonly string bgSpriteNameStyle;
    /// <summary>
    /// 装备类型底框
    /// </summary>
    public readonly string typeBgSpriteName;
    /// <summary>
    /// 装备类型文字底框
    /// </summary>
    public readonly string typeTxtBg;
    /// <summary>
    /// 装备类型文字底框样式
    /// </summary>
    public readonly string typeTxtBgStyle;
    /// <summary>
    /// 宠物脚底光圈
    /// </summary>
    public readonly string imgBottomCircle;
    /// <summary>
    /// 碎片品质框
    /// </summary>
    public readonly string imgFragment;
    /// <summary>
    /// 培育文字颜色
    /// </summary>
    public readonly string[] passiveTextColor;
    /// <summary>
    /// 培育文字颜色
    /// </summary>
    public readonly string[] passiveTextColor2;
    /// <summary>
    /// 统一品质颜色
    /// </summary>
    public readonly string colorNum;
    /// <summary>
    /// 统一品质颜色
    /// </summary>
    public readonly string colorNumDark;
    /// <summary>
    /// 抽卡展示效果
    /// </summary>
    public readonly string drawCardBgEffect;
    /// <summary>
    /// 抽卡火苗效果
    /// </summary>
    public readonly string drawCardFireEffect;
    /// <summary>
    /// 抽卡火苗效果（单抽）
    /// </summary>
    public readonly string drawCardFireEffect2;
    /// <summary>
    /// 抽卡火爆发效果（单抽）
    /// </summary>
    public readonly string drawCardFireBurstEffect;
    /// <summary>
    /// 抽卡火爆炸效果（十抽，只有配了的会展示）
    /// </summary>
    public readonly string drawCardFireBurstEffect2;
    /// <summary>
    /// 抽卡光线爆发特效
    /// </summary>
    public readonly string drawCardBurstLightEffect;
    /// <summary>
    /// 被动词条扫光
    /// </summary>
    public readonly string passiveSweepEffect;
    /// <summary>
    /// 被动词条旋转光效
    /// </summary>
    public readonly string passiveStreamerEffect;


    public const int __ID__ = 117441088;
    public override int GetTypeId() => __ID__;

    public  void ResolveRef(Tables tables)
    {
    }

    public override string ToString()
    {
        return "{ "
        + "id:" + id + ","
        + "nameID:" + nameID + ","
        + "collectionNameID:" + collectionNameID + ","
        + "atlasId:" + atlasId + ","
        + "bgSpriteName:" + bgSpriteName + ","
        + "bgSpriteNameStyle:" + bgSpriteNameStyle + ","
        + "typeBgSpriteName:" + typeBgSpriteName + ","
        + "typeTxtBg:" + typeTxtBg + ","
        + "typeTxtBgStyle:" + typeTxtBgStyle + ","
        + "imgBottomCircle:" + imgBottomCircle + ","
        + "imgFragment:" + imgFragment + ","
        + "passiveTextColor:" + Luban.StringUtil.CollectionToString(passiveTextColor) + ","
        + "passiveTextColor2:" + Luban.StringUtil.CollectionToString(passiveTextColor2) + ","
        + "colorNum:" + colorNum + ","
        + "colorNumDark:" + colorNumDark + ","
        + "drawCardBgEffect:" + drawCardBgEffect + ","
        + "drawCardFireEffect:" + drawCardFireEffect + ","
        + "drawCardFireEffect2:" + drawCardFireEffect2 + ","
        + "drawCardFireBurstEffect:" + drawCardFireBurstEffect + ","
        + "drawCardFireBurstEffect2:" + drawCardFireBurstEffect2 + ","
        + "drawCardBurstLightEffect:" + drawCardBurstLightEffect + ","
        + "passiveSweepEffect:" + passiveSweepEffect + ","
        + "passiveStreamerEffect:" + passiveStreamerEffect + ","
        + "}";
    }
}
}

