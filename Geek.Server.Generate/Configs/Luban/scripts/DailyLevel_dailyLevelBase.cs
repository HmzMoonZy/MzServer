
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using Luban;
using Newtonsoft.Json.Linq;



namespace HotFix.Cfg
{

public sealed partial class DailyLevel_dailyLevelBase : Luban.BeanBase
{
    public DailyLevel_dailyLevelBase(JToken _buf) 
    {
        JObject _obj = _buf as JObject;
        id = (int)_obj.GetValue("id");
        StartTime = (string)_obj.GetValue("StartTime");
        EndTime = (string)_obj.GetValue("EndTime");
        resetTime = (int)_obj.GetValue("resetTime");
        { var __json0 = _obj.GetValue("entrys"); int _n0 = (__json0 as JArray).Count; entrys = new string[_n0]; int __index0=0; foreach(JToken __e0 in __json0) { string __v0;  __v0 = (string)__e0;  entrys[__index0++] = __v0; }   }
        { var __json0 = _obj.GetValue("chapterID"); int _n0 = (__json0 as JArray).Count; chapterID = new int[_n0]; int __index0=0; foreach(JToken __e0 in __json0) { int __v0;  __v0 = (int)__e0;  chapterID[__index0++] = __v0; }   }
        freeCnt = (int)_obj.GetValue("freeCnt");
        buyCnt = (int)_obj.GetValue("buyCnt");
        buyDiamonds = (int)_obj.GetValue("buyDiamonds");
        banner = (string)_obj.GetValue("banner");
        mailId = (string)_obj.GetValue("mailId");
        rankMailId = (string)_obj.GetValue("rankMailId");
    }

    public static DailyLevel_dailyLevelBase DeserializeDailyLevel_dailyLevelBase(JToken _buf)
    {
        return new DailyLevel_dailyLevelBase(_buf);
    }

    /// <summary>
    /// ID
    /// </summary>
    public readonly int id;
    /// <summary>
    /// 活动<br/>开启时间戳
    /// </summary>
    public readonly string StartTime;
    /// <summary>
    /// 结束时间戳
    /// </summary>
    public readonly string EndTime;
    /// <summary>
    /// 重置次数重置时间（秒）<br/>2天
    /// </summary>
    public readonly int resetTime;
    /// <summary>
    /// 词条|<br/>第一期|……
    /// </summary>
    public readonly string[] entrys;
    /// <summary>
    /// 引用主线ID<br/>从第1个循环<br/>主线相关的都读Chapter表
    /// </summary>
    public readonly int[] chapterID;
    /// <summary>
    /// 免费次数
    /// </summary>
    public readonly int freeCnt;
    /// <summary>
    /// 可购买次数(0不可购买)
    /// </summary>
    public readonly int buyCnt;
    /// <summary>
    /// 购买次数需要的宝石数量
    /// </summary>
    public readonly int buyDiamonds;
    /// <summary>
    /// banner
    /// </summary>
    public readonly string banner;
    /// <summary>
    /// 奖励补发邮件
    /// </summary>
    public readonly string mailId;
    /// <summary>
    /// 段位奖励邮件
    /// </summary>
    public readonly string rankMailId;


    public const int __ID__ = -1291843568;
    public override int GetTypeId() => __ID__;

    public  void ResolveRef(Tables tables)
    {
    }

    public override string ToString()
    {
        return "{ "
        + "id:" + id + ","
        + "StartTime:" + StartTime + ","
        + "EndTime:" + EndTime + ","
        + "resetTime:" + resetTime + ","
        + "entrys:" + Luban.StringUtil.CollectionToString(entrys) + ","
        + "chapterID:" + Luban.StringUtil.CollectionToString(chapterID) + ","
        + "freeCnt:" + freeCnt + ","
        + "buyCnt:" + buyCnt + ","
        + "buyDiamonds:" + buyDiamonds + ","
        + "banner:" + banner + ","
        + "mailId:" + mailId + ","
        + "rankMailId:" + rankMailId + ","
        + "}";
    }
}
}

