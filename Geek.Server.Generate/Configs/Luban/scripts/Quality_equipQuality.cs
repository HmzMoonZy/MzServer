
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using Luban;
using Newtonsoft.Json.Linq;



namespace HotFix.Cfg
{

public sealed partial class Quality_equipQuality : Luban.BeanBase
{
    public Quality_equipQuality(JToken _buf) 
    {
        JObject _obj = _buf as JObject;
        id = (int)_obj.GetValue("id");
        atlasId = (int)_obj.GetValue("atlasId");
        bgSpriteName = (string)_obj.GetValue("bgSpriteName");
        equipTypeBgSpriteName = (string)_obj.GetValue("equipTypeBgSpriteName");
        pointSpriteName = (string)_obj.GetValue("pointSpriteName");
        lockSpriteName = (string)_obj.GetValue("lockSpriteName");
        composePlusSpriteName = (string)_obj.GetValue("composePlusSpriteName");
        colorNumLight = (string)_obj.GetValue("colorNumLight");
        colorNumDark = (string)_obj.GetValue("colorNumDark");
        colorImgLightBlend = (string)_obj.GetValue("colorImgLightBlend");
        drawCardBgEffect = (string)_obj.GetValue("drawCardBgEffect");
        drawCardFireEffect = (string)_obj.GetValue("drawCardFireEffect");
        drawCardFireEffect2 = (string)_obj.GetValue("drawCardFireEffect2");
        drawCardFireBurstEffect = (string)_obj.GetValue("drawCardFireBurstEffect");
        drawCardFireBurstEffect2 = (string)_obj.GetValue("drawCardFireBurstEffect2");
        drawCardBurstLightEffect = (string)_obj.GetValue("drawCardBurstLightEffect");
        divineLimit = (int)_obj.GetValue("divineLimit");
    }

    public static Quality_equipQuality DeserializeQuality_equipQuality(JToken _buf)
    {
        return new Quality_equipQuality(_buf);
    }

    /// <summary>
    /// qualityId
    /// </summary>
    public readonly int id;
    /// <summary>
    /// 背景图图集id
    /// </summary>
    public readonly int atlasId;
    /// <summary>
    /// 背景图切片名称
    /// </summary>
    public readonly string bgSpriteName;
    /// <summary>
    /// 装备类型底框
    /// </summary>
    public readonly string equipTypeBgSpriteName;
    /// <summary>
    /// 圆点切片名称
    /// </summary>
    public readonly string pointSpriteName;
    /// <summary>
    /// 锁切片名称
    /// </summary>
    public readonly string lockSpriteName;
    /// <summary>
    /// 品阶+底框
    /// </summary>
    public readonly string composePlusSpriteName;
    /// <summary>
    /// 统一品质颜色
    /// </summary>
    public readonly string colorNumLight;
    /// <summary>
    /// 统一品质颜色
    /// </summary>
    public readonly string colorNumDark;
    /// <summary>
    /// 光圈叠加色
    /// </summary>
    public readonly string colorImgLightBlend;
    /// <summary>
    /// 抽卡展示效果
    /// </summary>
    public readonly string drawCardBgEffect;
    /// <summary>
    /// 抽卡火苗效果
    /// </summary>
    public readonly string drawCardFireEffect;
    /// <summary>
    /// 抽卡火苗效果（单抽）
    /// </summary>
    public readonly string drawCardFireEffect2;
    /// <summary>
    /// 抽卡火爆发效果（单抽）
    /// </summary>
    public readonly string drawCardFireBurstEffect;
    /// <summary>
    /// 抽卡火爆炸效果（十抽，只有配了的会展示）
    /// </summary>
    public readonly string drawCardFireBurstEffect2;
    /// <summary>
    /// 抽卡光线爆发特效
    /// </summary>
    public readonly string drawCardBurstLightEffect;
    /// <summary>
    /// 神铸等级上限
    /// </summary>
    public readonly int divineLimit;


    public const int __ID__ = -2131751409;
    public override int GetTypeId() => __ID__;

    public  void ResolveRef(Tables tables)
    {
    }

    public override string ToString()
    {
        return "{ "
        + "id:" + id + ","
        + "atlasId:" + atlasId + ","
        + "bgSpriteName:" + bgSpriteName + ","
        + "equipTypeBgSpriteName:" + equipTypeBgSpriteName + ","
        + "pointSpriteName:" + pointSpriteName + ","
        + "lockSpriteName:" + lockSpriteName + ","
        + "composePlusSpriteName:" + composePlusSpriteName + ","
        + "colorNumLight:" + colorNumLight + ","
        + "colorNumDark:" + colorNumDark + ","
        + "colorImgLightBlend:" + colorImgLightBlend + ","
        + "drawCardBgEffect:" + drawCardBgEffect + ","
        + "drawCardFireEffect:" + drawCardFireEffect + ","
        + "drawCardFireEffect2:" + drawCardFireEffect2 + ","
        + "drawCardFireBurstEffect:" + drawCardFireBurstEffect + ","
        + "drawCardFireBurstEffect2:" + drawCardFireBurstEffect2 + ","
        + "drawCardBurstLightEffect:" + drawCardBurstLightEffect + ","
        + "divineLimit:" + divineLimit + ","
        + "}";
    }
}
}

