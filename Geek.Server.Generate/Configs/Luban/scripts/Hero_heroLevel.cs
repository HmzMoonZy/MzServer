
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using Luban;
using Newtonsoft.Json.Linq;



namespace HotFix.Cfg
{

public sealed partial class Hero_heroLevel : Luban.BeanBase
{
    public Hero_heroLevel(JToken _buf) 
    {
        JObject _obj = _buf as JObject;
        id = (int)_obj.GetValue("id");
        groupID = (int)_obj.GetValue("groupID");
        level = (int)_obj.GetValue("level");
        unlockType = (int)_obj.GetValue("unlockType");
        { var __json0 = _obj.GetValue("talentNeed"); int _n0 = (__json0 as JArray).Count; talentNeed = new int[_n0]; int __index0=0; foreach(JToken __e0 in __json0) { int __v0;  __v0 = (int)__e0;  talentNeed[__index0++] = __v0; }   }
        unlockDesc = (string)_obj.GetValue("unlockDesc");
        { var __json0 = _obj.GetValue("levelupCost"); int _n0 = (__json0 as JArray).Count; levelupCost = new string[_n0]; int __index0=0; foreach(JToken __e0 in __json0) { string __v0;  __v0 = (string)__e0;  levelupCost[__index0++] = __v0; }   }
        { var __json0 = _obj.GetValue("heroAttr"); int _n0 = (__json0 as JArray).Count; heroAttr = new string[_n0]; int __index0=0; foreach(JToken __e0 in __json0) { string __v0;  __v0 = (string)__e0;  heroAttr[__index0++] = __v0; }   }
        levelupDesc = (string)_obj.GetValue("levelupDesc");
        skillType = (int)_obj.GetValue("skillType");
        { var __json0 = _obj.GetValue("skills"); int _n0 = (__json0 as JArray).Count; skills = new int[_n0]; int __index0=0; foreach(JToken __e0 in __json0) { int __v0;  __v0 = (int)__e0;  skills[__index0++] = __v0; }   }
        { var __json0 = _obj.GetValue("levelEffect"); int _n0 = (__json0 as JArray).Count; levelEffect = new string[_n0]; int __index0=0; foreach(JToken __e0 in __json0) { string __v0;  __v0 = (string)__e0;  levelEffect[__index0++] = __v0; }   }
        heroSkillPool = (int)_obj.GetValue("heroSkillPool");
        { var __json0 = _obj.GetValue("heroGift"); int _n0 = (__json0 as JArray).Count; heroGift = new string[_n0]; int __index0=0; foreach(JToken __e0 in __json0) { string __v0;  __v0 = (string)__e0;  heroGift[__index0++] = __v0; }   }
    }

    public static Hero_heroLevel DeserializeHero_heroLevel(JToken _buf)
    {
        return new Hero_heroLevel(_buf);
    }

    /// <summary>
    /// 英雄ID*1000+等级
    /// </summary>
    public readonly int id;
    /// <summary>
    /// 英雄组
    /// </summary>
    public readonly int groupID;
    /// <summary>
    /// 等级
    /// </summary>
    public readonly int level;
    /// <summary>
    /// 1要求天赋<br/>2要求传承
    /// </summary>
    public readonly int unlockType;
    /// <summary>
    /// 升级要求天赋段位
    /// </summary>
    public readonly int[] talentNeed;
    /// <summary>
    /// 解锁提升描述
    /// </summary>
    public readonly string unlockDesc;
    /// <summary>
    /// 升级消耗
    /// </summary>
    public readonly string[] levelupCost;
    /// <summary>
    /// 本级属性<br/>（最终值）
    /// </summary>
    public readonly string[] heroAttr;
    /// <summary>
    /// 升级词条描述
    /// </summary>
    public readonly string levelupDesc;
    /// <summary>
    /// 词条类型<br/>1【全局】获得后永久生效，无需上阵<br/>2.【本体】上阵时生效<br/>3.【英雄全局】获得后永久生效，无需上阵<br/>4.【英雄本体】上阵时生效
    /// </summary>
    public readonly int skillType;
    /// <summary>
    /// 解锁英雄特性技能<br/>累计(只会投放技能）
    /// </summary>
    public readonly int[] skills;
    /// <summary>
    /// 等级效果(只会投放属性)
    /// </summary>
    public readonly string[] levelEffect;
    /// <summary>
    /// rogue技能槽解锁
    /// </summary>
    public readonly int heroSkillPool;
    /// <summary>
    /// 英雄等级解锁道具
    /// </summary>
    public readonly string[] heroGift;


    public const int __ID__ = -880071227;
    public override int GetTypeId() => __ID__;

    public  void ResolveRef(Tables tables)
    {
    }

    public override string ToString()
    {
        return "{ "
        + "id:" + id + ","
        + "groupID:" + groupID + ","
        + "level:" + level + ","
        + "unlockType:" + unlockType + ","
        + "talentNeed:" + Luban.StringUtil.CollectionToString(talentNeed) + ","
        + "unlockDesc:" + unlockDesc + ","
        + "levelupCost:" + Luban.StringUtil.CollectionToString(levelupCost) + ","
        + "heroAttr:" + Luban.StringUtil.CollectionToString(heroAttr) + ","
        + "levelupDesc:" + levelupDesc + ","
        + "skillType:" + skillType + ","
        + "skills:" + Luban.StringUtil.CollectionToString(skills) + ","
        + "levelEffect:" + Luban.StringUtil.CollectionToString(levelEffect) + ","
        + "heroSkillPool:" + heroSkillPool + ","
        + "heroGift:" + Luban.StringUtil.CollectionToString(heroGift) + ","
        + "}";
    }
}
}

