
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using Luban;


namespace HotFix.Cfg
{
public sealed partial class Language_Battle_languagetable : Luban.BeanBase
{
    public Language_Battle_languagetable(ByteBuf _buf) 
    {
        id = _buf.ReadString();
        english = _buf.ReadString();
        spanish = _buf.ReadString();
        chinesesimplified = _buf.ReadString();
        vietnamese = _buf.ReadString();
        chinesetraditional = _buf.ReadString();
        japanese = _buf.ReadString();
        french = _buf.ReadString();
        german = _buf.ReadString();
        italian = _buf.ReadString();
        russian = _buf.ReadString();
        korean = _buf.ReadString();
        thai = _buf.ReadString();
        portuguese = _buf.ReadString();
        Indonesia = _buf.ReadString();
        dutch = _buf.ReadString();
        arabic = _buf.ReadString();
    }

    public static Language_Battle_languagetable DeserializeLanguage_Battle_languagetable(ByteBuf _buf)
    {
        return new Language_Battle_languagetable(_buf);
    }

    /// <summary>
    /// 内容ID<br/>
    /// </summary>
    public readonly string id;
    /// <summary>
    /// 英语
    /// </summary>
    public readonly string english;
    /// <summary>
    /// 西班牙语
    /// </summary>
    public readonly string spanish;
    /// <summary>
    /// 中国简化
    /// </summary>
    public readonly string chinesesimplified;
    /// <summary>
    /// 越南语
    /// </summary>
    public readonly string vietnamese;
    /// <summary>
    /// 中国传统
    /// </summary>
    public readonly string chinesetraditional;
    /// <summary>
    /// 日语
    /// </summary>
    public readonly string japanese;
    /// <summary>
    /// 法语
    /// </summary>
    public readonly string french;
    /// <summary>
    /// 德国
    /// </summary>
    public readonly string german;
    /// <summary>
    /// 意大利
    /// </summary>
    public readonly string italian;
    /// <summary>
    /// 俄语
    /// </summary>
    public readonly string russian;
    /// <summary>
    /// 韩国
    /// </summary>
    public readonly string korean;
    /// <summary>
    /// 泰国
    /// </summary>
    public readonly string thai;
    /// <summary>
    /// 葡萄牙
    /// </summary>
    public readonly string portuguese;
    /// <summary>
    /// 印度尼西亞
    /// </summary>
    public readonly string Indonesia;
    /// <summary>
    /// &#160;荷兰
    /// </summary>
    public readonly string dutch;
    /// <summary>
    /// 阿拉伯
    /// </summary>
    public readonly string arabic;
   
    public const int __ID__ = -39472458;
    public override int GetTypeId() => __ID__;

    public  void ResolveRef(Tables tables)
    {
    }

    public override string ToString()
    {
        return "{ "
        + "id:" + id + ","
        + "english:" + english + ","
        + "spanish:" + spanish + ","
        + "chinesesimplified:" + chinesesimplified + ","
        + "vietnamese:" + vietnamese + ","
        + "chinesetraditional:" + chinesetraditional + ","
        + "japanese:" + japanese + ","
        + "french:" + french + ","
        + "german:" + german + ","
        + "italian:" + italian + ","
        + "russian:" + russian + ","
        + "korean:" + korean + ","
        + "thai:" + thai + ","
        + "portuguese:" + portuguese + ","
        + "Indonesia:" + Indonesia + ","
        + "dutch:" + dutch + ","
        + "arabic:" + arabic + ","
        + "}";
    }
}

}

