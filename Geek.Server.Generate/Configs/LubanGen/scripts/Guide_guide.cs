
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using Luban;


namespace HotFix.Cfg
{
public sealed partial class Guide_guide : Luban.BeanBase
{
    public Guide_guide(ByteBuf _buf) 
    {
        id = _buf.ReadInt();
        guideGroup = _buf.ReadInt();
        canBreak = _buf.ReadInt();
        weight = _buf.ReadInt();
        groupOver = _buf.ReadInt();
        autoLockScroll = _buf.ReadInt();
        isLockScreen = _buf.ReadInt();
        guideTarget = _buf.ReadString();
        {int __n0 = System.Math.Min(_buf.ReadSize(), _buf.Size);guideTrigger = new string[__n0];for(var __index0 = 0 ; __index0 < __n0 ; __index0++) { string __e0;__e0 = _buf.ReadString(); guideTrigger[__index0] = __e0;}}
        {int __n0 = System.Math.Min(_buf.ReadSize(), _buf.Size);guideCondition = new string[__n0];for(var __index0 = 0 ; __index0 < __n0 ; __index0++) { string __e0;__e0 = _buf.ReadString(); guideCondition[__index0] = __e0;}}
        {int __n0 = System.Math.Min(_buf.ReadSize(), _buf.Size);guideComplete = new string[__n0];for(var __index0 = 0 ; __index0 < __n0 ; __index0++) { string __e0;__e0 = _buf.ReadString(); guideComplete[__index0] = __e0;}}
        {int __n0 = System.Math.Min(_buf.ReadSize(), _buf.Size);guideStyles = new string[__n0];for(var __index0 = 0 ; __index0 < __n0 ; __index0++) { string __e0;__e0 = _buf.ReadString(); guideStyles[__index0] = __e0;}}
        additional = _buf.ReadInt();
        {int __n0 = System.Math.Min(_buf.ReadSize(), _buf.Size);guideAction = new string[__n0];for(var __index0 = 0 ; __index0 < __n0 ; __index0++) { string __e0;__e0 = _buf.ReadString(); guideAction[__index0] = __e0;}}
        overOnStart = _buf.ReadInt();
        showDelay = _buf.ReadInt();
    }

    public static Guide_guide DeserializeGuide_guide(ByteBuf _buf)
    {
        return new Guide_guide(_buf);
    }

    /// <summary>
    /// Id
    /// </summary>
    public readonly int id;
    /// <summary>
    /// 引导组
    /// </summary>
    public readonly int guideGroup;
    /// <summary>
    /// 是否可以中断
    /// </summary>
    public readonly int canBreak;
    /// <summary>
    /// 排序权重
    /// </summary>
    public readonly int weight;
    /// <summary>
    /// 关键步骤
    /// </summary>
    public readonly int groupOver;
    /// <summary>
    /// 是否自动锁定滚动区域
    /// </summary>
    public readonly int autoLockScroll;
    /// <summary>
    /// 是否锁定屏幕
    /// </summary>
    public readonly int isLockScreen;
    /// <summary>
    /// 引导目标
    /// </summary>
    public readonly string guideTarget;
    /// <summary>
    /// 引导触发
    /// </summary>
    public readonly string[] guideTrigger;
    /// <summary>
    /// 引导条件
    /// </summary>
    public readonly string[] guideCondition;
    /// <summary>
    /// 完成类型
    /// </summary>
    public readonly string[] guideComplete;
    /// <summary>
    /// 引导样式===》样式:参数|样式:参数<br/>
    /// </summary>
    public readonly string[] guideStyles;
    /// <summary>
    /// 是否附加到目标所在Canvas:<br/>-1: 附加到目标界面<br/>其他: 不附加界面，指定界面层级
    /// </summary>
    public readonly int additional;
    /// <summary>
    /// 引导操作
    /// </summary>
    public readonly string[] guideAction;
    /// <summary>
    /// 是否开始即标记为完成引导
    /// </summary>
    public readonly int overOnStart;
    /// <summary>
    /// 引导延时出现<br/>毫秒
    /// </summary>
    public readonly int showDelay;
   
    public const int __ID__ = -606514215;
    public override int GetTypeId() => __ID__;

    public  void ResolveRef(Tables tables)
    {
    }

    public override string ToString()
    {
        return "{ "
        + "id:" + id + ","
        + "guideGroup:" + guideGroup + ","
        + "canBreak:" + canBreak + ","
        + "weight:" + weight + ","
        + "groupOver:" + groupOver + ","
        + "autoLockScroll:" + autoLockScroll + ","
        + "isLockScreen:" + isLockScreen + ","
        + "guideTarget:" + guideTarget + ","
        + "guideTrigger:" + Luban.StringUtil.CollectionToString(guideTrigger) + ","
        + "guideCondition:" + Luban.StringUtil.CollectionToString(guideCondition) + ","
        + "guideComplete:" + Luban.StringUtil.CollectionToString(guideComplete) + ","
        + "guideStyles:" + Luban.StringUtil.CollectionToString(guideStyles) + ","
        + "additional:" + additional + ","
        + "guideAction:" + Luban.StringUtil.CollectionToString(guideAction) + ","
        + "overOnStart:" + overOnStart + ","
        + "showDelay:" + showDelay + ","
        + "}";
    }
}

}

