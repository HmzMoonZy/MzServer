
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using Luban;


namespace HotFix.Cfg
{
public sealed partial class Function_Function : Luban.BeanBase
{
    public Function_Function(ByteBuf _buf) 
    {
        id = _buf.ReadInt();
        unlockType = _buf.ReadInt();
        unlockArgs = _buf.ReadString();
        OpenTime = _buf.ReadInt();
        unlockArgsCN = _buf.ReadString();
        OpenTimeCN = _buf.ReadInt();
        nameID = _buf.ReadString();
        desID = _buf.ReadString();
        showView = _buf.ReadInt();
        showIndex = _buf.ReadInt();
        iconAtlasID = _buf.ReadInt();
        iconName = _buf.ReadString();
        flyPos = _buf.ReadString();
        packVersion = _buf.ReadString();
        resVersion = _buf.ReadString();
        versionTime = _buf.ReadString();
    }

    public static Function_Function DeserializeFunction_Function(ByteBuf _buf)
    {
        return new Function_Function(_buf);
    }

    /// <summary>
    /// 功能ID
    /// </summary>
    public readonly int id;
    /// <summary>
    /// 功能开启类型<br/>1-主线关卡<br/>2-爬塔<br/>3-获得一件装备<br/>4-宠物抽卡等级<br/>5-前往新大陆<br/>6-天赋满级<br/>7-获得任意宝石<br/>8-地牢层数解锁<br/>999-永久不开启
    /// </summary>
    public readonly int unlockType;
    /// <summary>
    /// 功能开启参数<br/>1-章节id,层数<br/>2-塔id<br/>8-塔层数
    /// </summary>
    public readonly string unlockArgs;
    /// <summary>
    /// <br/>开服时间限制<br/>开服时间+X
    /// </summary>
    public readonly int OpenTime;
    /// <summary>
    /// 【国内】功能开启参数<br/>1-章节id,层数<br/>2-塔id
    /// </summary>
    public readonly string unlockArgsCN;
    /// <summary>
    /// <br/>【国内】开服时间限制<br/>开服时间+X
    /// </summary>
    public readonly int OpenTimeCN;
    /// <summary>
    /// 名称多语言ID
    /// </summary>
    public readonly string nameID;
    /// <summary>
    /// 说明文本多语言ID
    /// </summary>
    public readonly string desID;
    /// <summary>
    /// 是否显示开启界面：<br/>0：不显示界面<br/>1：显示开启界面
    /// </summary>
    public readonly int showView;
    /// <summary>
    /// 多项同时开启，<br/>功能显示顺序<br/>越小越优先
    /// </summary>
    public readonly int showIndex;
    /// <summary>
    /// 功能图标所在图集
    /// </summary>
    public readonly int iconAtlasID;
    /// <summary>
    /// 功能图标名称
    /// </summary>
    public readonly string iconName;
    /// <summary>
    /// 功能开启后图标飞向哪里
    /// </summary>
    public readonly string flyPos;
    /// <summary>
    /// 热更版本
    /// </summary>
    public readonly string packVersion;
    /// <summary>
    /// 热更版本
    /// </summary>
    public readonly string resVersion;
    /// <summary>
    /// 开启绝对时间<br/>（utc0时间）
    /// </summary>
    public readonly string versionTime;
   
    public const int __ID__ = 950839391;
    public override int GetTypeId() => __ID__;

    public  void ResolveRef(Tables tables)
    {
    }

    public override string ToString()
    {
        return "{ "
        + "id:" + id + ","
        + "unlockType:" + unlockType + ","
        + "unlockArgs:" + unlockArgs + ","
        + "OpenTime:" + OpenTime + ","
        + "unlockArgsCN:" + unlockArgsCN + ","
        + "OpenTimeCN:" + OpenTimeCN + ","
        + "nameID:" + nameID + ","
        + "desID:" + desID + ","
        + "showView:" + showView + ","
        + "showIndex:" + showIndex + ","
        + "iconAtlasID:" + iconAtlasID + ","
        + "iconName:" + iconName + ","
        + "flyPos:" + flyPos + ","
        + "packVersion:" + packVersion + ","
        + "resVersion:" + resVersion + ","
        + "versionTime:" + versionTime + ","
        + "}";
    }
}

}

