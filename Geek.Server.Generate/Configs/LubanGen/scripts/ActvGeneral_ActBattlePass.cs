
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using Luban;


namespace HotFix.Cfg
{
public sealed partial class ActvGeneral_ActBattlePass : Luban.BeanBase
{
    public ActvGeneral_ActBattlePass(ByteBuf _buf) 
    {
        id = _buf.ReadInt();
        group = _buf.ReadInt();
        themeId = _buf.ReadInt();
        purchaseId = _buf.ReadInt();
        playEndCanPurchase = _buf.ReadInt();
        tga_bp_type = _buf.ReadString();
        tga_event_name = _buf.ReadString();
        name = _buf.ReadString();
        bottomTipId = _buf.ReadString();
        atlasID = _buf.ReadInt();
        itemIcon = _buf.ReadString();
        finalRewardLimit = _buf.ReadInt();
        finalRewardType = _buf.ReadInt();
        {int __n0 = System.Math.Min(_buf.ReadSize(), _buf.Size);finalQualityRandom = new string[__n0];for(var __index0 = 0 ; __index0 < __n0 ; __index0++) { string __e0;__e0 = _buf.ReadString(); finalQualityRandom[__index0] = __e0;}}
        {int __n0 = System.Math.Min(_buf.ReadSize(), _buf.Size);finalDrop = new int[__n0];for(var __index0 = 0 ; __index0 < __n0 ; __index0++) { int __e0;__e0 = _buf.ReadInt(); finalDrop[__index0] = __e0;}}
        {int __n0 = System.Math.Min(_buf.ReadSize(), _buf.Size);upgradeRate = new int[__n0];for(var __index0 = 0 ; __index0 < __n0 ; __index0++) { int __e0;__e0 = _buf.ReadInt(); upgradeRate[__index0] = __e0;}}
        bigRewardDesc = _buf.ReadString();
        {int __n0 = System.Math.Min(_buf.ReadSize(), _buf.Size);bigRewardShow = new string[__n0];for(var __index0 = 0 ; __index0 < __n0 ; __index0++) { string __e0;__e0 = _buf.ReadString(); bigRewardShow[__index0] = __e0;}}
        {int __n0 = System.Math.Min(_buf.ReadSize(), _buf.Size);delItems = new string[__n0];for(var __index0 = 0 ; __index0 < __n0 ; __index0++) { string __e0;__e0 = _buf.ReadString(); delItems[__index0] = __e0;}}
    }

    public static ActvGeneral_ActBattlePass DeserializeActvGeneral_ActBattlePass(ByteBuf _buf)
    {
        return new ActvGeneral_ActBattlePass(_buf);
    }

    /// <summary>
    /// 编号
    /// </summary>
    public readonly int id;
    /// <summary>
    /// 对应奖励条目组
    /// </summary>
    public readonly int group;
    /// <summary>
    /// 美术主题风格Id
    /// </summary>
    public readonly int themeId;
    /// <summary>
    /// 充值id
    /// </summary>
    public readonly int purchaseId;
    /// <summary>
    /// 活动玩法结束后是否能购买
    /// </summary>
    public readonly int playEndCanPurchase;
    /// <summary>
    /// tga打点bp_type（用中文）
    /// </summary>
    public readonly string tga_bp_type;
    /// <summary>
    /// tga打点event_name（用中文）
    /// </summary>
    public readonly string tga_event_name;
    /// <summary>
    /// 活动名称多语言
    /// </summary>
    public readonly string name;
    /// <summary>
    /// 底部提示语言Id
    /// </summary>
    public readonly string bottomTipId;
    /// <summary>
    /// 图集名称
    /// </summary>
    public readonly int atlasID;
    /// <summary>
    /// 活动道具图标
    /// </summary>
    public readonly string itemIcon;
    /// <summary>
    /// 最终循环奖励次数<br/>0或不配则无循环奖励<br/>配&lt;0则循环奖励无次数限制
    /// </summary>
    public readonly int finalRewardLimit;
    /// <summary>
    /// 1直接读取item-drop<br/>2可升级
    /// </summary>
    public readonly int finalRewardType;
    /// <summary>
    /// 循环奖励初始品质随机<br/>（品质1,权重|...)
    /// </summary>
    public readonly string[] finalQualityRandom;
    /// <summary>
    /// 最终奖励
    /// </summary>
    public readonly int[] finalDrop;
    /// <summary>
    /// 升品概率（万分比）
    /// </summary>
    public readonly int[] upgradeRate;
    /// <summary>
    /// 大奖展示文本
    /// </summary>
    public readonly string bigRewardDesc;
    /// <summary>
    /// 大奖展示图标
    /// </summary>
    public readonly string[] bigRewardShow;
    /// <summary>
    /// 删除道具
    /// </summary>
    public readonly string[] delItems;
   
    public const int __ID__ = -2103493632;
    public override int GetTypeId() => __ID__;

    public  void ResolveRef(Tables tables)
    {
    }

    public override string ToString()
    {
        return "{ "
        + "id:" + id + ","
        + "group:" + group + ","
        + "themeId:" + themeId + ","
        + "purchaseId:" + purchaseId + ","
        + "playEndCanPurchase:" + playEndCanPurchase + ","
        + "tga_bp_type:" + tga_bp_type + ","
        + "tga_event_name:" + tga_event_name + ","
        + "name:" + name + ","
        + "bottomTipId:" + bottomTipId + ","
        + "atlasID:" + atlasID + ","
        + "itemIcon:" + itemIcon + ","
        + "finalRewardLimit:" + finalRewardLimit + ","
        + "finalRewardType:" + finalRewardType + ","
        + "finalQualityRandom:" + Luban.StringUtil.CollectionToString(finalQualityRandom) + ","
        + "finalDrop:" + Luban.StringUtil.CollectionToString(finalDrop) + ","
        + "upgradeRate:" + Luban.StringUtil.CollectionToString(upgradeRate) + ","
        + "bigRewardDesc:" + bigRewardDesc + ","
        + "bigRewardShow:" + Luban.StringUtil.CollectionToString(bigRewardShow) + ","
        + "delItems:" + Luban.StringUtil.CollectionToString(delItems) + ","
        + "}";
    }
}

}

