
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using Luban;


namespace HotFix.Cfg
{
public sealed partial class Chapter_eventPoint : Luban.BeanBase
{
    public Chapter_eventPoint(ByteBuf _buf) 
    {
        id = _buf.ReadInt();
        {int __n0 = System.Math.Min(_buf.ReadSize(), _buf.Size);createOffsetSea = new float[__n0];for(var __index0 = 0 ; __index0 < __n0 ; __index0++) { float __e0;__e0 = _buf.ReadFloat(); createOffsetSea[__index0] = __e0;}}
        {int __n0 = System.Math.Min(_buf.ReadSize(), _buf.Size);createOffsetLand = new float[__n0];for(var __index0 = 0 ; __index0 < __n0 ; __index0++) { float __e0;__e0 = _buf.ReadFloat(); createOffsetLand[__index0] = __e0;}}
        {int __n0 = System.Math.Min(_buf.ReadSize(), _buf.Size);action = new string[__n0];for(var __index0 = 0 ; __index0 < __n0 ; __index0++) { string __e0;__e0 = _buf.ReadString(); action[__index0] = __e0;}}
        {int __n0 = System.Math.Min(_buf.ReadSize(), _buf.Size);defaultAction = new string[__n0];for(var __index0 = 0 ; __index0 < __n0 ; __index0++) { string __e0;__e0 = _buf.ReadString(); defaultAction[__index0] = __e0;}}
        playerArriveAction = _buf.ReadString();
        bottomId = _buf.ReadInt();
        path = _buf.ReadString();
    }

    public static Chapter_eventPoint DeserializeChapter_eventPoint(ByteBuf _buf)
    {
        return new Chapter_eventPoint(_buf);
    }

    /// <summary>
    /// id
    /// </summary>
    public readonly int id;
    /// <summary>
    /// 创建时的位置偏移(海洋）
    /// </summary>
    public readonly float[] createOffsetSea;
    /// <summary>
    /// 创建时的位置偏移（陆地）
    /// </summary>
    public readonly float[] createOffsetLand;
    /// <summary>
    /// 行为（行为类型,持续时间）
    /// </summary>
    public readonly string[] action;
    /// <summary>
    /// 创建时行为|相遇时行为|离开时行为
    /// </summary>
    public readonly string[] defaultAction;
    /// <summary>
    /// 抵达后的玩家行为<br/>(行为类型,持续时间）
    /// </summary>
    public readonly string playerArriveAction;
    /// <summary>
    /// 通用底座基础ID<br/>（为0时不使用底座<br/>最终id=底座基础ID+地图底座类型）
    /// </summary>
    public readonly int bottomId;
    /// <summary>
    /// 资源路径
    /// </summary>
    public readonly string path;
   
    public const int __ID__ = 1500862056;
    public override int GetTypeId() => __ID__;

    public  void ResolveRef(Tables tables)
    {
    }

    public override string ToString()
    {
        return "{ "
        + "id:" + id + ","
        + "createOffsetSea:" + Luban.StringUtil.CollectionToString(createOffsetSea) + ","
        + "createOffsetLand:" + Luban.StringUtil.CollectionToString(createOffsetLand) + ","
        + "action:" + Luban.StringUtil.CollectionToString(action) + ","
        + "defaultAction:" + Luban.StringUtil.CollectionToString(defaultAction) + ","
        + "playerArriveAction:" + playerArriveAction + ","
        + "bottomId:" + bottomId + ","
        + "path:" + path + ","
        + "}";
    }
}

}

