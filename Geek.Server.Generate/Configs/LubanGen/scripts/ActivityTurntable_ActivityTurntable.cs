
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using Luban;


namespace HotFix.Cfg
{
public sealed partial class ActivityTurntable_ActivityTurntable : Luban.BeanBase
{
    public ActivityTurntable_ActivityTurntable(ByteBuf _buf) 
    {
        id = _buf.ReadInt();
        OpenTime = _buf.ReadInt();
        EndTime = _buf.ReadInt();
        OpenTimeNew = _buf.ReadInt();
        EndTimeNew = _buf.ReadInt();
        OpenDateTime = _buf.ReadString();
        EndDateTime = _buf.ReadString();
        dateTimeLimit = _buf.ReadInt();
        shopGroup = _buf.ReadInt();
        {int __n0 = System.Math.Min(_buf.ReadSize(), _buf.Size);ShopRes = new int[__n0];for(var __index0 = 0 ; __index0 < __n0 ; __index0++) { int __e0;__e0 = _buf.ReadInt(); ShopRes[__index0] = __e0;}}
        priceId = _buf.ReadInt();
        singlePrice = _buf.ReadInt();
        tenPrice = _buf.ReadInt();
        {int __n0 = System.Math.Min(_buf.ReadSize(), _buf.Size);poolTimes = new string[__n0];for(var __index0 = 0 ; __index0 < __n0 ; __index0++) { string __e0;__e0 = _buf.ReadString(); poolTimes[__index0] = __e0;}}
        {int __n0 = System.Math.Min(_buf.ReadSize(), _buf.Size);pool = new string[__n0];for(var __index0 = 0 ; __index0 < __n0 ; __index0++) { string __e0;__e0 = _buf.ReadString(); pool[__index0] = __e0;}}
        {int __n0 = System.Math.Min(_buf.ReadSize(), _buf.Size);rate = new string[__n0];for(var __index0 = 0 ; __index0 < __n0 ; __index0++) { string __e0;__e0 = _buf.ReadString(); rate[__index0] = __e0;}}
        {int __n0 = System.Math.Min(_buf.ReadSize(), _buf.Size);showRate = new string[__n0];for(var __index0 = 0 ; __index0 < __n0 ; __index0++) { string __e0;__e0 = _buf.ReadString(); showRate[__index0] = __e0;}}
        {int __n0 = System.Math.Min(_buf.ReadSize(), _buf.Size);showRateBig = new string[__n0];for(var __index0 = 0 ; __index0 < __n0 ; __index0++) { string __e0;__e0 = _buf.ReadString(); showRateBig[__index0] = __e0;}}
        miniPityCount = _buf.ReadInt();
        miniPityRate = _buf.ReadInt();
        {int __n0 = System.Math.Min(_buf.ReadSize(), _buf.Size);limitItems = new string[__n0];for(var __index0 = 0 ; __index0 < __n0 ; __index0++) { string __e0;__e0 = _buf.ReadString(); limitItems[__index0] = __e0;}}
        bigPityCount = _buf.ReadInt();
        timesRewardID = _buf.ReadInt();
        ProdMailTempId = _buf.ReadString();
    }

    public static ActivityTurntable_ActivityTurntable DeserializeActivityTurntable_ActivityTurntable(ByteBuf _buf)
    {
        return new ActivityTurntable_ActivityTurntable(_buf);
    }

    /// <summary>
    /// ID
    /// </summary>
    public readonly int id;
    /// <summary>
    /// 开启时间<br/>开服时间+X<br/>开启为本日0点<br/>1.4.2后无效
    /// </summary>
    public readonly int OpenTime;
    /// <summary>
    /// 结束时间<br/>开服时间+X<br/>结束为本日23点59分<br/>1.4.2后无效
    /// </summary>
    public readonly int EndTime;
    /// <summary>
    /// 开启时间<br/>开服时间+X<br/>开启为本日0点
    /// </summary>
    public readonly int OpenTimeNew;
    /// <summary>
    /// 结束时间<br/>开服时间+X<br/>结束为本日23点59分
    /// </summary>
    public readonly int EndTimeNew;
    /// <summary>
    /// 开启时间<br/>绝对时间
    /// </summary>
    public readonly string OpenDateTime;
    /// <summary>
    /// 结束时间<br/>绝对时间
    /// </summary>
    public readonly string EndDateTime;
    /// <summary>
    /// 绝对时间活动<br/>开服+X天后有效
    /// </summary>
    public readonly int dateTimeLimit;
    /// <summary>
    /// 商店组
    /// </summary>
    public readonly int shopGroup;
    /// <summary>
    /// 商店组上展示的道具id列表
    /// </summary>
    public readonly int[] ShopRes;
    /// <summary>
    /// 消耗物品Id
    /// </summary>
    public readonly int priceId;
    /// <summary>
    /// 单抽消耗<br/>物品数量
    /// </summary>
    public readonly int singlePrice;
    /// <summary>
    /// 十连消耗<br/>物品数量
    /// </summary>
    public readonly int tenPrice;
    /// <summary>
    /// 抽取多少次切换池子
    /// </summary>
    public readonly string[] poolTimes;
    /// <summary>
    /// 池子
    /// </summary>
    public readonly string[] pool;
    /// <summary>
    /// 概率
    /// </summary>
    public readonly string[] rate;
    /// <summary>
    /// 展示概率(万分比)
    /// </summary>
    public readonly string[] showRate;
    /// <summary>
    /// 大奖展示概率
    /// </summary>
    public readonly string[] showRateBig;
    /// <summary>
    /// 小保底次数
    /// </summary>
    public readonly int miniPityCount;
    /// <summary>
    /// 小保底抽卡池|小保底重置池
    /// </summary>
    public readonly int miniPityRate;
    /// <summary>
    /// 小保底限定物品|限定次数
    /// </summary>
    public readonly string[] limitItems;
    /// <summary>
    /// 大保底次数
    /// </summary>
    public readonly int bigPityCount;
    /// <summary>
    /// 次数奖励ID
    /// </summary>
    public readonly int timesRewardID;
    /// <summary>
    /// 正式服奖励邮件
    /// </summary>
    public readonly string ProdMailTempId;
   
    public const int __ID__ = -1508127995;
    public override int GetTypeId() => __ID__;

    public  void ResolveRef(Tables tables)
    {
    }

    public override string ToString()
    {
        return "{ "
        + "id:" + id + ","
        + "OpenTime:" + OpenTime + ","
        + "EndTime:" + EndTime + ","
        + "OpenTimeNew:" + OpenTimeNew + ","
        + "EndTimeNew:" + EndTimeNew + ","
        + "OpenDateTime:" + OpenDateTime + ","
        + "EndDateTime:" + EndDateTime + ","
        + "dateTimeLimit:" + dateTimeLimit + ","
        + "shopGroup:" + shopGroup + ","
        + "ShopRes:" + Luban.StringUtil.CollectionToString(ShopRes) + ","
        + "priceId:" + priceId + ","
        + "singlePrice:" + singlePrice + ","
        + "tenPrice:" + tenPrice + ","
        + "poolTimes:" + Luban.StringUtil.CollectionToString(poolTimes) + ","
        + "pool:" + Luban.StringUtil.CollectionToString(pool) + ","
        + "rate:" + Luban.StringUtil.CollectionToString(rate) + ","
        + "showRate:" + Luban.StringUtil.CollectionToString(showRate) + ","
        + "showRateBig:" + Luban.StringUtil.CollectionToString(showRateBig) + ","
        + "miniPityCount:" + miniPityCount + ","
        + "miniPityRate:" + miniPityRate + ","
        + "limitItems:" + Luban.StringUtil.CollectionToString(limitItems) + ","
        + "bigPityCount:" + bigPityCount + ","
        + "timesRewardID:" + timesRewardID + ","
        + "ProdMailTempId:" + ProdMailTempId + ","
        + "}";
    }
}

}

