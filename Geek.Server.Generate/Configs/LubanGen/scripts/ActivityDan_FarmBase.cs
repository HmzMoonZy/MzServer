
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using Luban;


namespace HotFix.Cfg
{
public sealed partial class ActivityDan_FarmBase : Luban.BeanBase
{
    public ActivityDan_FarmBase(ByteBuf _buf) 
    {
        ID = _buf.ReadInt();
        ConnectActivityId = _buf.ReadInt();
        EntryIcon = _buf.ReadString();
        EntryNameId = _buf.ReadString();
        FnishSpineUseSkin = _buf.ReadInt();
        RandomSeed = _buf.ReadInt();
        {int __n0 = System.Math.Min(_buf.ReadSize(), _buf.Size);RandomResult = new string[__n0];for(var __index0 = 0 ; __index0 < __n0 ; __index0++) { string __e0;__e0 = _buf.ReadString(); RandomResult[__index0] = __e0;}}
        {int __n0 = System.Math.Min(_buf.ReadSize(), _buf.Size);CantUseSeeds = new int[__n0];for(var __index0 = 0 ; __index0 < __n0 ; __index0++) { int __e0;__e0 = _buf.ReadInt(); CantUseSeeds[__index0] = __e0;}}
        {int __n0 = System.Math.Min(_buf.ReadSize(), _buf.Size);CoinID = new int[__n0];for(var __index0 = 0 ; __index0 < __n0 ; __index0++) { int __e0;__e0 = _buf.ReadInt(); CoinID[__index0] = __e0;}}
        FertilizerID = _buf.ReadInt();
        {int __n0 = System.Math.Min(_buf.ReadSize(), _buf.Size);defaultSeed = new string[__n0];for(var __index0 = 0 ; __index0 < __n0 ; __index0++) { string __e0;__e0 = _buf.ReadString(); defaultSeed[__index0] = __e0;}}
        ShopRefreshTime = _buf.ReadInt();
        ShopRefreshItem = _buf.ReadInt();
        ShopRefreshAdId = _buf.ReadInt();
        ShopRefreshAdTime = _buf.ReadInt();
        {int __n0 = System.Math.Min(_buf.ReadSize(), _buf.Size);PriceFloat = new string[__n0];for(var __index0 = 0 ; __index0 < __n0 ; __index0++) { string __e0;__e0 = _buf.ReadString(); PriceFloat[__index0] = __e0;}}
        {int __n0 = System.Math.Min(_buf.ReadSize(), _buf.Size);RankReward = new string[__n0];for(var __index0 = 0 ; __index0 < __n0 ; __index0++) { string __e0;__e0 = _buf.ReadString(); RankReward[__index0] = __e0;}}
        {int __n0 = System.Math.Min(_buf.ReadSize(), _buf.Size);ClearTime = new int[__n0];for(var __index0 = 0 ; __index0 < __n0 ; __index0++) { int __e0;__e0 = _buf.ReadInt(); ClearTime[__index0] = __e0;}}
        RankNum = _buf.ReadInt();
        MailCoins = _buf.ReadInt();
        {int __n0 = System.Math.Min(_buf.ReadSize(), _buf.Size);RecoverItems = new int[__n0];for(var __index0 = 0 ; __index0 < __n0 ; __index0++) { int __e0;__e0 = _buf.ReadInt(); RecoverItems[__index0] = __e0;}}
        MailItemsId = _buf.ReadString();
        RankMailID = _buf.ReadString();
        TaskBanner = _buf.ReadString();
        ExchangeBanner = _buf.ReadString();
        GiftPackgeBanner = _buf.ReadString();
        BgmId = _buf.ReadInt();
    }

    public static ActivityDan_FarmBase DeserializeActivityDan_FarmBase(ByteBuf _buf)
    {
        return new ActivityDan_FarmBase(_buf);
    }

    /// <summary>
    /// ID
    /// </summary>
    public readonly int ID;
    /// <summary>
    /// 关联的活动ID<br/>EventOpenTime表ID
    /// </summary>
    public readonly int ConnectActivityId;
    /// <summary>
    /// 入口Icon名
    /// </summary>
    public readonly string EntryIcon;
    /// <summary>
    /// 入口名多语言Id
    /// </summary>
    public readonly string EntryNameId;
    /// <summary>
    /// 成熟时Spine是否用皮肤
    /// </summary>
    public readonly int FnishSpineUseSkin;
    /// <summary>
    /// 随机种子道具
    /// </summary>
    public readonly int RandomSeed;
    /// <summary>
    /// 作物ID
    /// </summary>
    public readonly string[] RandomResult;
    /// <summary>
    /// 不能直接使用的种子，只能随机
    /// </summary>
    public readonly int[] CantUseSeeds;
    /// <summary>
    /// 农场币道具
    /// </summary>
    public readonly int[] CoinID;
    /// <summary>
    /// 肥料道具
    /// </summary>
    public readonly int FertilizerID;
    /// <summary>
    /// 活动开始时默认给的种子<br/>ID,数量|
    /// </summary>
    public readonly string[] defaultSeed;
    /// <summary>
    /// 商店价格刷新时间（秒）
    /// </summary>
    public readonly int ShopRefreshTime;
    /// <summary>
    /// 商店刷新使用道具
    /// </summary>
    public readonly int ShopRefreshItem;
    /// <summary>
    /// 手动刷新商店价格的广告Id
    /// </summary>
    public readonly int ShopRefreshAdId;
    /// <summary>
    /// 商店价格刷新免费广告次数每天
    /// </summary>
    public readonly int ShopRefreshAdTime;
    /// <summary>
    /// 价格浮动配置<br/>最低价格比，最高价格比，概率|
    /// </summary>
    public readonly string[] PriceFloat;
    /// <summary>
    /// 排行榜奖励<br/>最高名次，最低名次，奖励|
    /// </summary>
    public readonly string[] RankReward;
    /// <summary>
    /// 作物自动售卖的时间点<br/>距离活动开启时间过去X秒
    /// </summary>
    public readonly int[] ClearTime;
    /// <summary>
    /// 排行榜单组人数
    /// </summary>
    public readonly int RankNum;
    /// <summary>
    /// 活动结束剩余单个肥料兑换金币数量
    /// </summary>
    public readonly int MailCoins;
    /// <summary>
    /// 活动结束需要回收的道具
    /// </summary>
    public readonly int[] RecoverItems;
    /// <summary>
    /// 活动结束转化邮件<br/>内国外用同一ID
    /// </summary>
    public readonly string MailItemsId;
    /// <summary>
    /// 排行榜邮件模板ID 内国外用同一ID
    /// </summary>
    public readonly string RankMailID;
    /// <summary>
    /// 兑换Banner
    /// </summary>
    public readonly string TaskBanner;
    /// <summary>
    /// 兑换Banner
    /// </summary>
    public readonly string ExchangeBanner;
    /// <summary>
    /// 兑换Banner
    /// </summary>
    public readonly string GiftPackgeBanner;
    /// <summary>
    /// 背景音Id
    /// </summary>
    public readonly int BgmId;
   
    public const int __ID__ = 397158916;
    public override int GetTypeId() => __ID__;

    public  void ResolveRef(Tables tables)
    {
    }

    public override string ToString()
    {
        return "{ "
        + "ID:" + ID + ","
        + "ConnectActivityId:" + ConnectActivityId + ","
        + "EntryIcon:" + EntryIcon + ","
        + "EntryNameId:" + EntryNameId + ","
        + "FnishSpineUseSkin:" + FnishSpineUseSkin + ","
        + "RandomSeed:" + RandomSeed + ","
        + "RandomResult:" + Luban.StringUtil.CollectionToString(RandomResult) + ","
        + "CantUseSeeds:" + Luban.StringUtil.CollectionToString(CantUseSeeds) + ","
        + "CoinID:" + Luban.StringUtil.CollectionToString(CoinID) + ","
        + "FertilizerID:" + FertilizerID + ","
        + "defaultSeed:" + Luban.StringUtil.CollectionToString(defaultSeed) + ","
        + "ShopRefreshTime:" + ShopRefreshTime + ","
        + "ShopRefreshItem:" + ShopRefreshItem + ","
        + "ShopRefreshAdId:" + ShopRefreshAdId + ","
        + "ShopRefreshAdTime:" + ShopRefreshAdTime + ","
        + "PriceFloat:" + Luban.StringUtil.CollectionToString(PriceFloat) + ","
        + "RankReward:" + Luban.StringUtil.CollectionToString(RankReward) + ","
        + "ClearTime:" + Luban.StringUtil.CollectionToString(ClearTime) + ","
        + "RankNum:" + RankNum + ","
        + "MailCoins:" + MailCoins + ","
        + "RecoverItems:" + Luban.StringUtil.CollectionToString(RecoverItems) + ","
        + "MailItemsId:" + MailItemsId + ","
        + "RankMailID:" + RankMailID + ","
        + "TaskBanner:" + TaskBanner + ","
        + "ExchangeBanner:" + ExchangeBanner + ","
        + "GiftPackgeBanner:" + GiftPackgeBanner + ","
        + "BgmId:" + BgmId + ","
        + "}";
    }
}

}

