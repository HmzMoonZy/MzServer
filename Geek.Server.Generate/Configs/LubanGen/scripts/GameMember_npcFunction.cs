
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using Luban;


namespace HotFix.Cfg
{
public sealed partial class GameMember_npcFunction : Luban.BeanBase
{
    public GameMember_npcFunction(ByteBuf _buf) 
    {
        id = _buf.ReadInt();
        {int __n0 = System.Math.Min(_buf.ReadSize(), _buf.Size);npcOffset = new float[__n0];for(var __index0 = 0 ; __index0 < __n0 ; __index0++) { float __e0;__e0 = _buf.ReadFloat(); npcOffset[__index0] = __e0;}}
        {int __n0 = System.Math.Min(_buf.ReadSize(), _buf.Size);followOffset = new float[__n0];for(var __index0 = 0 ; __index0 < __n0 ; __index0++) { float __e0;__e0 = _buf.ReadFloat(); followOffset[__index0] = __e0;}}
        {int __n0 = System.Math.Min(_buf.ReadSize(), _buf.Size);fishingStartPos = new float[__n0];for(var __index0 = 0 ; __index0 < __n0 ; __index0++) { float __e0;__e0 = _buf.ReadFloat(); fishingStartPos[__index0] = __e0;}}
        {int __n0 = System.Math.Min(_buf.ReadSize(), _buf.Size);fishingEndPos = new float[__n0];for(var __index0 = 0 ; __index0 < __n0 ; __index0++) { float __e0;__e0 = _buf.ReadFloat(); fishingEndPos[__index0] = __e0;}}
        {int __n0 = System.Math.Min(_buf.ReadSize(), _buf.Size);boxPos = new float[__n0];for(var __index0 = 0 ; __index0 < __n0 ; __index0++) { float __e0;__e0 = _buf.ReadFloat(); boxPos[__index0] = __e0;}}
        ride = _buf.ReadInt();
        rideScale = _buf.ReadFloat();
    }

    public static GameMember_npcFunction DeserializeGameMember_npcFunction(ByteBuf _buf)
    {
        return new GameMember_npcFunction(_buf);
    }

    /// <summary>
    /// 内容ID
    /// </summary>
    public readonly int id;
    /// <summary>
    /// npc出现的位置偏移
    /// </summary>
    public readonly float[] npcOffset;
    /// <summary>
    /// 跟随主角时的偏移
    /// </summary>
    public readonly float[] followOffset;
    /// <summary>
    /// 钓鱼出现位置
    /// </summary>
    public readonly float[] fishingStartPos;
    /// <summary>
    /// 钓鱼结束位置
    /// </summary>
    public readonly float[] fishingEndPos;
    /// <summary>
    /// 宝箱位置
    /// </summary>
    public readonly float[] boxPos;
    /// <summary>
    /// 载具id
    /// </summary>
    public readonly int ride;
    /// <summary>
    /// 载具缩放
    /// </summary>
    public readonly float rideScale;
   
    public const int __ID__ = -235323546;
    public override int GetTypeId() => __ID__;

    public  void ResolveRef(Tables tables)
    {
    }

    public override string ToString()
    {
        return "{ "
        + "id:" + id + ","
        + "npcOffset:" + Luban.StringUtil.CollectionToString(npcOffset) + ","
        + "followOffset:" + Luban.StringUtil.CollectionToString(followOffset) + ","
        + "fishingStartPos:" + Luban.StringUtil.CollectionToString(fishingStartPos) + ","
        + "fishingEndPos:" + Luban.StringUtil.CollectionToString(fishingEndPos) + ","
        + "boxPos:" + Luban.StringUtil.CollectionToString(boxPos) + ","
        + "ride:" + ride + ","
        + "rideScale:" + rideScale + ","
        + "}";
    }
}

}

