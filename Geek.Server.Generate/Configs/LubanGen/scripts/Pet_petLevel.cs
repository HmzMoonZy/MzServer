
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using Luban;


namespace HotFix.Cfg
{
public sealed partial class Pet_petLevel : Luban.BeanBase
{
    public Pet_petLevel(ByteBuf _buf) 
    {
        id = _buf.ReadInt();
        type = _buf.ReadInt();
        level = _buf.ReadInt();
        unlockType = _buf.ReadInt();
        {int __n0 = System.Math.Min(_buf.ReadSize(), _buf.Size);talentNeed = new int[__n0];for(var __index0 = 0 ; __index0 < __n0 ; __index0++) { int __e0;__e0 = _buf.ReadInt(); talentNeed[__index0] = __e0;}}
        unlockDesc = _buf.ReadString();
        {int __n0 = System.Math.Min(_buf.ReadSize(), _buf.Size);upgradeAttributes = new string[__n0];for(var __index0 = 0 ; __index0 < __n0 ; __index0++) { string __e0;__e0 = _buf.ReadString(); upgradeAttributes[__index0] = __e0;}}
        nextID = _buf.ReadInt();
        levelupFragment = _buf.ReadInt();
        {int __n0 = System.Math.Min(_buf.ReadSize(), _buf.Size);levelupCost = new string[__n0];for(var __index0 = 0 ; __index0 < __n0 ; __index0++) { string __e0;__e0 = _buf.ReadString(); levelupCost[__index0] = __e0;}}
    }

    public static Pet_petLevel DeserializePet_petLevel(ByteBuf _buf)
    {
        return new Pet_petLevel(_buf);
    }

    /// <summary>
    /// 内容ID
    /// </summary>
    public readonly int id;
    /// <summary>
    /// 宠物品质<br/>获得ID时可以通过宠物品质*10000+等级
    /// </summary>
    public readonly int type;
    /// <summary>
    /// 等级
    /// </summary>
    public readonly int level;
    /// <summary>
    /// 1要求天赋<br/>2要求传承
    /// </summary>
    public readonly int unlockType;
    /// <summary>
    /// 升级要求天赋段位
    /// </summary>
    public readonly int[] talentNeed;
    /// <summary>
    /// 解锁多语言
    /// </summary>
    public readonly string unlockDesc;
    /// <summary>
    /// 宠物强化属性
    /// </summary>
    public readonly string[] upgradeAttributes;
    /// <summary>
    /// 下一等级ID 满级为0
    /// </summary>
    public readonly int nextID;
    /// <summary>
    /// 升至下一级的同名碎片消耗
    /// </summary>
    public readonly int levelupFragment;
    /// <summary>
    /// 升至下一级的消耗
    /// </summary>
    public readonly string[] levelupCost;
   
    public const int __ID__ = -132875035;
    public override int GetTypeId() => __ID__;

    public  void ResolveRef(Tables tables)
    {
    }

    public override string ToString()
    {
        return "{ "
        + "id:" + id + ","
        + "type:" + type + ","
        + "level:" + level + ","
        + "unlockType:" + unlockType + ","
        + "talentNeed:" + Luban.StringUtil.CollectionToString(talentNeed) + ","
        + "unlockDesc:" + unlockDesc + ","
        + "upgradeAttributes:" + Luban.StringUtil.CollectionToString(upgradeAttributes) + ","
        + "nextID:" + nextID + ","
        + "levelupFragment:" + levelupFragment + ","
        + "levelupCost:" + Luban.StringUtil.CollectionToString(levelupCost) + ","
        + "}";
    }
}

}

