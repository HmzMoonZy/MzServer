
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using Luban;


namespace HotFix.Cfg
{
public sealed partial class CrossArena_CrossArena : Luban.BeanBase
{
    public CrossArena_CrossArena(ByteBuf _buf) 
    {
        id = _buf.ReadInt();
        ranktop = _buf.ReadInt();
        rankbuttom = _buf.ReadInt();
        baseWinScore = _buf.ReadInt();
        baseLoseScore = _buf.ReadInt();
        addition = _buf.ReadFloat();
        {int __n0 = System.Math.Min(_buf.ReadSize(), _buf.Size);winScoreSection = new int[__n0];for(var __index0 = 0 ; __index0 < __n0 ; __index0++) { int __e0;__e0 = _buf.ReadInt(); winScoreSection[__index0] = __e0;}}
        {int __n0 = System.Math.Min(_buf.ReadSize(), _buf.Size);loseScoreSection = new int[__n0];for(var __index0 = 0 ; __index0 < __n0 ; __index0++) { int __e0;__e0 = _buf.ReadInt(); loseScoreSection[__index0] = __e0;}}
        {int __n0 = System.Math.Min(_buf.ReadSize(), _buf.Size);dailyRewards = new string[__n0];for(var __index0 = 0 ; __index0 < __n0 ; __index0++) { string __e0;__e0 = _buf.ReadString(); dailyRewards[__index0] = __e0;}}
        {int __n0 = System.Math.Min(_buf.ReadSize(), _buf.Size);seasonRewards = new string[__n0];for(var __index0 = 0 ; __index0 < __n0 ; __index0++) { string __e0;__e0 = _buf.ReadString(); seasonRewards[__index0] = __e0;}}
    }

    public static CrossArena_CrossArena DeserializeCrossArena_CrossArena(ByteBuf _buf)
    {
        return new CrossArena_CrossArena(_buf);
    }

    /// <summary>
    /// 内容ID
    /// </summary>
    public readonly int id;
    /// <summary>
    /// 名次上限（含）
    /// </summary>
    public readonly int ranktop;
    /// <summary>
    /// 名次下限（含）
    /// </summary>
    public readonly int rankbuttom;
    /// <summary>
    /// 战胜基础加分
    /// </summary>
    public readonly int baseWinScore;
    /// <summary>
    /// 战败基础扣分
    /// </summary>
    public readonly int baseLoseScore;
    /// <summary>
    /// 双方分差加成比例
    /// </summary>
    public readonly float addition;
    /// <summary>
    /// 战胜加分区间
    /// </summary>
    public readonly int[] winScoreSection;
    /// <summary>
    /// 战败扣分区间
    /// </summary>
    public readonly int[] loseScoreSection;
    /// <summary>
    /// 日常奖励
    /// </summary>
    public readonly string[] dailyRewards;
    /// <summary>
    /// 赛季奖励
    /// </summary>
    public readonly string[] seasonRewards;
   
    public const int __ID__ = -1034738881;
    public override int GetTypeId() => __ID__;

    public  void ResolveRef(Tables tables)
    {
    }

    public override string ToString()
    {
        return "{ "
        + "id:" + id + ","
        + "ranktop:" + ranktop + ","
        + "rankbuttom:" + rankbuttom + ","
        + "baseWinScore:" + baseWinScore + ","
        + "baseLoseScore:" + baseLoseScore + ","
        + "addition:" + addition + ","
        + "winScoreSection:" + Luban.StringUtil.CollectionToString(winScoreSection) + ","
        + "loseScoreSection:" + Luban.StringUtil.CollectionToString(loseScoreSection) + ","
        + "dailyRewards:" + Luban.StringUtil.CollectionToString(dailyRewards) + ","
        + "seasonRewards:" + Luban.StringUtil.CollectionToString(seasonRewards) + ","
        + "}";
    }
}

}

