
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using Luban;


namespace HotFix.Cfg
{
public sealed partial class Quality_CannonSkillQuality : Luban.BeanBase
{
    public Quality_CannonSkillQuality(ByteBuf _buf) 
    {
        id = _buf.ReadInt();
        atlasId = _buf.ReadInt();
        pointSpriteName = _buf.ReadString();
        lockSpriteName = _buf.ReadString();
        colorNumLight = _buf.ReadString();
        {int __n0 = System.Math.Min(_buf.ReadSize(), _buf.Size);colorNumDark = new string[__n0];for(var __index0 = 0 ; __index0 < __n0 ; __index0++) { string __e0;__e0 = _buf.ReadString(); colorNumDark[__index0] = __e0;}}
        assaultGrid = _buf.ReadString();
    }

    public static Quality_CannonSkillQuality DeserializeQuality_CannonSkillQuality(ByteBuf _buf)
    {
        return new Quality_CannonSkillQuality(_buf);
    }

    /// <summary>
    /// qualityId
    /// </summary>
    public readonly int id;
    /// <summary>
    /// 字母图集
    /// </summary>
    public readonly int atlasId;
    /// <summary>
    /// 字母切片名称
    /// </summary>
    public readonly string pointSpriteName;
    /// <summary>
    /// 锁切片名称
    /// </summary>
    public readonly string lockSpriteName;
    /// <summary>
    /// 统一品质颜色
    /// </summary>
    public readonly string colorNumLight;
    /// <summary>
    /// 统一品质颜色
    /// </summary>
    public readonly string[] colorNumDark;
    /// <summary>
    /// 异星突击格子颜色名
    /// </summary>
    public readonly string assaultGrid;
   
    public const int __ID__ = 1181287051;
    public override int GetTypeId() => __ID__;

    public  void ResolveRef(Tables tables)
    {
    }

    public override string ToString()
    {
        return "{ "
        + "id:" + id + ","
        + "atlasId:" + atlasId + ","
        + "pointSpriteName:" + pointSpriteName + ","
        + "lockSpriteName:" + lockSpriteName + ","
        + "colorNumLight:" + colorNumLight + ","
        + "colorNumDark:" + Luban.StringUtil.CollectionToString(colorNumDark) + ","
        + "assaultGrid:" + assaultGrid + ","
        + "}";
    }
}

}

