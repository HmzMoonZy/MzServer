
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using Luban;


namespace HotFix.Cfg
{
public sealed partial class Mount_MountAwake : Luban.BeanBase
{
    public Mount_MountAwake(ByteBuf _buf) 
    {
        id = _buf.ReadInt();
        AwakeLevel = _buf.ReadInt();
        {int __n0 = System.Math.Min(_buf.ReadSize(), _buf.Size);AwakeCost = new string[__n0];for(var __index0 = 0 ; __index0 < __n0 ; __index0++) { string __e0;__e0 = _buf.ReadString(); AwakeCost[__index0] = __e0;}}
        hpFactor = _buf.ReadInt();
        SkillLevel = _buf.ReadInt();
        {int __n0 = System.Math.Min(_buf.ReadSize(), _buf.Size);initSkill = new int[__n0];for(var __index0 = 0 ; __index0 < __n0 ; __index0++) { int __e0;__e0 = _buf.ReadInt(); initSkill[__index0] = __e0;}}
        initSkillSimple = _buf.ReadString();
        UpDescribe = _buf.ReadString();
        {int __n0 = System.Math.Min(_buf.ReadSize(), _buf.Size);attribute = new string[__n0];for(var __index0 = 0 ; __index0 < __n0 ; __index0++) { string __e0;__e0 = _buf.ReadString(); attribute[__index0] = __e0;}}
        {int __n0 = System.Math.Min(_buf.ReadSize(), _buf.Size);power = new int[__n0];for(var __index0 = 0 ; __index0 < __n0 ; __index0++) { int __e0;__e0 = _buf.ReadInt(); power[__index0] = __e0;}}
        {int __n0 = System.Math.Min(_buf.ReadSize(), _buf.Size);activePower = new int[__n0];for(var __index0 = 0 ; __index0 < __n0 ; __index0++) { int __e0;__e0 = _buf.ReadInt(); activePower[__index0] = __e0;}}
    }

    public static Mount_MountAwake DeserializeMount_MountAwake(ByteBuf _buf)
    {
        return new Mount_MountAwake(_buf);
    }

    /// <summary>
    /// 对应advanceMount里的ID<br/>id*100+level
    /// </summary>
    public readonly int id;
    /// <summary>
    /// 觉醒等级
    /// </summary>
    public readonly int AwakeLevel;
    /// <summary>
    /// 觉醒消耗
    /// </summary>
    public readonly string[] AwakeCost;
    /// <summary>
    /// 血量系数(万分比)
    /// </summary>
    public readonly int hpFactor;
    /// <summary>
    /// 骑乘技能等级
    /// </summary>
    public readonly int SkillLevel;
    /// <summary>
    /// 骑乘技能
    /// </summary>
    public readonly int[] initSkill;
    /// <summary>
    /// 骑乘技能简略版
    /// </summary>
    public readonly string initSkillSimple;
    /// <summary>
    /// 升级预览描述
    /// </summary>
    public readonly string UpDescribe;
    /// <summary>
    /// 觉醒属性
    /// </summary>
    public readonly string[] attribute;
    /// <summary>
    /// 层数2万分比战力<br/>层数3万分比战力<br/>（拥有增加战力）
    /// </summary>
    public readonly int[] power;
    /// <summary>
    /// 层数2万分比战力<br/>层数3万分比战力<br/>（上阵增加战力）
    /// </summary>
    public readonly int[] activePower;
   
    public const int __ID__ = 90297618;
    public override int GetTypeId() => __ID__;

    public  void ResolveRef(Tables tables)
    {
    }

    public override string ToString()
    {
        return "{ "
        + "id:" + id + ","
        + "AwakeLevel:" + AwakeLevel + ","
        + "AwakeCost:" + Luban.StringUtil.CollectionToString(AwakeCost) + ","
        + "hpFactor:" + hpFactor + ","
        + "SkillLevel:" + SkillLevel + ","
        + "initSkill:" + Luban.StringUtil.CollectionToString(initSkill) + ","
        + "initSkillSimple:" + initSkillSimple + ","
        + "UpDescribe:" + UpDescribe + ","
        + "attribute:" + Luban.StringUtil.CollectionToString(attribute) + ","
        + "power:" + Luban.StringUtil.CollectionToString(power) + ","
        + "activePower:" + Luban.StringUtil.CollectionToString(activePower) + ","
        + "}";
    }
}

}

