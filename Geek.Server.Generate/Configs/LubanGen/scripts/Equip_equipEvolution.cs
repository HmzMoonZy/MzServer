
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using Luban;


namespace HotFix.Cfg
{
public sealed partial class Equip_equipEvolution : Luban.BeanBase
{
    public Equip_equipEvolution(ByteBuf _buf) 
    {
        id = _buf.ReadInt();
        evolutionLevel = _buf.ReadInt();
        nextID = _buf.ReadInt();
        {int __n0 = System.Math.Min(_buf.ReadSize(), _buf.Size);evolutionCost = new string[__n0];for(var __index0 = 0 ; __index0 < __n0 ; __index0++) { string __e0;__e0 = _buf.ReadString(); evolutionCost[__index0] = __e0;}}
        {int __n0 = System.Math.Min(_buf.ReadSize(), _buf.Size);evolutionAttributes = new long[__n0];for(var __index0 = 0 ; __index0 < __n0 ; __index0++) { long __e0;__e0 = _buf.ReadLong(); evolutionAttributes[__index0] = __e0;}}
        unlockType = _buf.ReadInt();
        {int __n0 = System.Math.Min(_buf.ReadSize(), _buf.Size);talentLimit = new int[__n0];for(var __index0 = 0 ; __index0 < __n0 ; __index0++) { int __e0;__e0 = _buf.ReadInt(); talentLimit[__index0] = __e0;}}
        unlockDesc = _buf.ReadString();
        maxLevel = _buf.ReadInt();
        {int __n0 = System.Math.Min(_buf.ReadSize(), _buf.Size);upgradeAttributes = new long[__n0];for(var __index0 = 0 ; __index0 < __n0 ; __index0++) { long __e0;__e0 = _buf.ReadLong(); upgradeAttributes[__index0] = __e0;}}
        {int __n0 = System.Math.Min(_buf.ReadSize(), _buf.Size);powerLvl = new string[__n0];for(var __index0 = 0 ; __index0 < __n0 ; __index0++) { string __e0;__e0 = _buf.ReadString(); powerLvl[__index0] = __e0;}}
    }

    public static Equip_equipEvolution DeserializeEquip_equipEvolution(ByteBuf _buf)
    {
        return new Equip_equipEvolution(_buf);
    }

    /// <summary>
    /// ID<br/>通过装备标签ID*100+突破等级
    /// </summary>
    public readonly int id;
    /// <summary>
    /// 突破等级
    /// </summary>
    public readonly int evolutionLevel;
    /// <summary>
    /// 下一等级ID 满级为0
    /// </summary>
    public readonly int nextID;
    /// <summary>
    /// 突破消耗
    /// </summary>
    public readonly string[] evolutionCost;
    /// <summary>
    /// 本阶段初始属性
    /// </summary>
    public readonly long[] evolutionAttributes;
    /// <summary>
    /// 1要求天赋<br/>2要求传承
    /// </summary>
    public readonly int unlockType;
    /// <summary>
    /// 天赋阶数限制
    /// </summary>
    public readonly int[] talentLimit;
    /// <summary>
    /// 解锁多语言
    /// </summary>
    public readonly string unlockDesc;
    /// <summary>
    /// 强化等级上限
    /// </summary>
    public readonly int maxLevel;
    /// <summary>
    /// 每级强化属性
    /// </summary>
    public readonly long[] upgradeAttributes;
    /// <summary>
    /// 基础战力,万分比战力,固定值战力<br/>本级战力
    /// </summary>
    public readonly string[] powerLvl;
   
    public const int __ID__ = -1931321030;
    public override int GetTypeId() => __ID__;

    public  void ResolveRef(Tables tables)
    {
    }

    public override string ToString()
    {
        return "{ "
        + "id:" + id + ","
        + "evolutionLevel:" + evolutionLevel + ","
        + "nextID:" + nextID + ","
        + "evolutionCost:" + Luban.StringUtil.CollectionToString(evolutionCost) + ","
        + "evolutionAttributes:" + Luban.StringUtil.CollectionToString(evolutionAttributes) + ","
        + "unlockType:" + unlockType + ","
        + "talentLimit:" + Luban.StringUtil.CollectionToString(talentLimit) + ","
        + "unlockDesc:" + unlockDesc + ","
        + "maxLevel:" + maxLevel + ","
        + "upgradeAttributes:" + Luban.StringUtil.CollectionToString(upgradeAttributes) + ","
        + "powerLvl:" + Luban.StringUtil.CollectionToString(powerLvl) + ","
        + "}";
    }
}

}

