
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using Luban;


namespace HotFix.Cfg
{
public sealed partial class ChapterHard_chapterHard : Luban.BeanBase
{
    public ChapterHard_chapterHard(ByteBuf _buf) 
    {
        id = _buf.ReadInt();
        nameId = _buf.ReadString();
        nameId_back = _buf.ReadString();
        atlasId = _buf.ReadInt();
        icon = _buf.ReadString();
        unlockChapterID = _buf.ReadInt();
        mapID = _buf.ReadInt();
        {int __n0 = System.Math.Min(_buf.ReadSize(), _buf.Size);cost = new int[__n0];for(var __index0 = 0 ; __index0 < __n0 ; __index0++) { int __e0;__e0 = _buf.ReadInt(); cost[__index0] = __e0;}}
        itemLimit = _buf.ReadInt();
        extraReward = _buf.ReadInt();
        {int __n0 = System.Math.Min(_buf.ReadSize(), _buf.Size);rewardStage = new int[__n0];for(var __index0 = 0 ; __index0 < __n0 ; __index0++) { int __e0;__e0 = _buf.ReadInt(); rewardStage[__index0] = __e0;}}
        {int __n0 = System.Math.Min(_buf.ReadSize(), _buf.Size);reward = new int[__n0];for(var __index0 = 0 ; __index0 < __n0 ; __index0++) { int __e0;__e0 = _buf.ReadInt(); reward[__index0] = __e0;}}
        totalWave = _buf.ReadInt();
        {int __n0 = System.Math.Min(_buf.ReadSize(), _buf.Size);monsterCfg = new string[__n0];for(var __index0 = 0 ; __index0 < __n0 ; __index0++) { string __e0;__e0 = _buf.ReadString(); monsterCfg[__index0] = __e0;}}
        firstSelectSkill = _buf.ReadInt();
        {int __n0 = System.Math.Min(_buf.ReadSize(), _buf.Size);otherSelectSkill = new string[__n0];for(var __index0 = 0 ; __index0 < __n0 ; __index0++) { string __e0;__e0 = _buf.ReadString(); otherSelectSkill[__index0] = __e0;}}
        {int __n0 = System.Math.Min(_buf.ReadSize(), _buf.Size);dropID = new int[__n0];for(var __index0 = 0 ; __index0 < __n0 ; __index0++) { int __e0;__e0 = _buf.ReadInt(); dropID[__index0] = __e0;}}
        {int __n0 = System.Math.Min(_buf.ReadSize(), _buf.Size);buffData = new string[__n0];for(var __index0 = 0 ; __index0 < __n0 ; __index0++) { string __e0;__e0 = _buf.ReadString(); buffData[__index0] = __e0;}}
        normalBattleAttr = _buf.ReadString();
        eliteBattleAttr = _buf.ReadString();
        bossBattleAttr = _buf.ReadString();
        speedAdd = _buf.ReadInt();
        jumpPower = _buf.ReadString();
        {int __n0 = System.Math.Min(_buf.ReadSize(), _buf.Size);jumpReward = new string[__n0];for(var __index0 = 0 ; __index0 < __n0 ; __index0++) { string __e0;__e0 = _buf.ReadString(); jumpReward[__index0] = __e0;}}
    }

    public static ChapterHard_chapterHard DeserializeChapterHard_chapterHard(ByteBuf _buf)
    {
        return new ChapterHard_chapterHard(_buf);
    }

    /// <summary>
    /// ID
    /// </summary>
    public readonly int id;
    /// <summary>
    /// 章节名ID
    /// </summary>
    public readonly string nameId;
    /// <summary>
    /// 章节名后缀
    /// </summary>
    public readonly string nameId_back;
    /// <summary>
    /// 图集ID
    /// </summary>
    public readonly int atlasId;
    /// <summary>
    /// icon名称
    /// </summary>
    public readonly string icon;
    /// <summary>
    /// 解锁章节
    /// </summary>
    public readonly int unlockChapterID;
    /// <summary>
    /// 地图ID
    /// </summary>
    public readonly int mapID;
    /// <summary>
    /// 消耗体力<br/>货币id|数量
    /// </summary>
    public readonly int[] cost;
    /// <summary>
    /// 薪火之证最多获得
    /// </summary>
    public readonly int itemLimit;
    /// <summary>
    /// 根据战力差额外获得
    /// </summary>
    public readonly int extraReward;
    /// <summary>
    /// 天数宝箱对应天数
    /// </summary>
    public readonly int[] rewardStage;
    /// <summary>
    /// 天数宝箱对应奖励ID
    /// </summary>
    public readonly int[] reward;
    /// <summary>
    /// 总波次
    /// </summary>
    public readonly int totalWave;
    /// <summary>
    /// 对阵<br/>最小波次,最大波次,事件ID,|
    /// </summary>
    public readonly string[] monsterCfg;
    /// <summary>
    /// 首次选技能
    /// </summary>
    public readonly int firstSelectSkill;
    /// <summary>
    /// 除首次外选技能
    /// </summary>
    public readonly string[] otherSelectSkill;
    /// <summary>
    /// 普通|精英|BOSS<br/>掉落ID
    /// </summary>
    public readonly int[] dropID;
    /// <summary>
    /// 怪物信息<br/>攻击增益|防御增益|生命值增益
    /// </summary>
    public readonly string[] buffData;
    /// <summary>
    /// 普通三围战斗属性加成
    /// </summary>
    public readonly string normalBattleAttr;
    /// <summary>
    /// 精英三围战斗属性加成
    /// </summary>
    public readonly string eliteBattleAttr;
    /// <summary>
    /// boss三围战属性加成
    /// </summary>
    public readonly string bossBattleAttr;
    /// <summary>
    /// 速度加成(万分比)
    /// </summary>
    public readonly int speedAdd;
    /// <summary>
    /// 跳过所需战力
    /// </summary>
    public readonly string jumpPower;
    /// <summary>
    /// 跳过获得奖励
    /// </summary>
    public readonly string[] jumpReward;
   
    public const int __ID__ = 240072657;
    public override int GetTypeId() => __ID__;

    public  void ResolveRef(Tables tables)
    {
    }

    public override string ToString()
    {
        return "{ "
        + "id:" + id + ","
        + "nameId:" + nameId + ","
        + "nameId_back:" + nameId_back + ","
        + "atlasId:" + atlasId + ","
        + "icon:" + icon + ","
        + "unlockChapterID:" + unlockChapterID + ","
        + "mapID:" + mapID + ","
        + "cost:" + Luban.StringUtil.CollectionToString(cost) + ","
        + "itemLimit:" + itemLimit + ","
        + "extraReward:" + extraReward + ","
        + "rewardStage:" + Luban.StringUtil.CollectionToString(rewardStage) + ","
        + "reward:" + Luban.StringUtil.CollectionToString(reward) + ","
        + "totalWave:" + totalWave + ","
        + "monsterCfg:" + Luban.StringUtil.CollectionToString(monsterCfg) + ","
        + "firstSelectSkill:" + firstSelectSkill + ","
        + "otherSelectSkill:" + Luban.StringUtil.CollectionToString(otherSelectSkill) + ","
        + "dropID:" + Luban.StringUtil.CollectionToString(dropID) + ","
        + "buffData:" + Luban.StringUtil.CollectionToString(buffData) + ","
        + "normalBattleAttr:" + normalBattleAttr + ","
        + "eliteBattleAttr:" + eliteBattleAttr + ","
        + "bossBattleAttr:" + bossBattleAttr + ","
        + "speedAdd:" + speedAdd + ","
        + "jumpPower:" + jumpPower + ","
        + "jumpReward:" + Luban.StringUtil.CollectionToString(jumpReward) + ","
        + "}";
    }
}

}

